{
    "subreddit_info": {
        "name": "reactjs",
        "title": "/r/ReactJS - The Front Page of React",
        "subscribers": 430986,
        "public_description": "A community for discussing anything related to the React UI framework and its ecosystem.  Join the Reactiflux Discord (reactiflux.com) for additional React discussion and help."
    },
    "posts": [
        {
            "id": "1gsgj83",
            "title": "Would you pay for a UI library for which costs 5$ a month and has almost all UI components?",
            "author": "Happy_Web_341",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 8,
            "created_utc": 1731735707.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/",
            "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/",
            "selftext": "I was thinking to create a UI library that contains everything at one place, it can be similar to Acertinity UI, but have all the sections that a website can need, such as admin dashboards, add blog page, home pages, components, about pages, footers. You name it we have it sort of.\n\nUser can select their own theme, colors, buttons, fonts or choose from premade color pallets. This would require less work after copy pasting. Existing free UI components just give the component then we would need to match it according to our theme which again becomes extra work.\n\nWe would provide components that match the user’s website theme and feel.\n\nIn the long long run, it can also have both developer components and nocode website builder for those who don’t know how to code.\n\nWhat do you think about it?",
            "comments": [
                {
                    "id": "lxe4qcn",
                    "author": "DiddlyDinq",
                    "body": "There's already a lot of services that do this",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731735988.0,
                    "parent_id": "t3_1gsgj83",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe4qcn/"
                },
                {
                    "id": "lxe6m7h",
                    "author": "DasBeasto",
                    "body": "I would not. I’d consider buying with a one time payment similar to tailwindui.com but a UI library is not something I’d subscribe to.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731736881.0,
                    "parent_id": "t3_1gsgj83",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe6m7h/"
                },
                {
                    "id": "lxe6vbn",
                    "author": "TheJuralRuror",
                    "body": "This sounds like the ideas I have when im hopped up on adderall",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731737003.0,
                    "parent_id": "t3_1gsgj83",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe6vbn/"
                },
                {
                    "id": "lxe7chx",
                    "author": "terrorTrain",
                    "body": "5 a month? Hell no. \n\nIt would have to be the best damn component system ever, and even then, there's lots of open source stuff where I didn't need to deal with licensing bullshit, and the area of if you are going to keep it supported for the life of my product",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731737238.0,
                    "parent_id": "t3_1gsgj83",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe7chx/"
                },
                {
                    "id": "lxe7pa8",
                    "author": "nomoreplsthx",
                    "body": "Hell no. I would never in a million years use a library that was not free and open source. Too much risk if I can't read and modify the source if necessary. I don't want to have someone change their ToS on me and watch my app go down. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731737416.0,
                    "parent_id": "t3_1gsgj83",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe7pa8/"
                },
                {
                    "id": "lxe50ed",
                    "author": "idontknowthiswilldo",
                    "body": "Like what?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731736119.0,
                    "parent_id": "t1_lxe4qcn",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe50ed/"
                },
                {
                    "id": "lxe5c0c",
                    "author": "MrWewert",
                    "body": "MUI? not react but Bootstrap also has similar paid features",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731736268.0,
                    "parent_id": "t1_lxe50ed",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe5c0c/"
                },
                {
                    "id": "lxe5eep",
                    "author": "DiddlyDinq",
                    "body": "just google modular ui framework.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731736299.0,
                    "parent_id": "t1_lxe50ed",
                    "link_id": "t3_1gsgj83",
                    "permalink": "/r/reactjs/comments/1gsgj83/would_you_pay_for_a_ui_library_for_which_costs_5/lxe5eep/"
                }
            ]
        },
        {
            "id": "1gsezwj",
            "title": "component diagram examples",
            "author": "mrdanmarks",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 3,
            "created_utc": 1731729688.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gsezwj/component_diagram_examples/",
            "permalink": "/r/reactjs/comments/1gsezwj/component_diagram_examples/",
            "selftext": "are there any publicly available diagrams of components and their interactions, parameters you would use as guide? I'm wanting to document some of the features within my app, including functions I pass down, hooks being called, and data getting passed back. its starting to look like a mess. what are some standards around this?",
            "comments": [
                {
                    "id": "lxdt2f0",
                    "author": "mrdanmarks",
                    "body": "plugins that are confluence friendly gladly welcomed",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731730410.0,
                    "parent_id": "t3_1gsezwj",
                    "link_id": "t3_1gsezwj",
                    "permalink": "/r/reactjs/comments/1gsezwj/component_diagram_examples/lxdt2f0/"
                },
                {
                    "id": "lxe8t4j",
                    "author": "hennythingizzpossibl",
                    "body": "Following",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731737979.0,
                    "parent_id": "t3_1gsezwj",
                    "link_id": "t3_1gsezwj",
                    "permalink": "/r/reactjs/comments/1gsezwj/component_diagram_examples/lxe8t4j/"
                },
                {
                    "id": "lxef92n",
                    "author": "eindbaas",
                    "body": "Using storybook is a good way to document your components",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731741679.0,
                    "parent_id": "t3_1gsezwj",
                    "link_id": "t3_1gsezwj",
                    "permalink": "/r/reactjs/comments/1gsezwj/component_diagram_examples/lxef92n/"
                }
            ]
        },
        {
            "id": "1gsebuj",
            "title": "Component Test files Colocate vs Separate",
            "author": "sjrhee",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731727408.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gsebuj/component_test_files_colocate_vs_separate/",
            "permalink": "/r/reactjs/comments/1gsebuj/component_test_files_colocate_vs_separate/",
            "selftext": "I can see many practices are creating component test files colocating in the same directory. But why Frontend world is doing this? Most of Backend folder structure seems they create separate “test” directory not inside of “src”, but seems not in react world. Is there any technical reason? ",
            "comments": [
                {
                    "id": "lxefrfr",
                    "author": "ORCANZ",
                    "body": "Backend world does this as well with screaming architecture / feature slicing",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731742001.0,
                    "parent_id": "t3_1gsebuj",
                    "link_id": "t3_1gsebuj",
                    "permalink": "/r/reactjs/comments/1gsebuj/component_test_files_colocate_vs_separate/lxefrfr/"
                }
            ]
        },
        {
            "id": "1gs3l4w",
            "title": "Mid level project ideas to understand and deep dive into react concepts ",
            "author": "ThatAside7401",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731696547.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gs3l4w/mid_level_project_ideas_to_understand_and_deep/",
            "permalink": "/r/reactjs/comments/1gs3l4w/mid_level_project_ideas_to_understand_and_deep/",
            "selftext": "Plane reactjs with tanstack query and zustand ",
            "comments": [
                {
                    "id": "lxb97mp",
                    "author": "1MStudio",
                    "body": "I mean, can go with a Property Management site, with role based dashboards and full CRUD ops. This would include everything from relational db’s, permissions, auth, state based on permissions, contexts to pass context around, etc..\n\nWhat exactly do you mean by “mid level”? I’m a learning dev and I only build full stack projects. I just keep them basic with few crud features",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731698142.0,
                    "parent_id": "t3_1gs3l4w",
                    "link_id": "t3_1gs3l4w",
                    "permalink": "/r/reactjs/comments/1gs3l4w/mid_level_project_ideas_to_understand_and_deep/lxb97mp/"
                },
                {
                    "id": "lxbblu7",
                    "author": "ThatAside7401",
                    "body": "Could you share GitHub repo for any projects with role based Auth",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731698861.0,
                    "parent_id": "t1_lxb97mp",
                    "link_id": "t3_1gs3l4w",
                    "permalink": "/r/reactjs/comments/1gs3l4w/mid_level_project_ideas_to_understand_and_deep/lxbblu7/"
                }
            ]
        },
        {
            "id": "1grz6ng",
            "title": "Leo Query v0.2.0",
            "author": "steaks88",
            "score": 16,
            "upvotes": 16,
            "downvotes": 0,
            "num_comments": 23,
            "created_utc": 1731685361.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grz6ng/leo_query_v020/",
            "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/",
            "selftext": "Hey r/reactjs! About two months ago, I shared [Leo Query](https://github.com/steaks/leo-query), a library to connect async queries with Zustand. I'm excited to announce [v0.2.0](https://github.com/steaks/leo-query/releases/tag/v0.2.0)! Version 0.2.0 includes retries, stale data timers, and developer ergonomic improvements.\n\nHere's an example of how to use the library:\n\n```typescript jsx\nconst useBearStore = create(() => ({\n  increasePopulation: effect(increasePopulation)\n  bears: query(fetchBears, s => [s.increasePopulation])\n}));\n\nconst useBearStoreAsync = hook(useBearStore);\n\nfunction BearCounter() {\n  const bears = useBearStoreAsync(state => state.bears);\n  return <h1>{bears} around here ...</h1>;\n}\n\nfunction Controls() {\n  const increasePopulation = useBearStore(state => state.increasePopulation.trigger);\n  return <button onClick={increasePopulation}>one up</button>;\n}\n\nfunction App() {\n  return (\n    <>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <BearCounter />\n      </Suspense>\n      <Controls />\n    </>\n  );\n}\n```\n\n**Links:**\n\n- [Github](https://github.com/steaks/leo-query)\n- [Docs](https://leoquery.com)\n- [Discord](https://discord.gg/aucYm6hMsJ)\n\nHope you like it!",
            "comments": [
                {
                    "id": "lxa7ben",
                    "author": "MimAg92",
                    "body": "Hey, congrats on the new release! Could you explain what problem it's aiming to solve?",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731686902.0,
                    "parent_id": "t3_1grz6ng",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxa7ben/"
                },
                {
                    "id": "lxa7ye1",
                    "author": "steaks88",
                    "body": "I love Zustand for it's simplicity. Zustand doesn't manage async data. The most commonly recommendation to handle async data is to use Zustand with Tanstack Query side-by-side. Tanstack is great, but managing the two state management systems makes the code more complicated. So I built Leo Query - a data fetching library that plugs directly into Zustand.\n\nHere is a comparison of how you may build a TODOs app with Tanstack Query vs. Leo Query:\n\n\n*Zustand + TanStack Query Approach*\n\n```typescript\n// Store frontend state in Zustand\nconst useStore = create<FilterStore>((set) => ({\n  filter: \"all\", // all | active | completed\n  setFilter: (filter) => set({ filter }),\n}));\n\nconst filterTodos = (todos: Todo[], filter: string) => {\n  if (filter === \"all\") return todos;\n  if (filter === \"active\") return todos.filter(todo => !todo.completed);\n  if (filter === \"completed\") return todos.filter(todo => todo.completed);\n  throw new Error(`Invalid filter: ${filter}`);\n};\n\nfunction TodoItems() {\n  const filter = useStore(state => state.filter);\n  // Fetch todos with Tanstack Query\n  const {data: todos} = useQuery({queryKey: [\"todos\"], queryFn: fetchTodos });\n  const filteredTodos = filterTodos(todos ?? [], filter);\n\n  return <ul>{filteredTodos.map(/.../)}</ul>;\n}\n\nfunction CreateTodo() {\n  const queryClient = useQueryClient();\n  // Create todo with Tanstack Query\n  const mutation = useMutation({\n    mutationFn: createTodo,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"todos\"] });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const content = e.currentTarget.content.value;\n    mutation.mutate(content);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"content\" type=\"text\" />\n      <button type=\"submit\" disabled={mutation.isPending}>\n        Create Todo\n      </button>\n    </form>\n  );\n}\n```\n\n*Zustand + Leo Query Approach*\n\n```typescript\nconst useStore = create<TodoStore>((set) => ({\n  // Async state\n  todos: query(fetchTodos, s => [s.createTodo]),\n  createTodo: effect(createTodo),\n  // Frontend state\n  filter: \"all\", // all | active | completed\n  setFilter: (filter) => set({ filter }),\n}));\n\nconst useStoreAsync = hook(useStore); //Hook into async state\n\nconst filterTodos = (todos: Todo[], filter: string) => {\n  if (filter === \"all\") return todos;\n  if (filter === \"active\") return todos.filter(todo => !todo.completed);\n  if (filter === \"completed\") return todos.filter(todo => todo.completed);\n  throw new Error(`Invalid filter: ${filter}`);\n};\n\nfunction TodoItems() {\n  const todos = useStoreAsync(state => state.todos);\n  const filter = useStore(state => state.filter);\n  const filteredTodos = filterTodos(todos, filter);\n\n  return <ul>{filteredTodos.map(/.../)}</ul>;\n}\n\nfunction CreateTodo() {\n  const createTodo = useStore(state => state.createTodo.trigger);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const content = form.content.value;\n    createTodo(content);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"content\" type=\"text\" />\n      <button type=\"submit\">Create Todo</button>\n    </form>\n  );\n}\n```",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731687092.0,
                    "parent_id": "t3_1grz6ng",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxa7ye1/"
                },
                {
                    "id": "lxaac8e",
                    "author": "West-Chemist-9219",
                    "body": "Your definition of less complexity is my definition of unmaintainability.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731687797.0,
                    "parent_id": "t3_1grz6ng",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxaac8e/"
                },
                {
                    "id": "lxaod4y",
                    "author": "TheRealSeeThruHead",
                    "body": "I think there should be a purposeful separation between client and server state. So combining tanstack query with zustand or news would be my preferred method.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731691947.0,
                    "parent_id": "t3_1grz6ng",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxaod4y/"
                },
                {
                    "id": "lxaurf1",
                    "author": "bluebird355",
                    "body": "Isn't that just recreating redux with getters and setters?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731693855.0,
                    "parent_id": "t3_1grz6ng",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxaurf1/"
                },
                {
                    "id": "lxa8hd0",
                    "author": "steaks88",
                    "body": "Thanks! Zustand doesn't support managing async data fetching natively. So if you're using Zustand you'll need to manage tricky edge cases or pull in a separate library to manage fetching & state for you async data (e.g. Tanstack Query).\n\nBoth of these solutions make the code more complex. So I built Leo Query to help keep codebases simple while also handling tricky edge cases with async data.\n\nHere's a more in-depth [explanation](https://leoquery.com/why.html).",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731687248.0,
                    "parent_id": "t1_lxa7ben",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxa8hd0/"
                },
                {
                    "id": "lxaore8",
                    "author": "TheRealSeeThruHead",
                    "body": "There doesn’t seem to be any reason to use stand at all in this code.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731692065.0,
                    "parent_id": "t1_lxa7ye1",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxaore8/"
                },
                {
                    "id": "lxcb2kr",
                    "author": "alicanso",
                    "body": "Yes zustand is more simple than redux but zustand is not simple. Subscription pattern is ugly and unnecessary. Try valtio and explore proxy objects.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731709866.0,
                    "parent_id": "t1_lxa7ye1",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxcb2kr/"
                },
                {
                    "id": "lxabtrc",
                    "author": "steaks88",
                    "body": "Appreciate you taking a look. What parts of the example code snippet or architecture would be less maintainable?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731688235.0,
                    "parent_id": "t1_lxaac8e",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxabtrc/"
                },
                {
                    "id": "lxau99a",
                    "author": "steaks88",
                    "body": "Thanks for the feedback. I've heard other people say like doing this too, so I want to understand it deeper. \n\nWith Leo Query I'm trying to separate client vs. server data lifecycles. Server data lifecycles work differently. With server data you need to cache differently, mark stale differently, handle loading states, etc. But when lifecycles are handled, data is just data. So Leo Query takes the approach of keeping the data together.\n\nHelp me understand, do you find it important to separate the data lifecycles, where the data is stored, or both? And if you want to explicitely keep where the data is stored, how does it make your code cleaner? \n\nThanks!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731693703.0,
                    "parent_id": "t1_lxaod4y",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxau99a/"
                },
                {
                    "id": "lxba5cj",
                    "author": "steaks88",
                    "body": "I think a good comparision is to Redux's [RTK Query](https://redux-toolkit.js.org/rtk-query/overview).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731698425.0,
                    "parent_id": "t1_lxaurf1",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxba5cj/"
                },
                {
                    "id": "lxapenx",
                    "author": "MimAg92",
                    "body": "Thanks",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731692259.0,
                    "parent_id": "t1_lxa8hd0",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxapenx/"
                },
                {
                    "id": "lxbe0j2",
                    "author": "notsoluckycharm",
                    "body": "It’s not clear from the linked document, but is your code automatically doing cache invalidation as you are doing with tanstack? Tanstack also supports optimistic updates, does your implementation? Is that what the second param to query is for? Retrigger on invocation? What if the mutation fails? How is error state surfaced?\n\nInteresting project!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731699610.0,
                    "parent_id": "t1_lxa8hd0",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxbe0j2/"
                },
                {
                    "id": "lxauyhl",
                    "author": "steaks88",
                    "body": "Here's a more fully-fledged [example](https://xsh8c4.csb.app/) of this snippet. As the app gets more complex, Zustand becomes more useful.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731693914.0,
                    "parent_id": "t1_lxaore8",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxauyhl/"
                },
                {
                    "id": "lxai2c4",
                    "author": "West-Chemist-9219",
                    "body": "The examples are running into an infinite loop on mobile I guess?\n\nI think the whole effect syntax adds complexity overhead. I don’t see this being an easier-to-understand/maintain alternative when compared to React Query (which already solves this issue). What’s the array with the actions in the callback in the params of query in the store? It looks very convoluted to me.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731690072.0,
                    "parent_id": "t1_lxabtrc",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxai2c4/"
                },
                {
                    "id": "lxawv72",
                    "author": "TheRealSeeThruHead",
                    "body": "the main thing is that the point of the abstraction that tanstack-query provides is that i can treat my server data as living solely on the server, while reaping the benefits of auto managed client state.\n\nthis is the reason it is good and it exists at all  \nonce you start using tanstack as just a query tool and putting that data into another state management store it negates all of it's benefits",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731694485.0,
                    "parent_id": "t1_lxau99a",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxawv72/"
                },
                {
                    "id": "lxbhqpl",
                    "author": "steaks88",
                    "body": "Woah! Thanks for taking such a deep look. Those are really good questions.\n\n**Cache invalidation**\n\nYep, it's automatically doing cache invalidation.\n\n**Optimistic updates**\n\nHere's an [example](https://github.com/steaks/leo-query/blob/main/examples/task-manager/src/App.tsx#L115) of an optimistic update. Plan to add a [guide](https://github.com/steaks/leo-query/issues/22) for that in the docs.\n\n**Re-trigger on invocation**\n\nThe query will re-trigger immediately when a depencency changes if `{lazy: false}`. And it will wait to re-trigger when data is being accessed in a react component if `{lazy: true}`. You can pass in `lazy` as the third parameter in `query`. It defaults to lazy.\n\n**If mutation fails**\n\nLeo Query won't do anything. Improvements for handling mutation failures is a great callout. This is how you would handle mutation failures with this version.\n```\nyourEffect: effect(async () => {\n  try {\n    //make optimistic updates\n    await post(\"foo/bar/baz\");\n  } catch (e) {\n    //rollback optimistic updates\n    //rethrow error (if you'd like to use your normal error catching services)\n  }\n})\n```\n\nNote: queries do support error state. So if a fetch (non-mutation) failed it'd be propagated to an error boundary. Or if you prefer not using error boundaries you can plug into an error directly `const {error, isLoading, value} = useMyHookAsync(s => s.myData)`.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731700773.0,
                    "parent_id": "t1_lxbe0j2",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxbhqpl/"
                },
                {
                    "id": "lxaxlte",
                    "author": "TheRealSeeThruHead",
                    "body": "it's still unclear to me why you need client state at all  \neverything in your store could be \"server state/ actions\" or form state  \nyou dont' even seem to have global state that could be in the url",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731694704.0,
                    "parent_id": "t1_lxauyhl",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxaxlte/"
                },
                {
                    "id": "lxarb9x",
                    "author": "steaks88",
                    "body": "Here's a working example of a [todos app](https://xsh8c4.csb.app/). I haven't seen any infinite loops.\n\nThe array are dependencies of the query. When a dependency changes the query data is marked stale.\n\nMy goal is to make the async data system simpler. So it's really helpful to understand where and why my framework isn't intuitive/simple. What part of these code snippets make Leo Query more unintuitive/complex than Tanstack Query?\n\n```\n//Leo Query\ntodos: query(fetchTodos, s => [s.createTodo]), //todos is marked stale when createTodo succeeds\ncreateTodo: effect(createTodo)\n\n//Tanstack Query\nconst {data: todos} = useQuery({queryKey: [\"todos\"], queryFn: fetchTodos });\nconst mutation = useMutation({\n    mutationFn: createTodo,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"todos\"] }); //todos is marked stale when createTodo succeeds\n    },\n  });\n```\n\nThanks!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731692828.0,
                    "parent_id": "t1_lxai2c4",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxarb9x/"
                },
                {
                    "id": "lxbcfsq",
                    "author": "steaks88",
                    "body": "Is there other data in a task manager app that you'd expect to be stored as global client state but not in the url? I'd consider adding that to make the example more robust.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731699116.0,
                    "parent_id": "t1_lxaxlte",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxbcfsq/"
                },
                {
                    "id": "lxav8lq",
                    "author": "West-Chemist-9219",
                    "body": "The sandbox is broken, not the app!\n\nI would like to make sense of the effects you’re using, but I can’t see the code.\n\n“A problem repeatedly occurred\non “https://codesandbox.io/p/sandbox/xsh\n8C4”.”\n\nSame thing with the bears sandboxes",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731693997.0,
                    "parent_id": "t1_lxarb9x",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxav8lq/"
                },
                {
                    "id": "lxbl1zz",
                    "author": "TheRealSeeThruHead",
                    "body": "Maybe filtering tasks by person assigned? Other stuff like that should be in the query string",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731701785.0,
                    "parent_id": "t1_lxbcfsq",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxbl1zz/"
                },
                {
                    "id": "lxb96mv",
                    "author": "steaks88",
                    "body": "Shoot. https://codesandbox.io/ has been acting up for me recently too. Sorry you're hitting that.\nHere are source files in git that were copied into the sandboxes\n- [bears-ts](https://github.com/steaks/leo-query/blob/main/examples/bears-ts/src/App.tsx)\n- [task-manager](https://github.com/steaks/leo-query/blob/main/examples/task-manager/src/App.tsx)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731698134.0,
                    "parent_id": "t1_lxav8lq",
                    "link_id": "t3_1grz6ng",
                    "permalink": "/r/reactjs/comments/1grz6ng/leo_query_v020/lxb96mv/"
                }
            ]
        },
        {
            "id": "1grxjt7",
            "title": "Issue with PrimeReact MultiSelect Overlay Positioning.",
            "author": "SquarePop9725",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731680871.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grxjt7/issue_with_primereact_multiselect_overlay/",
            "permalink": "/r/reactjs/comments/1grxjt7/issue_with_primereact_multiselect_overlay/",
            "selftext": "I'm currently facing an issue with the PrimeReact MultiSelect component and could use some help from the community. I've implemented some custom logic to enhance the functionality of the MultiSelect component. Here's a brief overview of what I'm trying to achieve:\n\nWhen the MultiSelect overlay panel is shown, a fetch request is made to retrieve a list of options. While this request is being processed, a loading caption is displayed instead of the options list.\n\nThe problem arises because PrimeReact calculates the overlay's position based on its height when only the loading caption is displayed. Once the data is fetched, the overlay's height increases, but the position does not recalculate. This results in the overlay starting to overflow the bottom of the viewport. Ideally, the overlay should be displayed above the input instead of below it when this happens.\n\nHas anyone encountered a similar issue, or does anyone have any ideas on how to force the overlay to recalculate its position after the data is fetched? Any suggestions or workarounds would be greatly appreciated!\n\n  \n[https://ibb.co/9HfJx7D](https://ibb.co/9HfJx7D)\n\n[https://ibb.co/JyVJgnQ](https://ibb.co/JyVJgnQ)\n\n",
            "comments": []
        },
        {
            "id": "1grx96v",
            "title": "What does it mean when people say that using React adds a \"layer\" to your application's architecture?",
            "author": "MimAg92",
            "score": 18,
            "upvotes": 18,
            "downvotes": 0,
            "num_comments": 19,
            "created_utc": 1731680003.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/",
            "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/",
            "selftext": "**Someone mentioned that using React adds a \"layer\" to your application architecture, and I’m curious what exactly does that mean? Can someone explain it, or share a link or a visual reference?**\n\n**I'm not here to debate that opinion at all! I just want to understand what is meant by a layer and gain a better understanding of how these technologies add new layers to an application.**\n\n# Here’s the context:\n\nI'm genuinely curious why, in your app’s architecture, you use React Query, Next.js, or Redux instead of something simpler? Why do you use transactions? Can you explain the story behind it?\n\nLet’s go back to a time when frontend **libraries** and **frameworks** didn’t exist yet, and the best we had was just jQuery. At that time, the server-side would build a page and send it to the client. People would even use tricks like adding a game to a website just to keep users on the page longer.\n\nBut now, everything has changed, and JavaScript frameworks have evolved with their own built-in state management and APIs. These days, every company is trying to move towards building its own tools.\n\nSo why bother using tools like React Query or Redux Toolkit? Well, it’s all about providing convenience and flexibility. Each of them has unique features that make your job easier. But still, you might ask, why do we need to keep adding extra layers (like React and Next.js) instead of going back to basics? Sometimes simplicity is better, and sometimes it’s about solving the problem in the most efficient way possible.\n\nWhen you're using React, you're essentially adding a layer to your app's architecture. You fetch data from the server and pass it to React to handle the rendering for you, using the virtual DOM. So, this becomes an additional layer.\n\nBut why add this layer in the first place? It does come with certain limitations on the client side, such as potential loading delays and SEO challenges. So, what's the alternative? Should we switch to server-side rendering (SSR) instead? Well, the answer isn't always straightforward!\n\nThis is where \\*\\*Next.js\\*\\* comes in. Next.js renders components on the server side, then sends the pre-rendered content to the client. However, it still leverages React as the underlying framework. For more advanced projects, Next.js is often used to efficiently manage server communication while still benefiting from React’s capabilities. This introduces an additional layer dedicated to data management, caching, and optimizing responses.\n\nNow, let’s discuss shared state management. The go-to tool for this is typically \\*\\*Redux\\*\\*, particularly \\*\\*Redux Toolkit\\*\\*. Redux uses a \\*\\*provider\\*\\* to wrap the entire application, effectively adding another layer to manage global state. Without this layer, it would be challenging for different components to share state seamlessly.\n\nFinally, there’s \\*\\*React Query\\*\\*. It excels at managing server-client data fetching and caching. However, its focus isn’t on state management per se, but rather on optimizing data retrieval and caching strategies. In a way, this also introduces a separate layer to your app’s architecture.",
            "comments": [
                {
                    "id": "lx9mx7d",
                    "author": "jamesremuscat",
                    "body": "In software engineering, we talk of adding _layers_ of abstraction. When you write a software program, you (typically) don't have to think about flipping individual 1s and 0s in your computer's RAM - there's a layer of the operating system that handles that, and presents a higher-level - more abstract - interface to software \"above\" it.\n\nIf you're not familiar with the [OSI model](https://en.wikipedia.org/wiki/OSI_model) I would recommend reading up, as it applies a similar mindset to networking. When you make a `fetch` request in JS, you don't need to worry about voltages on the network cable or electromagnetic modulations on a carrier wave because there are logical layers of abstraction between the physical and the application at which you're working.\n\nThe author of the piece you've quoted is describing React as a similar abstraction layer, in this case over the browser's DOM; it deals with (abstracts) DOM updates for us, and we are free to think at a higher level about the UI elements that React calls \"components\".",
                    "score": 81,
                    "upvotes": 81,
                    "downvotes": 0,
                    "created_utc": 1731680539.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9mx7d/"
                },
                {
                    "id": "lx9orqu",
                    "author": "itijara",
                    "body": "Have you ever tried to build a complex web application using just Javascript? You end up re-inventing many of the things that come with React. The main issue is state management and binding data to UI elements. If there is some interaction with the UI (a user clicks a button, or fills in a form) it needs to update the state, which may trigger an update to the UI (e.g. a form submission, showing a UI element, etc.). Similarly, if there is an update to the data (e.g. an XHR request completes) it might need to update the UI. These can occur in many different orders, and the logic for when to update the UI and what to update can get quite complex, potentially leading to undefined behavior. This also impacts performance as doing a global update for every interaction/data update can work, but is expensive. React and Redux provide tools for managing state and UI updates so that 1.) the state management logic is abstracted and simplified (redux uses the concept of a reducer to manage state transitions) and 2.) the UI interaction and update logic is abstracted to ensure that only those things that are changed are updated (this is what occurs with the virtual dom). \n\nI think you have already stated why an application would use NextJS/React Query. They solve specific problems of server-side rendering of react components and fetching/caching data. \n\nI think that some people turn to frameworks too soon for very simple projects that can be managed with vanilla JS, but having worked on legacy applications with hard to manage JS, I think they do simplify things when the UI logic gets complicated.",
                    "score": 17,
                    "upvotes": 17,
                    "downvotes": 0,
                    "created_utc": 1731681155.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9orqu/"
                },
                {
                    "id": "lx9r26n",
                    "author": "nabrok",
                    "body": "> When you use **React**, you're essentially adding an extra **layer** to your application's structure. It retrieves data from the server, processes it, and sends it to React for rendering. \n\nThis is confusingly worded.  As the first sentence talks about react you might assume the \"It\" in the second sentence is also talking about react, which then leads to \"[React] retrieves the data ... and sends it to React ...\".\n\nYou could rewrite it as \"Your application retrieves data from the server, processes it, and sends it to react for rendering.\".",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731681911.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9r26n/"
                },
                {
                    "id": "lxa8x3c",
                    "author": "Risc12",
                    "body": "In this specific context I think they mean that “normally” all interactions via client and server are just simple links and submits. By using react you add a “layer” to the frontend. That layer now handles most of the interactions and does API requests.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731687376.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxa8x3c/"
                },
                {
                    "id": "lxanl9j",
                    "author": "TheRealSeeThruHead",
                    "body": "React is a declarative abstraction over dom manipulation. \n\nIt has its shortcomings though and manual state management in react looks very imperative. \n\nSo you add react query which is a declarative abstraction over server data. \n\nOr redux which is a declarative abstraction over local state. \n\nThe point of declarative abstractions is to make the code simpler. \n\nYes the abstraction may be very complex (look at react) but the mental model it provides and the resulting userland code is much simpler.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731691719.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxanl9j/"
                },
                {
                    "id": "lxaxswc",
                    "author": "ummonadi",
                    "body": "jQuery changes the DOM.\nReact changes the virtual DOM that changes the DOM.\nTanstack Query (React Query) adds a caching layer so your network calls goes through Tanstack query which in turn makes the network request.\n\nA good layer of abstraction is fine. It helps us build code on a higher level instead of using punch cards or writing in assembly.\n\nAll of computing is built on the notion of layers of abstractions.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731694762.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxaxswc/"
                },
                {
                    "id": "lxazsfa",
                    "author": "k_r_a_k_l_e",
                    "body": "These tools became massively popular for a reason. The second you want to roll your own solution, you will be viciously reminded of why these libraries exist. You are adding layers, but it really doesn't make a difference these days. That's an old argument that just doesn't matter.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731695347.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxazsfa/"
                },
                {
                    "id": "lx9zdwz",
                    "author": "iahmbt",
                    "body": "I think someone used AI to generate that entire blurb lol. I mean, the part about react adding a layer isn’t wrong though. The SPA pattern in general pushes logic from the server to the client, and React adds an additional abstraction layer on top of vanilla JS.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731684517.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9zdwz/"
                },
                {
                    "id": "lxbv6mu",
                    "author": "FilmWeasle",
                    "body": "One needs to consider what a web application would look like without React. For the sake of the discussion, consider what it would look like without JavaScript. The UI is generated server side. Maybe I'm using a framework like Django, which, for back-end, is far better than popular JS frameworks such as Next.js, Remix, etc. Django has it's own templating language. While React excels at client-side interactivity, there is no clear benefit when it comes to static page generation. Is there a good rational for replacing Django templates with React? Maybe. But maybe not. Imagine an existing back-end (framework) that is already doing a fantastic job with session management, HTML rendering, and data fetches/caching, database management, API testing, email, sending text messages, etc. So, in many cases, React will ad significant complexity on top of existing software stacks.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731704871.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxbv6mu/"
                },
                {
                    "id": "lxc18ir",
                    "author": "editor_of_the_beast",
                    "body": "It doesn’t mean anything, humans don’t speak precisely, least of all programmers.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731706720.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxc18ir/"
                },
                {
                    "id": "lxaoet0",
                    "author": "Then-Boat8912",
                    "body": "Wtf",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731691961.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxaoet0/"
                },
                {
                    "id": "lx9wyve",
                    "author": "wrex1816",
                    "body": "This isn't a React question TBH. This is a very basic software engineering topic. If you don't understand what an abstraction layer is, take a big step back. This is Software Engineering 101 kind of stuff.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731683778.0,
                    "parent_id": "t3_1grx96v",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9wyve/"
                },
                {
                    "id": "lx9o1hv",
                    "author": "MimAg92",
                    "body": "Thank you",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731680912.0,
                    "parent_id": "t1_lx9mx7d",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9o1hv/"
                },
                {
                    "id": "lxdicn4",
                    "author": "RevolutionaryTower",
                    "body": "Loved your explanation",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731726062.0,
                    "parent_id": "t1_lx9mx7d",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxdicn4/"
                },
                {
                    "id": "lx9psh5",
                    "author": "MimAg92",
                    "body": "I mentioned that someone else brought it up, and I was simply curious to understand what exactly they meant, as well as to hear other opinions and perspectives on it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731681495.0,
                    "parent_id": "t1_lx9orqu",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lx9psh5/"
                },
                {
                    "id": "lxbs1vh",
                    "author": "sgaze",
                    "body": "We should have an abstraction layer to avoid manipulating all these vanilla words and sentences.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731703920.0,
                    "parent_id": "t1_lx9r26n",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxbs1vh/"
                },
                {
                    "id": "lxbufd9",
                    "author": "MimAg92",
                    "body": "Good point",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731704642.0,
                    "parent_id": "t1_lxazsfa",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxbufd9/"
                },
                {
                    "id": "lxa1gi7",
                    "author": "MimAg92",
                    "body": "LOL! Maybe :D  \nok thank you for your comment.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731685145.0,
                    "parent_id": "t1_lx9zdwz",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxa1gi7/"
                },
                {
                    "id": "lxa1908",
                    "author": "MimAg92",
                    "body": "Got it, I was just curious since it came up in a React context. Thanks for the guidance—I’ll revisit the basics!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731685085.0,
                    "parent_id": "t1_lx9wyve",
                    "link_id": "t3_1grx96v",
                    "permalink": "/r/reactjs/comments/1grx96v/what_does_it_mean_when_people_say_that_using/lxa1908/"
                }
            ]
        },
        {
            "id": "1grv6tg",
            "title": "This Week In React #209: Next.js, Compiler, Motion, Remix, Storybook, Toldo, state-in-url, Expo 52, Screens, Skia List, Audio API, Edge-to-Edge, Windows, Godot, True Sheet, Nitro, Worklets, Node.js, TS, Rspack...",
            "author": "sebastienlorber",
            "score": 9,
            "upvotes": 9,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731673493.0,
            "url": "https://thisweekinreact.com/newsletter/209",
            "permalink": "/r/reactjs/comments/1grv6tg/this_week_in_react_209_nextjs_compiler_motion/",
            "selftext": "",
            "comments": [
                {
                    "id": "lx94goe",
                    "author": "sebastienlorber",
                    "body": "Hi everyone!\n\nThis week has been calm on the React side, I couldn't really pick any headline despite various interesting releases and articles.\n\nOnce again, the React Native ecosystem is on fire, with Expo 52, but not only!\n\nLast chance to answer the [State of React 2024](https://survey.devographics.com/en-US/survey/state-of-react/2024?source=this_week_in_react) survey that is closing soon. But don't worry, I'll now annoy you with another one that just opened 😃: [State of JS 2024](https://survey.devographics.com/en-US/survey/state-of-js/2024?source=this_week_in_react).\n\nWe'd be super grateful if you'd share this newsletter or support us here :\n\n- [X / Twitter](https://slo.im/last/x)\n- [Bluesky](https://slo.im/last/b)\n- [LinkedIn](https://slo.im/last/l)\n\n---\n\nSubscribe to [This Week In React](https://thisweekinreact.com) by email - Join **43000** other React devs - 1 email/week \n\n---",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731673579.0,
                    "parent_id": "t3_1grv6tg",
                    "link_id": "t3_1grv6tg",
                    "permalink": "/r/reactjs/comments/1grv6tg/this_week_in_react_209_nextjs_compiler_motion/lx94goe/"
                }
            ]
        },
        {
            "id": "1grtbkt",
            "title": "Please help me to choose a framework",
            "author": "uluhonolulu",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731666050.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/",
            "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/",
            "selftext": "Hi All,\n\nI've made a prototype using ReactJS and Azure Static Web API and now it's time to move to a more scalable server-side framework. I've never used anything other than vanilla React and Express but people say a lot of good things about server+client combos so I thought I might try one of these.\n\nMy main issue with Azure Static is that API requests can't be longer than 45s, but things like common error handling code would be a nice addition.\n\nMy only requirement is minimum changes to the code that I have now. That includes folder structure: I keep all my components next to the parent page or in subfolders so having all pages in one folder and all components in another is a no-go.\n\nI don't need SSR.\n\nWhat are my options here?\n\nThanks!",
            "comments": [
                {
                    "id": "lx9dj04",
                    "author": "ORCANZ",
                    "body": "Why do you want to use a framework ? React is perfectly scalable without next, remix etc",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731677207.0,
                    "parent_id": "t3_1grtbkt",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lx9dj04/"
                },
                {
                    "id": "lx9hyfv",
                    "author": "Queasy-Big5523",
                    "body": "I would suggest Remix. I am using it for my clients and it's really great, quick to set up and really easy to understand. You can basically use it as you would regular React, but with a few extra functions for server communication.\n\nIf you're interested, I've [recently made a video](https://www.youtube.com/watch?v=rn4UiGBbuXc) on how to start with Remix and handle data fetching/sending.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731678813.0,
                    "parent_id": "t3_1grtbkt",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lx9hyfv/"
                },
                {
                    "id": "lx8ujpw",
                    "author": "stikkrr",
                    "body": "I suggest remix",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731668701.0,
                    "parent_id": "t3_1grtbkt",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lx8ujpw/"
                },
                {
                    "id": "lx9fudt",
                    "author": "uluhonolulu",
                    "body": "I need a single project to handle serverside + clientside so that it stays in a single repo, changes deployed together, and preferably both running on the same port.\n\nI can set up Express + React and set up routing but I thought that there must be a simple solution -- don't have much time.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731678055.0,
                    "parent_id": "t1_lx9dj04",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lx9fudt/"
                },
                {
                    "id": "lxaash1",
                    "author": "West-Chemist-9219",
                    "body": "I’d argue in the context of what you want setting up Express with React in a monorepo is the simplest solution.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731687930.0,
                    "parent_id": "t1_lx9fudt",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lxaash1/"
                },
                {
                    "id": "lxdyafl",
                    "author": "SuccessfulStrength29",
                    "body": "If SSR is not needed and you're familiar with express & react. \n\nThe best choice -\n\nUse plain react with express. Keep both in one repo, in development proxy every req to server. In production, build and transfer the static output folder i.e. dist or build inside server and just serve that with all API routes.\n\nCheck this [example](https://github.com/nilotpaul/stacks/tree/main/templates/hono-trpc-vite). I've used another web framework here but you can do the same with express.\n\n**If you've decided to use a framework then go with Remix**",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731732681.0,
                    "parent_id": "t1_lx9fudt",
                    "link_id": "t3_1grtbkt",
                    "permalink": "/r/reactjs/comments/1grtbkt/please_help_me_to_choose_a_framework/lxdyafl/"
                }
            ]
        },
        {
            "id": "1grs4qb",
            "title": "radix asChild understanding",
            "author": "HosMercury",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 11,
            "created_utc": 1731660547.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grs4qb/radix_aschild_understanding/",
            "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/",
            "selftext": "I do not really understand why and when I have forward ref warning with radix/shad\n\nthis is very frustrating\n\nI am using radix trigger asChild  \nso radix will use my own button as trigger like  \n`<button>trigger dialog</button>`\n\nI am using my own Button component ,But I still has this warning  \nhook.js:608 Warning: validateDOMNesting(...): <button> cannot appear as a descendant of <button>. Error Component Stack\n\nany replies appreciated\n\nis the solution is to use the quirky forwardRef!!?\n\n  \ni have removed asChild and the same warning exists .. so In both cases it is there which drives me crazy\n\n\n\nAlso \nCould i separate the trigger in separate comment ?\nOr it id tied to the menu? Or Dialog ?",
            "comments": [
                {
                    "id": "lx8pbih",
                    "author": "power78",
                    "body": "What do you need help with? The error is pretty self-explanatory",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731665630.0,
                    "parent_id": "t3_1grs4qb",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8pbih/"
                },
                {
                    "id": "lx8vrwz",
                    "author": "voxalas",
                    "body": "Instead of doing \n\n```\n<Button asChild>\n  <Trigger />\n</Button>\n```\n\nHave you tried:?\n\n```\n<Trigger asChild>\n  <Button />\n</Trigger>\n```",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731669373.0,
                    "parent_id": "t3_1grs4qb",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8vrwz/"
                },
                {
                    "id": "lx9dzdx",
                    "author": "openfire3",
                    "body": "Your Button component should use forwardRef, it’s used to know how to position the rendered Dialog",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731677375.0,
                    "parent_id": "t3_1grs4qb",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx9dzdx/"
                },
                {
                    "id": "lx8qe0z",
                    "author": "HosMercury",
                    "body": "so i have to\n use forwardref?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731666282.0,
                    "parent_id": "t1_lx8pbih",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8qe0z/"
                },
                {
                    "id": "lx8sg30",
                    "author": "HosMercury",
                    "body": "the issue is the trigger is tied to the component  \nso when the trigger hide  \nthe comp it triggers also hide\n\nis forwardRef solution ?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731667518.0,
                    "parent_id": "t1_lx8pbih",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8sg30/"
                },
                {
                    "id": "lx8w9xb",
                    "author": "voxalas",
                    "body": "That or your dialog content has a button inside a button. Ready the error",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731669640.0,
                    "parent_id": "t1_lx8vrwz",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8w9xb/"
                },
                {
                    "id": "lx8wglw",
                    "author": "HosMercury",
                    "body": "yes..  same",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731669740.0,
                    "parent_id": "t1_lx8vrwz",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8wglw/"
                },
                {
                    "id": "lx9mhwi",
                    "author": "power78",
                    "body": "The error message you posted says nothing about forward ref",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731680396.0,
                    "parent_id": "t1_lx8sg30",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx9mhwi/"
                },
                {
                    "id": "lx8wkj8",
                    "author": "HosMercury",
                    "body": "thx  \nbut which component \n\nhook.js:608 Warning: Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\n\n\n\nCheck the render method of \\`SlotClone\\`. Error Component Stack\n\nat Button (button.tsx:8:9)\n\nat chunk-DHXQS5Y2.js?v=4a55cc60:53:11\n\nat chunk-DHXQS5Y2.js?v=4a55cc60:34:11\n\nat chunk-DHXQS5Y2.js?v=4a55cc60:133:13\n\nat u/radix-ui_react-dialog.js?v=4a55cc60:77:13\n\nat Provider (chunk-XSD2Y4RK.js?v=4a55cc60:38:15)\n\nat Dialog (@radix-ui\\_react-dialog.js?v=4a55cc60:42:5)\n\nat Modal (modal.tsx:13:9)\n\nat AddWorkspaceButtonDialog (add-workspace-button-dialog.tsx:10:9)\n\nat div (<anonymous>)\n\nat TopRibbon (top-ribbon.tsx:9:9)\n\nat div (<anonymous>)\n\nat WorkspaceShowPage (workspace-show-page.tsx:33:21)\n\nat Suspense (<anonymous>)\n\nat Susp (router.tsx:44:17)\n\nat RenderedRoute (react-router-dom.js?v=4a55cc60:4069:5)\n\nat Outlet (react-router-dom.js?v=4a55cc60:4475:26)\n\nat div (<anonymous>)\n\nat div (<anonymous>)\n\nat div (<anonymous>)\n\nat div (<anonymous>)\n\nat MainLayout (main-layout.tsx:9:9)\n\nat Root (<anonymous>)\n\nat RenderedRoute (react-router-dom.js?v=4a55cc60:4069:5)\n\nat RenderErrorBoundary (react-router-dom.js?v=4a55cc60:4029:5)\n\nat DataRoutes (react-router-dom.js?v=4a55cc60:5220:5)\n\nat Router (react-router-dom.js?v=4a55cc60:4482:15)\n\nat RouterProvider (react-router-dom.js?v=4a55cc60:5034:5)\n\nat QueryClientProvider (chunk-HTKVT2SE.js?v=4a55cc60:2802:3)\n\nat GoogleOAuthProvider (@react-oauth\\_google.js?v=4a55cc60:42:32)",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731669799.0,
                    "parent_id": "t1_lx8w9xb",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8wkj8/"
                },
                {
                    "id": "lx9ofvn",
                    "author": "HosMercury",
                    "body": "Yes i have finally knew that bc i was having recurrent different errors that makes me overwelmef",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731681045.0,
                    "parent_id": "t1_lx9mhwi",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx9ofvn/"
                },
                {
                    "id": "lx8xlft",
                    "author": "HosMercury",
                    "body": "how to get the place of the err from react dev tools",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731670328.0,
                    "parent_id": "t1_lx8wkj8",
                    "link_id": "t3_1grs4qb",
                    "permalink": "/r/reactjs/comments/1grs4qb/radix_aschild_understanding/lx8xlft/"
                }
            ]
        },
        {
            "id": "1grisru",
            "title": "React optimizations and stable references from hooks",
            "author": "Ordinary-Disaster759",
            "score": 10,
            "upvotes": 10,
            "downvotes": 0,
            "num_comments": 9,
            "created_utc": 1731627860.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/",
            "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/",
            "selftext": "Hi,\n\nI have some questions about memozing and stable references.\n\nWhat way is better when optimizing components a) or b)\n\nDoes the b) case needs second useMemo, when already the hook is memoized? Can I pass direcly data.map() as prop to Table component, or still will make cascade re-render, because inline data send as prop is referentially unstable (array), or this is not true, because is already memoized inside the hook?\n\n    A)\n    export default function SomeComponent() {\n      const { data } = useSomeHook(); // unstable reference, no useMemo inside\n    \n      const rows = useMemo(\n        () =>\n          data.map((row, index) => ({\n           id: ,\n           name: ,\n           ....\n          })),\n        [data]\n      );\n    \n      return <Table rows={rows} />\n    }\n    ==============================================================\n    \n    B)\n    export default function SomeComponent() {\n      const { data } = useSomeHook(); // stable reference, useMemo inside\n      return <Table rows={data.map((row, index) => (...)}_  />\n    }\n    \n\n  \n\n\n",
            "comments": [
                {
                    "id": "lx6m06r",
                    "author": "vegancryptolord",
                    "body": "Calling .map on an array will always create a new array. So if something other then data causes the component to rerender in example B, the array passed to the rows prop will be a new array since you’ll run map on the stable reference even if data hasn’t changed. That being said though you could just do the map inside the useSomeHook in example B and have a stable reference to the mapped array so you wouldn’t need another memo at the component level necessarily in example B",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731632224.0,
                    "parent_id": "t3_1grisru",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lx6m06r/"
                },
                {
                    "id": "lx6mdah",
                    "author": "ZuluProphet",
                    "body": "Your assumption about B is correct. `map` will return a new array every time so it will have a different reference every time the parent component of `Table` re-renders which will cause `Table` to re-render.\n\nAs far as example A goes however, `useMemo` will only be effective as long as `data` is also a stable reference. If it isn't, the dependency array will have changed causing the memoized function to be executed again.\n\nMuch of this hinges on where `data` comes from. Is it existing state? Well then its already stable and as long as nothing else is causing re-renders above it, having the inline `map` to set the `rows` prop is fine. You would want that to be updated if `data` changed anyways so there is no need to memoize it. Is `data` the result of a query? Well then you're most likely holding that in state already. The only reason I would memoize something like `rows` in your example is if there were reasons the parent component of `Table` or `Table` itself would be re-rendering that the `rows` prop doesn't care about.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731632347.0,
                    "parent_id": "t3_1grisru",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lx6mdah/"
                },
                {
                    "id": "lx8uuj2",
                    "author": "True-Environment-237",
                    "body": "You should use Memo High Order Component around Table component. Memo will produce the same result as the A. example. useMemo is supposed to cache expensive calculations not components.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731668867.0,
                    "parent_id": "t3_1grisru",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lx8uuj2/"
                },
                {
                    "id": "lxau9nk",
                    "author": "Ordinary-Disaster759",
                    "body": "u/vegancryptolord So hooks are referentially stable? Or still I need useMemo inside the hook?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731693706.0,
                    "parent_id": "t1_lx6m06r",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lxau9nk/"
                },
                {
                    "id": "lx8gh4f",
                    "author": "Ordinary-Disaster759",
                    "body": "u/ZuluProphet so as I understand, if the hook is not memoized, than the Parent component will rerender everytime, because everytime data gets new reference and thats invalidates the dependecy array and useMemo gets executed? So does that means I need to memoize the the hook to and have two useMemo?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731660185.0,
                    "parent_id": "t1_lx6mdah",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lx8gh4f/"
                },
                {
                    "id": "lxa82k5",
                    "author": "Ordinary-Disaster759",
                    "body": "u/True-Environment-237  \nAlready is wrapped in memo, is the mui x grid, but I'm trying to optimize my props that can be unstable and still make the grid rerender.\n\nHow to optmize prop like this? I''m using single instance wrapper on top of mui x grid everywhere, so what is best optimization for cases like this.\n\n    complexProp={{\n                  title: 'Some title',\n                  canDelete: canDelete,\n                  text: (idsLength, row: Member) => ...,\n                  toolbar: () => <SomeComponent />,\n                  onDeleteConfirm: (ids: string[]) => {\n                   ...\n                  }",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731687127.0,
                    "parent_id": "t1_lx8uuj2",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lxa82k5/"
                },
                {
                    "id": "lxbgos9",
                    "author": "vegancryptolord",
                    "body": "Still need useMemo in the hook to make it referentially stable. Hooks aren’t stable by default.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731700455.0,
                    "parent_id": "t1_lxau9nk",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lxbgos9/"
                },
                {
                    "id": "lxa5z09",
                    "author": "ZuluProphet",
                    "body": "Pretty much. If `data` isn't stable there is no point in memoizing `rows` because it will change every re-render making the `useMemo` unnecessary overhead. In reality, your example component doesn't need memoization at all. You want new rows if data changes and the function in `useMemo` will re-run every time data changes you've actually just added an extra step that will never change anything. You could just `const rows = data.map(...)` and eek out better (but likely unnoticeable at this scale) performance.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731686496.0,
                    "parent_id": "t1_lx8gh4f",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lxa5z09/"
                },
                {
                    "id": "lxbbn52",
                    "author": "True-Environment-237",
                    "body": "Well it depends on how you pass the props and what each prop does. I suggest you pass each prop separately and not as a single object.\n\n<MyComp prop1={prop1} prop2={prop2} .../>\n\nfunction MyFunc(...) {...} <- this should be wrapped with useCallback if it's passed as a prop.\n\nIf a prop is a function that returns a component then that function should be wrapped with useMemo, but personally I would extract it as a separate component and wrap it with memo HOC. \n\nFinally MyComp should be wrapped with memo HOC.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731698871.0,
                    "parent_id": "t1_lxa82k5",
                    "link_id": "t3_1grisru",
                    "permalink": "/r/reactjs/comments/1grisru/react_optimizations_and_stable_references_from/lxbbn52/"
                }
            ]
        },
        {
            "id": "1grhn80",
            "title": "should you learn web development first before going react native?",
            "author": "hillsofcode",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731624647.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/",
            "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/",
            "selftext": "I am a total beginner, but this is like my 3rd time starting the basics again, and never made it through. I get stucked after learning JS in web, the basics I know, but haven't build yet or program a full web app or website. Now in the long run I wanna work with mobile app dev using React Native",
            "comments": [
                {
                    "id": "lx60nlt",
                    "author": "SeniorSesameRocker",
                    "body": "The short answer is no.\n\nBut in reality it will be most helpful.\n\n* A good understanding of React will help you to be a good React Native dev,\n* A good understanding of Typescript will help you to write and structure your projects well,\n* A good understanding of JavaScript will help you to understand Typescript,\n* A good understanding of web browsers, CSS, the Internet, and computers in general will make your life easy in every way.",
                    "score": 15,
                    "upvotes": 15,
                    "downvotes": 0,
                    "created_utc": 1731625164.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lx60nlt/"
                },
                {
                    "id": "lx8f2f9",
                    "author": "rainst85",
                    "body": "You should start making a mobile react website, going straight to native it’s not going to make it easier to learn",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731659335.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lx8f2f9/"
                },
                {
                    "id": "lx8i2jg",
                    "author": "rook2887",
                    "body": "starting react from the documentation actually made me understand what Js does or why does it even exist, along with concepts like destructuring, immutability, closures, etc... (i mean practically using them, and not just making sense of them)  and starting Next.Js documentation after the react tutorial docs actually made me understand what's involved in designing a modern web project.\n\nNo one is stopping you from what you want in the way and order you want. Everything will click and learn in your passive memory in ways you don't expect, just like learning languages in a passive way.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731661140.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lx8i2jg/"
                },
                {
                    "id": "lx8motj",
                    "author": "Gburchell27",
                    "body": "You need to dive headfirst into building a project, you will learn far more that way THEN do a course- the course will act as a knowledge filler instead of the foundations",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731664002.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lx8motj/"
                },
                {
                    "id": "lx8oahb",
                    "author": "StarPuzzleheaded2599",
                    "body": "If you have no to little experience in react there is no point to go for react native. I would learn either native languages such as Swift, Kotlin, Java or learn Flutter for the cross platform application development. \n\nIf you want to learn react native specifically. Well, there is no reasonable advice over there for me to give. Just do whatever you want.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731664993.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lx8oahb/"
                },
                {
                    "id": "lxd8l8n",
                    "author": "casualfinderbot",
                    "body": "Not necessary at all and there’s no advantage to waiting to learn it if you want to learn it",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731722175.0,
                    "parent_id": "t3_1grhn80",
                    "link_id": "t3_1grhn80",
                    "permalink": "/r/reactjs/comments/1grhn80/should_you_learn_web_development_first_before/lxd8l8n/"
                }
            ]
        },
        {
            "id": "1gremck",
            "title": "Do I really need Redux or Zustand if I have Context API?",
            "author": "Hot_Form5476",
            "score": 61,
            "upvotes": 61,
            "downvotes": 0,
            "num_comments": 101,
            "created_utc": 1731616703.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/",
            "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/",
            "selftext": "I've been wondering if external libraries like Redux or Zustand are necessary for managing global state when Context API already exists within React. I've used Redux Toolkit (RTK) before, but I don’t quite see the benefit when Context API, especially combined with useReducer, seems capable of handling similar tasks.\n\nPeople often say it depends on the complexity of the app, but I've yet to encounter a case where I had to use RTK. From my perspective, if you structure your app well, Context API should be enough.\n\nTo be transparent, I’m not deeply experienced with Redux or Zustand (I've only used them a few times), so maybe I'm missing something. For those who've used both extensively, what benefits do Redux or Zustand offer over Context API in real-world scenarios?",
            "comments": [
                {
                    "id": "lx5cz5x",
                    "author": "Due_Emergency_6171",
                    "body": "When you update state in the context everything rerenders. You can memoize the components but memoized ones have more expensive initial mounting. Usereducer has the same issue\n\nIF YOU NEED GLOBAL STATE, use one of those. Context api is more for stuff that does not get updated a lot but when it does needs to be notified. For example color palette, for dark and light switch you can use context api",
                    "score": 101,
                    "upvotes": 101,
                    "downvotes": 0,
                    "created_utc": 1731617854.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5cz5x/"
                },
                {
                    "id": "lx7dp34",
                    "author": "Nervous-Project7107",
                    "body": "I have no idea why react docs teach to use useReducer with useContext instead of teaching how to build your own zustand in 10 minutes using useSyncExternalStore",
                    "score": 14,
                    "upvotes": 14,
                    "downvotes": 0,
                    "created_utc": 1731641723.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7dp34/"
                },
                {
                    "id": "lx5cyrz",
                    "author": "Bodine12",
                    "body": "Context API is not for global state. It's for avoiding prop drilling in a well-defined hierarchy of parent-to-child components.",
                    "score": 35,
                    "upvotes": 35,
                    "downvotes": 0,
                    "created_utc": 1731617851.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5cyrz/"
                },
                {
                    "id": "lx5a7lh",
                    "author": "RaltzKlamar",
                    "body": "Context API can be fine but generally, unless I'm only using it to disperse data (and not update it) I find that if I try the useContext/useReducer pair I just end up making worse Redux. If you have a lot of global state that needs to be changed regularly (my rule is more than 3 fields that change from user input), I'd use a state management library (such as Redux) to do it.",
                    "score": 17,
                    "upvotes": 17,
                    "downvotes": 0,
                    "created_utc": 1731617013.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5a7lh/"
                },
                {
                    "id": "lx5njgp",
                    "author": "Agonlaire",
                    "body": "I think Zustand is pretty good. I think the biggest advantage is that you can just subscribe to specific pieces of state and anything outside of that won't affect your rendering, and you also don't need to depend on memoizing.\n\nIf you want to use Context, think about the future of your application, be very wary if it's a product that will grow and is possible that more features or monitoring/logging stuff will keep getting added in the future.\n\nI worked in a project that only used Context for global state, but the project just kept growing, increasing communication between components, using data in different parts of the app, getting more data to be included in logs throughout the app, etc.\n\nAt the end we had to do plenty of refactoring, trying to find performance issues, etc, pretty much 80% of effort for almost every task was spent tiptoeing through the shared state updates/renderings.\n\nOf course not all the problems came from Context, but also from the fundamental architecture of the project and from PMs that pretty much ended up turning 3 products into 1",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731621089.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5njgp/"
                },
                {
                    "id": "lx7f1bc",
                    "author": "zxyzyxz",
                    "body": "There is a whole article about this topic by the maintainer of Redux: https://blog.isquaredsoftware.com/2021/01/context-redux-differences/\n\n> TL;DR\n>\n> # Are Context and Redux the same thing?\n> \n> No. They are different tools that do different things, and you use them for different purposes.\n> \n> # Is Context a \"state management\" tool?\n> \n> No. Context is a form of Dependency Injection. It is a transport mechanism - it doesn't \"manage\" anything. Any \"state management\" is done by you and your own code, typically via useState/useReducer.\n> \n> # Are Context and useReducer a replacement for Redux?\n> \n> No. They have some similarities and overlap, but there are major differences in their capabilities.\n> \n> # When should I use Context?\n> \n> Any time you have some value that you want to make accessible to a portion of your React component tree, without passing that value down as props through each level of components.\n> \n> # When should I use Context and useReducer?\n> \n> When you have moderately complex React component state management needs within a specific section of your application.\n> \n> # When should I use Redux instead?\n> \n> Redux is most useful in cases when:\n> \n> - You have larger amounts of application state that are needed in many places in the app\n> - The app state is updated frequently over time\n> - The logic to update that state may be complex\n> - The app has a medium or large-sized codebase, and might be worked on by many people\n> - You want to be able to understand when, why, and how the state in your application has updated, and visualize the changes to your state over time\n> - You need more powerful capabilities for managing side effects, persistence, and data serialization",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731642195.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7f1bc/"
                },
                {
                    "id": "lx5ndbg",
                    "author": "gyfchong",
                    "body": "If you haven’t already, read of the React docs they explain the usage for Context pretty well and will set you up for the following advice.\n\nTo be clear Context and State management are two separate concerns.\n\nContext is like a highway that connects multiple components to the data it holds. So if you’re only dealing with a couple houses, you don’t need a highway.\n\nSo in terms of why you should use context, it depends on the nesting:\n- How many direct children need this data\n- How many children’s children need this data\n- AND how many direct children DON’T need it, versus children children actually need it.\n\nThis indicates to me that either you need to simplify the structure or introduce Context\n\nSo let’s say we have Component A and child component Component B.\n\nComponent A fetched some data from Context A. That data is also required for Component B. In this case, should you pass that data as props of Component B or can Component B just get it again from Context A because it’s already available ?\n\nIt depends™ If Component B were:\n-  a simple component like a Button, then mapping the data to a disabled prop is the way to go\n- a semi-complex component that needed multiple pieces of the data to perform some kinda logic for it’s children, then encapsulation within Component B is my preference, so grab it from Context. Also side benefit of being portable.\n\nMind you this is just for Context use cases. For the re-rendering aspect, that’s more about managing the data itself.\n\nRTK etc. are using context under the hood, but their purpose is in the structure they bring to ensure the data flow up and down (via context) is both performant and predictable to manage. For example, changing state and preventing unnecessary re-rendering.\n\nYou can definitely achieve the same performance by (like other comments have mentioned) using Memo, but at a certain scale it’s a complicated thing the manage yourself, just like if you tried to manually implement context.\n\nBut not all apps need to worry about this “lack of performance”, if you’re dealing with a few simple components then in the grand scheme of things a few extra rerenders isn’t going to harm the performance, the issue is when you get to scale.\n\nSo my advice, don’t worry until you have a perceivable issue.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731621037.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5ndbg/"
                },
                {
                    "id": "lx7lh76",
                    "author": "ConsciousAntelope",
                    "body": "With Context you wrap your consumers with Providers. With zustand you don't do this wrapping. That's what I like about it. You can use those values even outside your React code. That's the beauty of it.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731644558.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7lh76/"
                },
                {
                    "id": "lx85g0c",
                    "author": "JuliusDelta",
                    "body": "A lot of answers here are correct to highlight the predicate of requiring global state before using redux/zustand but I’d really encourage you to REALLY figure out if you need global state or not. You can get away with some pretty complex UI details by just using react-query along with a few well designed “child first” components with controls in a Context\n\nI will say that usually, unless you know for sure you need it you probably don’t. The overhead it adds isn’t worth it IMO. I’ve used redux since 2017 and Zustand for the past year and a half, and recently built a whole new “sub-app” at work using just react query 2-3 contexts and composable patterns with no global store. It’s a breeze to work in/extend and I’d not reach for global state unless I had no other option.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731653874.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx85g0c/"
                },
                {
                    "id": "lx5dkki",
                    "author": "IllResponsibility671",
                    "body": "Here's how I've always Context vs the rest. Context API was designed to solve the issue of prop drilling. Lets say you have a site with 3 pages. If the state is only being used in components shared in one of those 3 pages, then yes, just use Context. However, if you're passing state across the three pages, then you might want to consider Redux of Zustand.   \n  \nPersonally, I think if you design your application properly, you can mostly get away with just useState and Context, but there can be exceptions.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731618034.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5dkki/"
                },
                {
                    "id": "lx7qiqa",
                    "author": "f00dMonsta",
                    "body": "If the context value is something that never changes, i.e some instance of a class, then it wouldn't cause rerenders. I use it instead of a global store because I need to manage queues, a bunch of internal states....etc.  there are other patterns I can use too, but it's an option",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731646620.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7qiqa/"
                },
                {
                    "id": "lx97454",
                    "author": "naaste",
                    "body": "If your app's state isn't too complex, Context API should do the trick, but for anything more demanding, Zustand's selective re-rendering feels like a nice middle ground without the heavy lifting of Redux",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731674707.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx97454/"
                },
                {
                    "id": "lx9kyd7",
                    "author": "drumnation",
                    "body": "Redux can only store serializable data so if you need to store something like a ref, context will work when redux doesn’t. For a simple and small app combining useReducer with context might do the job without having to deal with an extra libraries. \n\nOne time I had an issue where I was building a content player that was consumed by my app through a library. I originally tried to use redux but had a conflict between my library and the consuming app which also used redux where the store wouldn’t instantiate and actions wouldn’t fire. I moved everything to context and useReducer and it worked perfectly. I also realized that given this content player could be loaded multiple times it would try to share the same store between multiple instances of itself, using a context solved that because each instance used a unique context. This solution was good because the content player was a tiny app inside an app.\n\nOn the pro redux side you can create memorized selectors that will better manage rerenders than context which tends to rerender everything it touches. The extra tooling like RTK query can save on interactions with apis, immer provides a nice mutable non mutable syntax for writing state updates in reducers.\n\nAlso, personally I like being able to use the redux dev tools to investigate state and monitor actions. I have yet to find a tool that can provide something similar with context, the best I’ve done is throwing console logs in all the actions when combining with useReducer but that slows down the app a lot while active and there can sometimes be a lot of data to look at that is not always best represented through logs like that.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731679864.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx9kyd7/"
                },
                {
                    "id": "lxakkwv",
                    "author": "sylvankyyra",
                    "body": "For me it's a no-brainer nowadays. UseState for simple local state within compoments, Zustand for all other needs.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731690820.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxakkwv/"
                },
                {
                    "id": "lxas2gg",
                    "author": "iAmIntel",
                    "body": "You will often use zustand together with context, if you want things to be reusable",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731693052.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxas2gg/"
                },
                {
                    "id": "lx89cfn",
                    "author": "BensonandEdgar",
                    "body": "Dude Zustand is just so goated",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731656023.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx89cfn/"
                },
                {
                    "id": "lx5lx28",
                    "author": "Spiritual-Theory",
                    "body": "I've never needed anything other than context and react query. I don't see extraneous re-renders.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731620592.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5lx28/"
                },
                {
                    "id": "lx5mmsk",
                    "author": "creaturefeature16",
                    "body": "You'll know if you need Zustand. Context starts to become really unwieldy.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731620810.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5mmsk/"
                },
                {
                    "id": "lx7j3gu",
                    "author": "Haunting_Welder",
                    "body": "Just try context and see if it works, if not try zustand, and then redux. \n\nI think the gold standard for smaller apps is react query and zustand, redux for bigger apps.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731643646.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7j3gu/"
                },
                {
                    "id": "lxcebk5",
                    "author": "young-king-1283",
                    "body": "Here's the perfect answer to your question: [State Managers](https://youtu.be/VenLRGHx3D4?si=L-6ecmDnhLf0gsJO) watch the whole video",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731710961.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxcebk5/"
                },
                {
                    "id": "lx5jkxc",
                    "author": "riwom",
                    "body": "let me answer your question with a counter-question—how quickly can you set up state management in your app and handle asynchronous actions, like working with local storage in the browser? now here’s the question: do you really think you can manage everything using just the context api?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731619870.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5jkxc/"
                },
                {
                    "id": "lx59zs2",
                    "author": "neosatan_pl",
                    "body": "Maybe like that... You don't need React. DOM is already capable of similar tasks.\n\nThat's basically the difference between context and zustand.",
                    "score": -6,
                    "upvotes": -6,
                    "downvotes": 0,
                    "created_utc": 1731616946.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx59zs2/"
                },
                {
                    "id": "lx5ncuf",
                    "author": "Mr_Parker5",
                    "body": "Doesn't react 19 takes care of everything memoize? I thought context is back in the game due to this change",
                    "score": -3,
                    "upvotes": -3,
                    "downvotes": 0,
                    "created_utc": 1731621033.0,
                    "parent_id": "t3_1gremck",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5ncuf/"
                },
                {
                    "id": "lx5hd9w",
                    "author": "NuclearBunney",
                    "body": "How does Zustand stop the whole app for rerendering?",
                    "score": 22,
                    "upvotes": 22,
                    "downvotes": 0,
                    "created_utc": 1731619195.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5hd9w/"
                },
                {
                    "id": "lx5hotb",
                    "author": "volivav",
                    "body": "Even memoized components will rerender if they are using the context, regardless if that update changes it or not.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731619293.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5hotb/"
                },
                {
                    "id": "lx62eqs",
                    "author": "straightouttaireland",
                    "body": "Are you sure everything re-renders? I'm pretty sure only the components which are using the context hook re-render.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731625731.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx62eqs/"
                },
                {
                    "id": "lxdcpfr",
                    "author": "coraythan",
                    "body": "Oh wow, so I can actually use it as a tool? I've never even used the context API. (I immediately started using Mobx when it was cool, eventually switched to Zustand and still miss Mobx.)\n\nBut if I can use it for Material UI theme changes that'd be good.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731723781.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxdcpfr/"
                },
                {
                    "id": "lx5ry7m",
                    "author": "Royal-Reindeer9380",
                    "body": "What do you mean everything rerenders?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731622444.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5ry7m/"
                },
                {
                    "id": "lx6qa6r",
                    "author": "SendMeYourQuestions",
                    "body": "What about with React compiler? Won't that memorize everything basically?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731633695.0,
                    "parent_id": "t1_lx5cz5x",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6qa6r/"
                },
                {
                    "id": "lxajfeg",
                    "author": "sylvankyyra",
                    "body": "Underrated comment, we need more upvotes here people",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731690476.0,
                    "parent_id": "t1_lx7dp34",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxajfeg/"
                },
                {
                    "id": "lx8epu3",
                    "author": "ItsOkILoveYouMYbb",
                    "body": "Why not just use composition to avoid prop drilling, especially if the hierarchy is well defined as you say",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731659126.0,
                    "parent_id": "t1_lx5cyrz",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8epu3/"
                },
                {
                    "id": "lxb1021",
                    "author": "Hot_Form5476",
                    "body": "You’re totally right, the Context API isn’t meant for global state management—I didn’t explain that well. I don’t use it as a global solution, but more for specific situations.\n\nFor example, if I have sibling components like ComponentA, B, and C that all need to share a state (like a counter), I’d just wrap those in a context:\n\n<SharedStateProvider>\n  <ComponentA />\n  <ComponentB />\n  <ComponentC />\n</SharedStateProvider>\n<ComponentD />\n\nThis keeps it simple: no prop drilling from the parent and ComponentD stays out of the context, so it doesn’t rerender unnecessarily. For stuff like this, Context API works perfectly, and I don’t need tools like Zustand or Redux.\n\nBut yeah, if I were dealing with something more complex—like user data that needs constant updates (e.g., isLoggedIn, userRole, and permissions across the app)—I’d probably go with Zustand or Redux. They’re way better for managing global state that changes a lot that's some conclusions that I take from this about redux and Zustand",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731695703.0,
                    "parent_id": "t1_lx5cyrz",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxb1021/"
                },
                {
                    "id": "lx8t58g",
                    "author": "OldboyNo7",
                    "body": "Upvote just for winning the autocorrect battle on memoizing.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731667916.0,
                    "parent_id": "t1_lx5njgp",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8t58g/"
                },
                {
                    "id": "lx62wuq",
                    "author": "straightouttaireland",
                    "body": "Will all that be solved by react Compiler?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731625894.0,
                    "parent_id": "t1_lx5njgp",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx62wuq/"
                },
                {
                    "id": "lx5qu78",
                    "author": "Hot_Form5476",
                    "body": "Basically does something like RXJS or Preact signals? Is this something that they are already looking to implement in JS right?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731622098.0,
                    "parent_id": "t1_lx5njgp",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5qu78/"
                },
                {
                    "id": "lx97li6",
                    "author": "Hot_Form5476",
                    "body": "Thank you for the response!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731674905.0,
                    "parent_id": "t1_lx7f1bc",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx97li6/"
                },
                {
                    "id": "lx5rhxk",
                    "author": "Hot_Form5476",
                    "body": "Good response mate. Thank you! Fyi someone said in a comment something about memoization in React 19 that automatically React takes care of that part. Is something that changes the paradigm ?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731622301.0,
                    "parent_id": "t1_lx5ndbg",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5rhxk/"
                },
                {
                    "id": "lxchrbe",
                    "author": "straightouttaireland",
                    "body": "If it's async state I just use React Query.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731712161.0,
                    "parent_id": "t1_lx7lh76",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxchrbe/"
                },
                {
                    "id": "lx98c0p",
                    "author": "Hot_Form5476",
                    "body": "Yes. It's on my list to look, but until now I didn't need anything like redux or Zustand but I will take a look at Zustand everybody is talking good about this library",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731675199.0,
                    "parent_id": "t1_lx89cfn",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx98c0p/"
                },
                {
                    "id": "lx7qrq9",
                    "author": "Dont_do_That_yo",
                    "body": "How complex is your app? I thought the same way until I worked in a complex repo, think shopping site. Then, absolutely needed redux",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731646726.0,
                    "parent_id": "t1_lx5lx28",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx7qrq9/"
                },
                {
                    "id": "lx97zw9",
                    "author": "Hot_Form5476",
                    "body": "Yes, the conclusion that I end up here depends on the case",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731675068.0,
                    "parent_id": "t1_lx7j3gu",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx97zw9/"
                },
                {
                    "id": "lx5azzk",
                    "author": "Hot_Form5476",
                    "body": "What do you mean about not needing React? If you mean just doing it in Vanilla JavaScript instead of building in React comparing it to the state management I don't think it's a good comparison in my opinion",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731617255.0,
                    "parent_id": "t1_lx59zs2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5azzk/"
                },
                {
                    "id": "lx5q63n",
                    "author": "Hot_Form5476",
                    "body": "You think so? If this is the case the main benefit that I thought in this subreddit from all the responses is no longer relevant. But I don't know if this affects the context and the components that are child and avoids unnecessary re renders. Can someone confirm?",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731621893.0,
                    "parent_id": "t1_lx5ncuf",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5q63n/"
                },
                {
                    "id": "lx5ino8",
                    "author": "PeterPanen",
                    "body": "Zustand let's you subscribe to the parts of state your components need and does equality checks to determine if rerendering is needed.\n\nIf your state is rather complex Zustand still needs some decent configuration to work as expected though.",
                    "score": 32,
                    "upvotes": 32,
                    "downvotes": 0,
                    "created_utc": 1731619589.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5ino8/"
                },
                {
                    "id": "lx5iivj",
                    "author": "Veranova",
                    "body": "If you use selectors and useShallow appropriately yes it only rerenders what changes",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731619548.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5iivj/"
                },
                {
                    "id": "lx8wbb1",
                    "author": "Nerbelwerzer",
                    "body": "Zustand uses useSyncExternalStore under the hood, which allows components to subscribe to the changes you make.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731669661.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8wbb1/"
                },
                {
                    "id": "lx8i95o",
                    "author": "West-Chemist-9219",
                    "body": "In zustand, if you have a store with values a, b and c, you subscribe like \n\nconst a = useExampleStore(store => store.a);\n\nThis is called granularity, where you accurately define your selection.\n\nIn the components you need a, you will select like so.\n\nYou will sometimes see\n\nconst { a, b } = useExampleStore();\n\nwhich is unfortunately a bad solution, this always selects the entire store and destructures from it only afterwards.\n\nIf you use zustand, use the first pattern.\n\nYou can define actions as an object on your state though, then you would be able to do\n\nconst { setA, setB, setC } = useExampleStore(store => store.actions);\n\nwhich I think is deece for readability (the actions will not get updated).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731661246.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8i95o/"
                },
                {
                    "id": "lx5hzoj",
                    "author": "Due_Emergency_6171",
                    "body": "Well, I’m more familiar with redux, it has a global store where you can select individual states, and because you dont initialize states like you do with context, which is essentially a parent, only the selected states rerender when updated, zustand is like that but without the store",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731619385.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5hzoj/"
                },
                {
                    "id": "lx8z5lf",
                    "author": "kk66",
                    "body": "In principle, state managers don't follow the standard react rerender lifecycle - the logic is moved outside of the react component tree, so the updates don't affect rendering, contrary to what context + state/reducer hooks would do.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731671111.0,
                    "parent_id": "t1_lx5hd9w",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8z5lf/"
                },
                {
                    "id": "lx5i6w6",
                    "author": "Due_Emergency_6171",
                    "body": "If it’s usign the context yes, I’m talking about components that are not",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731619447.0,
                    "parent_id": "t1_lx5hotb",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5i6w6/"
                },
                {
                    "id": "lx6fpxb",
                    "author": "acemarke",
                    "body": "Obligatory link:\n\n- https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#state-updates-context-and-re-renders",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731630126.0,
                    "parent_id": "t1_lx62eqs",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6fpxb/"
                },
                {
                    "id": "lx62kf2",
                    "author": "Due_Emergency_6171",
                    "body": "Every child in the context’s provider rerenders",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731625782.0,
                    "parent_id": "t1_lx62eqs",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx62kf2/"
                },
                {
                    "id": "lx6jchs",
                    "author": "codeepic",
                    "body": "If component rerenders, its children rerender too.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731631338.0,
                    "parent_id": "t1_lx5ry7m",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6jchs/"
                },
                {
                    "id": "lxbqpkn",
                    "author": "TheOnceAndFutureDoug",
                    "body": "You do. Remember, none of this is \"there is only one way\". It's all \"here are the tools you have available to you, choose the tool that makes sense given your use case.\"\n\nAnyone who says there is only one acceptable way to do just about anything is either talking about something extremely specific or is probably pretty junior. There's a reason why the unofficial mantra of senior+ devs is \"it depends\".",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731703511.0,
                    "parent_id": "t1_lx8epu3",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxbqpkn/"
                },
                {
                    "id": "lx8zqbk",
                    "author": "Bodine12",
                    "body": "I didn’t say you couldn’t use composition. I’m saying this is what React’s developers explicitly say the Context Api is for: avoiding prop drilling.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731671391.0,
                    "parent_id": "t1_lx8epu3",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8zqbk/"
                },
                {
                    "id": "lxbfz15",
                    "author": "Agonlaire",
                    "body": "After the amount of talks about it during calls and reviews it was hard not to... memorize it",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731700235.0,
                    "parent_id": "t1_lx8t58g",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxbfz15/"
                },
                {
                    "id": "lx87bs2",
                    "author": "aragost",
                    "body": "You got downvoted but I’m not sure why: it’s a fair question.\n\nCompiler will _probably_ help with the rerender situation but I’m not sure I would say it’ll be solved.\n\nEven with compiler, Context:\n1) has some boilerplate to set up\n2) does not make it very easy to have or interact with state living outside of react \n\nSo I expect third party state managers to keep thriving",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731654901.0,
                    "parent_id": "t1_lx62wuq",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx87bs2/"
                },
                {
                    "id": "lx767k0",
                    "author": "gyfchong",
                    "body": "Perhaps, but it doesn’t improve the API of Context and State, just that it might make the “re-renders” part of RTK/Zustand not as valuable. It is however the largest reason to use them, but I like Zustand for the API over Context/useState.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731639092.0,
                    "parent_id": "t1_lx5rhxk",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx767k0/"
                },
                {
                    "id": "lxb7hwx",
                    "author": "Spiritual-Theory",
                    "body": "It's pretty complicated, but organized. 44 models (separate objects I'm working with from the server), 116 endpoints for CRUD actions. With react-query, I transform to JS classes and cache the results based on a few cache keys, which are stored in context. I have 27 contexts for the first-class models' index and details page, essentially at the lowest level node pages of the app. The only thing at the global level is the logged-in user and application information. No re-renders, memory use is moderate. I rely on cache-clearing and try to make everything declarative where I can.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731697628.0,
                    "parent_id": "t1_lx7qrq9",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxb7hwx/"
                },
                {
                    "id": "lx5bb8n",
                    "author": "neosatan_pl",
                    "body": "Why is it a bad comparison?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731617349.0,
                    "parent_id": "t1_lx5azzk",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5bb8n/"
                },
                {
                    "id": "lx5slq9",
                    "author": "Mr_Parker5",
                    "body": "I do not know if react 19 is production ready or not.\n\nWhat I do know is with react 19, they offer inhouse memoization along with ton more dev easy syntax.\n\nThe only reason we did not use context was because of rerenders, but did you stop to question why even rerenders are considered bad?\n\nIt's cuz The expensive functions calculate again n slows the render until it gets execute. That's why people memoized it.\n\nAs of react 18, if 100 components rerender with inexpensive/no functions, then react handles them. It does not cause a performance issue. Your memoized variables will eat up the memory n slow the old PCs.\n\nBut if react 19 handles memoization, heck context is back then. And remember, we know use react query n everything, if you architecture your app smart enough, you won't even need a state management Library.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731622643.0,
                    "parent_id": "t1_lx5q63n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5slq9/"
                },
                {
                    "id": "lx5qin9",
                    "author": "Hot_Form5476",
                    "body": "Basically does something like RXJS or Preact signals? Is this something that they are already looking to implement in JS right?",
                    "score": -7,
                    "upvotes": -7,
                    "downvotes": 0,
                    "created_utc": 1731622000.0,
                    "parent_id": "t1_lx5ino8",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5qin9/"
                },
                {
                    "id": "lx8la65",
                    "author": "Valkertok",
                    "body": "Redux, zustand or any established state library really, has the benefit of you not having to have separate context for each piece of the state if you want to prevent rerenders. Simple selectors and library magic prevent rerenders for you.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663112.0,
                    "parent_id": "t1_lx5i6w6",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8la65/"
                },
                {
                    "id": "lx8go4u",
                    "author": "BlazingThunder30",
                    "body": "This is from 2020. Hasn't a lot changed in the latest major version?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731660302.0,
                    "parent_id": "t1_lx6fpxb",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8go4u/"
                },
                {
                    "id": "lx9z874",
                    "author": "straightouttaireland",
                    "body": "Thanks, I'll have to give that full article a read. I have always heard on this sub that only the components subscribing to the useContext hook will re-render, not all descendants of the Provider.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731684468.0,
                    "parent_id": "t1_lx6fpxb",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx9z874/"
                },
                {
                    "id": "lxa2l13",
                    "author": "straightouttaireland",
                    "body": "This pattern is actually what I was referring to. Is it correct?\n\nhttps://www.reddit.com/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8fx9n/",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731685480.0,
                    "parent_id": "t1_lx6fpxb",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxa2l13/"
                },
                {
                    "id": "lx6f42n",
                    "author": "Branclon",
                    "body": "I gotta try this I thought only the subscribers rerendered",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731629923.0,
                    "parent_id": "t1_lx62kf2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6f42n/"
                },
                {
                    "id": "lx6g27p",
                    "author": "balderDasher23",
                    "body": "No this is incorrect. Only the consumers of the context provider get rerendered when the context provider has a state change.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731630239.0,
                    "parent_id": "t1_lx62kf2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6g27p/"
                },
                {
                    "id": "lxbfeij",
                    "author": "Agonlaire",
                    "body": "I can't believe I forgot about the boilerplate, it's just insane",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731700050.0,
                    "parent_id": "t1_lx87bs2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxbfeij/"
                },
                {
                    "id": "lxbrmbc",
                    "author": "TheOnceAndFutureDoug",
                    "body": "Honestly no. 1 is the reason I love Zustand. It's easy to set up and I love the DX in general.\n\nThe only thing I don't know how to do with Zustand that seems to require Context is if I want to do a hyper local state that avoids prop drilling or composition for some reason.\n\nBefore the Scroll Timeline API became a thing we had a custom scroll tracking component that used Intersection Observers. We wanted arbitrary children to be able to access that information and Context worked great for that purpose.\n\nI would have loved to switch to Zustand for this but I couldn't figure out how to do it other than having Zustand basically track all instances of it in a central location and you just had to know which one you wanted. Context just goes \"I don't know, who's my parent context?\" which is handy for stuff like this specifically.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731703788.0,
                    "parent_id": "t1_lx87bs2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxbrmbc/"
                },
                {
                    "id": "lx5uou7",
                    "author": "Hot_Form5476",
                    "body": "Yes mate, I thought about that a long time ago and studied useMemo and useCallback a long time ago as well. I'm just talking about the context thing + I don't want to write too much I have to think too much in English hahahah but thanks for you're comments and the response",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623291.0,
                    "parent_id": "t1_lx5slq9",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5uou7/"
                },
                {
                    "id": "lx5r3my",
                    "author": "zephyrtr",
                    "body": "Please don't use RxJS. It's like trying to cut your dinner with a broadsword.",
                    "score": 28,
                    "upvotes": 28,
                    "downvotes": 0,
                    "created_utc": 1731622179.0,
                    "parent_id": "t1_lx5qin9",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5r3my/"
                },
                {
                    "id": "lxavq8n",
                    "author": "acemarke",
                    "body": "I updated the post in 2022 to cover React 18's behavior (minus Suspense and transitions).\n\nNothing about the core rendering behavior or mental model changes in React 19.\n\nSo, everything in that post should still be valid and relevant.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731694145.0,
                    "parent_id": "t1_lx8go4u",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxavq8n/"
                },
                {
                    "id": "lx8lglt",
                    "author": "None",
                    "body": "[deleted]",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663224.0,
                    "parent_id": "t1_lx8go4u",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8lglt/"
                },
                {
                    "id": "lxax1hz",
                    "author": "acemarke",
                    "body": "The real question to keep in mind is how the component tree is being constructed.\n\nIf you're using `{children}` in one of the provider parents, then you're telling React to bail out of its normal recursive rendering behavior at that point.  In that case, then yes, \"only the context consumers\" will be queued to re-render when the context value changes.\n\n_However_:\n\n- if you're _not_ using `children` or `React.memo()`, and not trying to optimize the rendering behavior, then setting state in the provider parent is going to cause the entire nested component tree to re-render _regardless_ of how that context value may be updated\n- Even if you are optimized the rendering behavior up top, queueing a context-consuming child to update causes the normal recursive behavior to kick in _from that component on down_",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731694537.0,
                    "parent_id": "t1_lxa2l13",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxax1hz/"
                },
                {
                    "id": "lx6fam5",
                    "author": "Due_Emergency_6171",
                    "body": "With context, you are basically initiating a bunch of states at the top level",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731629985.0,
                    "parent_id": "t1_lx6f42n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6fam5/"
                },
                {
                    "id": "lx6ivl9",
                    "author": "codeepic",
                    "body": "And what do you think their children components do when the parent rerenders, Sherlock?",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731631180.0,
                    "parent_id": "t1_lx6g27p",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx6ivl9/"
                },
                {
                    "id": "lxchhdd",
                    "author": "straightouttaireland",
                    "body": "Makes debugging a nightmare as well",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731712063.0,
                    "parent_id": "t1_lxbfeij",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lxchhdd/"
                },
                {
                    "id": "lx5v3vc",
                    "author": "Mr_Parker5",
                    "body": "Use context if you find context easy, use zustland if you find zustland easy.\n\nWhat's important is you use that technology which you know you and your team is most comfortable in to ship fast.\n\nWe aren't Netflix that has to maintain million lines of code thus using redux. So, \"context\" matters 😉",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731623421.0,
                    "parent_id": "t1_lx5uou7",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5v3vc/"
                },
                {
                    "id": "lx8jhmx",
                    "author": "justjanne",
                    "body": "That's quite an interesting perspective shift. I also do backend and Android, and over there RxJava or Kotlin's Flows, which are implementations of or heavily inspired by ReactiveX, are basically the standard.\n\nEven for Compose, the Kotlin equivalent of React, Flows are used everywhere and for everything.\n\nIs there a reason why this paradigm is so disliked on web?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731661993.0,
                    "parent_id": "t1_lx5r3my",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8jhmx/"
                },
                {
                    "id": "lx5rsk6",
                    "author": "Hot_Form5476",
                    "body": "Why is that ?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731622394.0,
                    "parent_id": "t1_lx5r3my",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5rsk6/"
                },
                {
                    "id": "lx8lj8v",
                    "author": "BlazingThunder30",
                    "body": "Hm I thought they added automatic memoization in the compiler. Haven't actually had a look at the new version to be fair.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663272.0,
                    "parent_id": "t1_lx8lglt",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8lj8v/"
                },
                {
                    "id": "lx86oyt",
                    "author": "dikamilo",
                    "body": "Context providers takes children by prop and are not responsible for rendering them. Only subscribers are rerendered. Use react dev tools and you will see.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731654558.0,
                    "parent_id": "t1_lx6ivl9",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx86oyt/"
                },
                {
                    "id": "lx8665j",
                    "author": "Potato-9",
                    "body": "In context I think they ment to add \"if the rest of the components are memorized.\"\n\nWhich I don't know, just adding to the discussion thread.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731654267.0,
                    "parent_id": "t1_lx6ivl9",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8665j/"
                },
                {
                    "id": "lx95jik",
                    "author": "Hot_Form5476",
                    "body": "Idk why people are so mad that  I brought up RXJS to this. I don't care tbh, I just want to know some opinions and have a discussion to try to have a conclusion based on the experiences of other people",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731674042.0,
                    "parent_id": "t1_lx8jhmx",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx95jik/"
                },
                {
                    "id": "lx5wbko",
                    "author": "zephyrtr",
                    "body": "Expressing simple operations like loading server state are deeply confusing even to people who've used some ReactiveX, let alone coworkers who've never touched it. The amount of flexibility RX gives is awesome and it goes totally unused on most projects. The complexity it adds however is unavoidable.\n\nI've been on so many projects where I have people begging me to get them out of RxJS.",
                    "score": 16,
                    "upvotes": 16,
                    "downvotes": 0,
                    "created_utc": 1731623801.0,
                    "parent_id": "t1_lx5rsk6",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5wbko/"
                },
                {
                    "id": "lx8lmod",
                    "author": "Valkertok",
                    "body": "It doesn't change how context works though.\n\nEdit: deleted my comment, now can't undelete it, oh well...",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663333.0,
                    "parent_id": "t1_lx8lj8v",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8lmod/"
                },
                {
                    "id": "lx8dng2",
                    "author": "codeepic",
                    "body": "??? What??? I don't understand what you are trying to say. Only subscribers are rendered? NO.\n\nEvery child of a context consumer is rerendered along with all of its descendants when the context consumer detects a new value on context.\n\nWhen context consumer is rerendered, its template is rerendered.\nIf there are React components in that template, they get rerendered. If they have React components in their templates, they get rerendered. And so it goes down the component tree.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731658493.0,
                    "parent_id": "t1_lx86oyt",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8dng2/"
                },
                {
                    "id": "lx5yffn",
                    "author": "Hot_Form5476",
                    "body": "I'm using RXJS rn in some parts but not too much and for me it was very easy to use and to understand. So you recommend looking into RX?",
                    "score": -4,
                    "upvotes": -4,
                    "downvotes": 0,
                    "created_utc": 1731624461.0,
                    "parent_id": "t1_lx5wbko",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5yffn/"
                },
                {
                    "id": "lx8fx9n",
                    "author": "dikamilo",
                    "body": "It's basic composition pattern in react and should be known since lesson one by any react dev. Context provider triggers only subscribers, not the whole tree of components under provider. \n\n    <ContextProvider>\n      <SomeParentComponent>\n       <NonSubscibedToContext />\n       <SubscribedToContext /> <== this will be rendered on context change\n      </SomeParentComponent>\n    </ContextProvider>\n\nIf a component that is a subscriber to context renders other components then they will be rendered as well, but this is true for any approach since it's considered as \"parent component rendered\", so if you use Redux. Zustand, useState etc.  it will work the same, because state of parent component changed.\n\n    <ContextProvider>\n      <SomeParentComponent> // <= this will not be rendered on context change\n       <NonSubscibedToContext /> // <= this will not be rendered on context change\n       <SubscribedToContext> // <= this will be rendered on context change\n        <SomeChild /> // <= this will not be rendered on context change\n       </SubscribedToContext>\n      </SomeParentComponent>\n    </ContextProvider>\n    \n    ---\n    \n    const SubscribedToContext = () => {\n      /// ...\n      return (\n        <Fragment>\n          {children} // <= this will not be rendered on SubscribedToContext state change\n          <SomeDependendChildren /> // this will be rendered on SubscribedToContext state change\n        </Fragment>\n      )\n    }",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731659849.0,
                    "parent_id": "t1_lx8dng2",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8fx9n/"
                },
                {
                    "id": "lx5zfkm",
                    "author": "zephyrtr",
                    "body": "I highly recommend if you intend for other people besides yourself to work on your project to *not* use the ReactiveX pattern or any lib that relies on it, including RxJS -- with the only exception being that you absolutely need a signal graph type structure to manage the volume of custom events your app is handling.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731624775.0,
                    "parent_id": "t1_lx5yffn",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx5zfkm/"
                },
                {
                    "id": "lx8h3y1",
                    "author": "West-Chemist-9219",
                    "body": "Btw you can test your own code in React devtools, there is the “highlight component updates” tick that you can check, and you’ll see. Everything inside the context provider, and not just subscribers, will update.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731660565.0,
                    "parent_id": "t1_lx8fx9n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8h3y1/"
                },
                {
                    "id": "lx8h9sz",
                    "author": "West-Chemist-9219",
                    "body": "Also a [link here](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#state-updates-context-and-re-renders)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731660663.0,
                    "parent_id": "t1_lx8fx9n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8h9sz/"
                },
                {
                    "id": "lx8h5pr",
                    "author": "codeepic",
                    "body": "I see where you're going with this, the composed React cmps are not rerendered. \nComposing components is great but trying to build an app in such a way to bypass the context constraints would be a challenge.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731660595.0,
                    "parent_id": "t1_lx8fx9n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8h5pr/"
                },
                {
                    "id": "lx8grxn",
                    "author": "West-Chemist-9219",
                    "body": "So confidently wrong, it’s admirable.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731660365.0,
                    "parent_id": "t1_lx8fx9n",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8grxn/"
                },
                {
                    "id": "lx60zpf",
                    "author": "Hot_Form5476",
                    "body": "Oh okay, I misunderstood 😬. That's exactly what happened to me. LOL, at the beginning a co-worker suggested using this library, and we had an argument about not making the code too complex with RxJS because I had never used this library before. For what I wanted to do, I thought it wasn’t worth it, but after studying and understanding it, it was very easy to use and handle things. But I agree with you, mate.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731625272.0,
                    "parent_id": "t1_lx5zfkm",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx60zpf/"
                },
                {
                    "id": "lx8iehl",
                    "author": "dikamilo",
                    "body": "Example in this article does not use composition in the same way as in mine example. You have state directly in the parent component that is passed to context, and it will render everything in this case... (because parent also renders memoized component).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731661340.0,
                    "parent_id": "t1_lx8h9sz",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8iehl/"
                },
                {
                    "id": "lx8inb1",
                    "author": "dikamilo",
                    "body": "Most of the apps are build like that. Even if you use Redux, parent component state change will trigger direct children to render as well. Any parent state, hook etc. change will trigger direct children. This is the reason you should think about correct component composition as well because it's one of the best way of rendering optimization.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731661487.0,
                    "parent_id": "t1_lx8h5pr",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8inb1/"
                },
                {
                    "id": "lx8kq6p",
                    "author": "West-Chemist-9219",
                    "body": "okay, I get where you're going. But then further down the line, if nonsubscribed ever gets a child that's subscribed, it will rerender, and thus you either need to memoize it or compose the child components further down the line. I can't see how this would be a superior solution to dedicated state management - you're much better off with granular subscriptions if you want to avoid performance leaks.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731662761.0,
                    "parent_id": "t1_lx8iehl",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8kq6p/"
                },
                {
                    "id": "lx8n9s4",
                    "author": "West-Chemist-9219",
                    "body": "also, parentcomponent is also rerendering, which should also not happen.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731664364.0,
                    "parent_id": "t1_lx8iehl",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8n9s4/"
                },
                {
                    "id": "lx8lva0",
                    "author": "codeepic",
                    "body": "I get you, but building your React app where most of the components are composed presents a different challenge. Yes, there are apps that use composition, but they do it in specific places, not across the whole  app.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663484.0,
                    "parent_id": "t1_lx8inb1",
                    "link_id": "t3_1gremck",
                    "permalink": "/r/reactjs/comments/1gremck/do_i_really_need_redux_or_zustand_if_i_have/lx8lva0/"
                }
            ]
        },
        {
            "id": "1grebk6",
            "title": "Handling 500 errors globally with axios",
            "author": "Pleasant_Passion483",
            "score": 11,
            "upvotes": 11,
            "downvotes": 0,
            "num_comments": 12,
            "created_utc": 1731615922.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/",
            "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/",
            "selftext": "I'm just trying to get a modal to popup when the server returns a 500 error. I would like this logic centralized and the easiest way seems to be using axios response interceptors. When an error that has a status code of >= 500 comes in, it changes a boolean flag causing the modal to render, no matter what page they are on. I prefer not to install another npm package so what's the cleanest way to achieve this? I think using an event emitter would work, but it doesn't seem like the ideal approach. ",
            "comments": [
                {
                    "id": "lx59u9t",
                    "author": "ORCANZ",
                    "body": "Opening a modal seems weird, wouldn’t a notification be enough ?\n\nYou can configure this statically (outside of react component) in your app.js\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    notify(‘Request has failed’, error);\n    return Promise.reject(error);\n  },\n);\n\nYou could probably also mutate the window object or interact with state machines like redux or mobx outside of react scope",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731616900.0,
                    "parent_id": "t3_1grebk6",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx59u9t/"
                },
                {
                    "id": "lx5i7sj",
                    "author": "lightfarming",
                    "body": "if you are by chance using tanstack query already, you can set up global error handlers when setting the queryClient options that can check error number and do specific things based on that. you could have it flip a flag somewhere in your query cache that you have the modal subscribed to. i have this set up to log the client out on 402s",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731619455.0,
                    "parent_id": "t3_1grebk6",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5i7sj/"
                },
                {
                    "id": "lx5aj3q",
                    "author": "SayHiDak",
                    "body": "Have you thought about the Axios interceptor that triggers a middleware which would activate the modal on the page? Anyway I think you would need to wrap your whole App.js into a ErrorProvider if you want to render on any page they are.\n\nThis way you can trigger the middleware wherever the error comes up and display it on page itself. \n\nYou would need to make sure to pass the context to the provider and state to manage what’s the state of the modal to show it.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731617111.0,
                    "parent_id": "t3_1grebk6",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5aj3q/"
                },
                {
                    "id": "lx8s02r",
                    "author": "Suspicious-Watch9681",
                    "body": "A toast would be enough for such an error",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731667258.0,
                    "parent_id": "t3_1grebk6",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx8s02r/"
                },
                {
                    "id": "lxdggkz",
                    "author": "BigFattyOne",
                    "body": "Mandatory why are you still using a axios in 2024 comment.\n\nOtherwise, like other have said, I tend to use global handlers when they are available.\n\nSome errors display a toast, some others will display a full error page, it depends.  A modal can be annoying though so be careful with that.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731725302.0,
                    "parent_id": "t3_1grebk6",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lxdggkz/"
                },
                {
                    "id": "lx5i1dq",
                    "author": "Pleasant_Passion483",
                    "body": "Modal probably wasn't the right word, it's essentially a toast notification.  I had honestly, forgotten about that browser api as I primarily work on the backend.  ty ty",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731619400.0,
                    "parent_id": "t1_lx59u9t",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5i1dq/"
                },
                {
                    "id": "lx5in3y",
                    "author": "Pleasant_Passion483",
                    "body": "I am using tanstack, good call.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731619585.0,
                    "parent_id": "t1_lx5i7sj",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5in3y/"
                },
                {
                    "id": "lx5lu9y",
                    "author": "Pleasant_Passion483",
                    "body": "It seems the global error handlers are overwritten by the local error handlers though? I'm currently combing through the docs and not seeing any way around this",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731620569.0,
                    "parent_id": "t1_lx5i7sj",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5lu9y/"
                },
                {
                    "id": "lx5o6m0",
                    "author": "Pleasant_Passion483",
                    "body": "Yeah, I saw some solutions using the error provider. That seems like overkill for a simple boolean flag, and to get it to render on any page, i'm just attaching it to the main layout of that app. As this wraps all of the pages and uses an outlet to provide a consistent layout.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731621286.0,
                    "parent_id": "t1_lx5aj3q",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5o6m0/"
                },
                {
                    "id": "lx5pofw",
                    "author": "lightfarming",
                    "body": "just looked through my code. i’m actually setting this up in the “retry” option. for retry you can pass a function that takes in failurecount and error, then you can handle each type of error differently, returning false if you don’t want to retry the query, changing cache values on some. in my experience it does not override onError handlers this way.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731621744.0,
                    "parent_id": "t1_lx5lu9y",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5pofw/"
                },
                {
                    "id": "lx5pf89",
                    "author": "SayHiDak",
                    "body": "Ahhh, if You are using NextJs then layout is a good approach. But how would you trigger the Boolean flag without making the whole app a client component.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731621665.0,
                    "parent_id": "t1_lx5o6m0",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx5pf89/"
                },
                {
                    "id": "lx64na6",
                    "author": "Pleasant_Passion483",
                    "body": "clever, I'll try it out",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731626456.0,
                    "parent_id": "t1_lx5pofw",
                    "link_id": "t3_1grebk6",
                    "permalink": "/r/reactjs/comments/1grebk6/handling_500_errors_globally_with_axios/lx64na6/"
                }
            ]
        },
        {
            "id": "1grdhya",
            "title": "Want to Implement Zillow.com Map Draw Functionality",
            "author": "SalimAttari",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731613788.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grdhya/want_to_implement_zillowcom_map_draw_functionality/",
            "permalink": "/r/reactjs/comments/1grdhya/want_to_implement_zillowcom_map_draw_functionality/",
            "selftext": "Hello\n\nI want same functionality as in Zillow.com Real Estate Website. Their is map on property and user can select specific area by draw map. I believe they are using mapbox.\n\nI need help to redeveloped this functionality in   my app.\n\n\nLink: https://www.zillow.com/homes/for_sale\n\nThank you",
            "comments": [
                {
                    "id": "lx7a3x7",
                    "author": "nedlinin",
                    "body": "Cool. What are you using? What have you tried?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731640455.0,
                    "parent_id": "t3_1grdhya",
                    "link_id": "t3_1grdhya",
                    "permalink": "/r/reactjs/comments/1grdhya/want_to_implement_zillowcom_map_draw_functionality/lx7a3x7/"
                },
                {
                    "id": "lx83caz",
                    "author": "SalimAttari",
                    "body": "Mapbox, it has default UI. But I need like Zillow one",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731652764.0,
                    "parent_id": "t1_lx7a3x7",
                    "link_id": "t3_1grdhya",
                    "permalink": "/r/reactjs/comments/1grdhya/want_to_implement_zillowcom_map_draw_functionality/lx83caz/"
                }
            ]
        },
        {
            "id": "1grcm24",
            "title": "Is it possible to render previews of HEIC images?",
            "author": "LevelPuzzled7557",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 4,
            "created_utc": 1731611525.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/",
            "permalink": "/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/",
            "selftext": "In a React app, we have some components to upload images. Until now, the components supported JPEG and PNG formats but I was asked to add HEIC images as well and convert them to JPEG in the backend.\n\nThe main requirement (non negotiable so far) is to convert them in the backend, not in the frontend.\n\nSo, in the react app, after uploading the images, a cropper modal pops up to center and crop the image, and there are image previews as well, all before saving the changes and sending the request to the back.\n\nThe cropper and the previews only work with JPEG and PNG images but not with HEIC because the format isn't supported by web browsers.\n\nIs there a workaround to be able to display HEIC images in the browser without changing the format?\n\nedit: typo",
            "comments": [
                {
                    "id": "lx4ss70",
                    "author": "LevelPuzzled7557",
                    "body": "It's my first post in this sub, I received a message to add a comment to my post for it to be visible (?",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731611652.0,
                    "parent_id": "t3_1grcm24",
                    "link_id": "t3_1grcm24",
                    "permalink": "/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/lx4ss70/"
                },
                {
                    "id": "lx4uskz",
                    "author": "Thommasc",
                    "body": "Yup I did this.\n\n\nIt took a while to nail it but it's been working pretty well.\n\n\nI use AWS Lambda + S3 + SharpJS + HEIC convert library.\n\n\nIt's a resize picture endpoint that returns a short lived cloud front signed URL to the generated thumbnail.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731612264.0,
                    "parent_id": "t3_1grcm24",
                    "link_id": "t3_1grcm24",
                    "permalink": "/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/lx4uskz/"
                },
                {
                    "id": "lx4vcjm",
                    "author": "bugzpodder",
                    "body": "[https://upsidelab.io/blog/handling-heic-on-the-web](https://upsidelab.io/blog/handling-heic-on-the-web)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731612432.0,
                    "parent_id": "t3_1grcm24",
                    "link_id": "t3_1grcm24",
                    "permalink": "/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/lx4vcjm/"
                },
                {
                    "id": "lx5n53h",
                    "author": "ferrybig",
                    "body": "Browsers (with the exception of Safari) cannot render HEIC natively.\n\nYou need to show the cropping dialog with the converted file. Since you state show the cropper dialog after uploading the file, just convert it in the backend and show the cropping dialog with the converted file.\n\nAnother approach can be doing the conversation in both the frontend and backend. In the frontend you just convert the file to show it in the corrping dialog, then you send the original file and the coordinates to the backend",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731620967.0,
                    "parent_id": "t3_1grcm24",
                    "link_id": "t3_1grcm24",
                    "permalink": "/r/reactjs/comments/1grcm24/is_it_possible_to_render_previews_of_heic_images/lx5n53h/"
                }
            ]
        },
        {
            "id": "1gr99d1",
            "title": "react query/tanstack with NHL API",
            "author": "Beautiful_Dot82",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 3,
            "created_utc": 1731603129.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr99d1/react_querytanstack_with_nhl_api/",
            "permalink": "/r/reactjs/comments/1gr99d1/react_querytanstack_with_nhl_api/",
            "selftext": "I am new to React Query/Tanstack and was hoping to get some advice on how to structure my queries. My app idea is an NHL summarizer that gives a daily summary of the games played that day. My idea is to use the schedule endpoint (https://api-web.nhle.com/v1/schedule/now) to get the schedule of games for today. So now I have a list of game ids for that day. Then I want to use the game endpoint (https://api-web.nhle.com/v1/gamecenter/GAME\\_ID/boxscore) to get the boxscore and display it. However, I am a little bit confused on how to set up the queries and how the \"stale\" part comes into it. \n\nThis is what I am thinking right now: I fetch the current day's schedule, which returns (among other stuff) the game ids and the gameState for each game (FINAL if it's over). If the gameState for a particular gameID is FINAL, then I'll pass that gameID into the game endpoint to get the boxscore, and display it.\n\nHowever, I feel like I am missing some fundamental usage of the fetching and automatic updating that React Query is supposed to offer. How would you recommend I go about this? My main goals with this project is to practice using React Query.",
            "comments": [
                {
                    "id": "lx44xb5",
                    "author": "Mr-Bovine_Joni",
                    "body": "Are you open to doing any backend work? If so, I would design it like:\n\nYou have a backend service that polls the NHL API and keeps track of games & their state. Then your site queries your own backend for those games\n\nThis keeps traffic away from the NHL API in case they have limits\n\nYou can also cache game state so if you have many users querying for the same game, it’s not as network/computationally heavy \n\nAnd the on the client side, have a refresh timeline of whatever you want - maybe 60 seconds for games in flight, and much longer or never for FINAL games.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731604412.0,
                    "parent_id": "t3_1gr99d1",
                    "link_id": "t3_1gr99d1",
                    "permalink": "/r/reactjs/comments/1gr99d1/react_querytanstack_with_nhl_api/lx44xb5/"
                },
                {
                    "id": "lx4bfn9",
                    "author": "Beautiful_Dot82",
                    "body": "Hello! Thank you so much for your answer - I had a couple of follow up questions. I'm not extremely familiar with backend work but I have done a basic MERN project and I have experience with Supabase. \n\n1. To create the backend service as you've described, I don't think I can do it with something like Supabase, right? Would you recommend something like the MERN stack? And still using React Query?\n\n2. Also, I just want to check my understanding is correct: creating a backend service and querying my own backend for the game reduces traffic from the NHL API because I'm not calling the NHL API every time a user visits the site, I'm only calling it at some constant rate and saving the games/state in my own database. Does caching game state just mean I'm not constantly fetching the game state from my own backend every time a user visits?\n\n3. Regarding the refresh timeline on the client side, this is addressing updating while the user has the site open, right? Not when the user first visits the site and everything loads? So having a refresh timeline would mean even if the user is on the site tab, the boxscore for a current game would update without them having to refresh?\n\nThank you so much for your help, I really appreciate it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731606387.0,
                    "parent_id": "t1_lx44xb5",
                    "link_id": "t3_1gr99d1",
                    "permalink": "/r/reactjs/comments/1gr99d1/react_querytanstack_with_nhl_api/lx4bfn9/"
                },
                {
                    "id": "lx4cr2a",
                    "author": "Mr-Bovine_Joni",
                    "body": "Yep you’re correct on #2 and #3\n\nAnd I’m not super familiar with Supabase, but something like a MERN stack would work. You could even do a non-Mongo relational DB. I personally like Prisma, and I think you could get away with a simple SQLite Prisma DB for an app of this size",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731606782.0,
                    "parent_id": "t1_lx4bfn9",
                    "link_id": "t3_1gr99d1",
                    "permalink": "/r/reactjs/comments/1gr99d1/react_querytanstack_with_nhl_api/lx4cr2a/"
                }
            ]
        },
        {
            "id": "1gr93a3",
            "title": "What is the best static site generator based on React today?",
            "author": "OkayAnalysis6799",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 13,
            "created_utc": 1731602688.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/",
            "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/",
            "selftext": "Looking for opinions, pros and cons.\n\nIf building a static site with React, what do you use?\n\nIs Gatsby still king?\n\nLooking to create a portfolio website and company website. Will have different reusable page layouts and also load \"blog\" articles.\n\nSpeaking of which, when it comes to blogs, I know Markdown is simple, but then you have to generate and push. What is the best \"live\" CMS solution?",
            "comments": [
                {
                    "id": "lx4l4jq",
                    "author": "pancomputationalist",
                    "body": "+1 for Astro. Its template syntax is very much inspired by React, but it is much simpler, as there is no client side stuff, no hooks. On the other hand, it has nice abstractions to work with Markdown files and other content.",
                    "score": 17,
                    "upvotes": 17,
                    "downvotes": 0,
                    "created_utc": 1731609315.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx4l4jq/"
                },
                {
                    "id": "lx593z5",
                    "author": "azangru",
                    "body": "> Is Gatsby still king?\n\nAn emperor with no clothes more like.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731616675.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx593z5/"
                },
                {
                    "id": "lx4j1jl",
                    "author": "michaelfrieze",
                    "body": "Just use Astro.",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731608688.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx4j1jl/"
                },
                {
                    "id": "lx42rp3",
                    "author": "tobimori_",
                    "body": "Astro as SSG. I always use the wonderful Kirby CMS (https://getkirby.com/) but it might not be everyone's taste",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731603746.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx42rp3/"
                },
                {
                    "id": "lx46txm",
                    "author": "ezhikov",
                    "body": "Do you need react to do react stuff, or just as a template language? Because for generic blog react is an overkill. Although, 11ty now can use jsx as a template language via [tsx](https://tsx.is/)",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731604996.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx46txm/"
                },
                {
                    "id": "lx8scew",
                    "author": "Queasy-Big5523",
                    "body": "I've started using Astro half a year ago for my business and it's great. It's \"kinda like React\", but a bit simpler. There's still composition and all these things you'd expect though.\n\nAnd, if you need the actual React, you can bring it in as an \"island\", which is also great.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731667457.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx8scew/"
                },
                {
                    "id": "lx7lx5s",
                    "author": "ConsciousAntelope",
                    "body": "Next with pages dir was great for static site. I have a few projects and it was so good. Too bad the API will be deprecated in the near future. Astro seems good with what you're suggesting.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731644730.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx7lx5s/"
                },
                {
                    "id": "lx574cj",
                    "author": "IwillregretthiswontI",
                    "body": "Have a look at Gatsby :) no server side rendering required.",
                    "score": -6,
                    "upvotes": -6,
                    "downvotes": 0,
                    "created_utc": 1731616059.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx574cj/"
                },
                {
                    "id": "lx5qdfk",
                    "author": "None",
                    "body": "[deleted]",
                    "score": -5,
                    "upvotes": -5,
                    "downvotes": 0,
                    "created_utc": 1731621955.0,
                    "parent_id": "t3_1gr93a3",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx5qdfk/"
                },
                {
                    "id": "lx6kefi",
                    "author": "OkayAnalysis6799",
                    "body": "👍",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731631690.0,
                    "parent_id": "t1_lx4l4jq",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx6kefi/"
                },
                {
                    "id": "lx922de",
                    "author": "vizim",
                    "body": "I miss Gatsby",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731672503.0,
                    "parent_id": "t1_lx593z5",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx922de/"
                },
                {
                    "id": "lx6kcmb",
                    "author": "OkayAnalysis6799",
                    "body": "Looks great. Diving in now",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731631673.0,
                    "parent_id": "t1_lx4j1jl",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx6kcmb/"
                },
                {
                    "id": "lx9gfy2",
                    "author": "OkayAnalysis6799",
                    "body": "Perfect description. I read through a handful of the docs and did the intro tutorial yesterday. Exactly what I wanted. Component composition, file based routing, plus almost no limitation on what it can be extended to as needed.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731678270.0,
                    "parent_id": "t1_lx8scew",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx9gfy2/"
                },
                {
                    "id": "lx6k8br",
                    "author": "OkayAnalysis6799",
                    "body": "I want React primarily for component  composition, but also to keep options open for future features. Astro seems great.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731631633.0,
                    "parent_id": "t1_lx5qdfk",
                    "link_id": "t3_1gr93a3",
                    "permalink": "/r/reactjs/comments/1gr93a3/what_is_the_best_static_site_generator_based_on/lx6k8br/"
                }
            ]
        },
        {
            "id": "1gr8cfz",
            "title": "Can we have two css solutions in project?",
            "author": "_gooddevil",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 9,
            "created_utc": 1731600760.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/",
            "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/",
            "selftext": "Hey guys, I searched a lot but couldn't find the right answer.\nCan we have two style/css solutions in the project?\nusing two ui library like mui+antd is doesn't make sense for many reasons like bundle size, but what about TailwindCss and Mui.\nDoes it make our code complex?\nWhat are the best practices?",
            "comments": [
                {
                    "id": "lx3z5xf",
                    "author": "Frosty_Goose7074",
                    "body": "I have used that exact combination (tailwind and mui) and it made sense for me because I was using tailwind for the overall style but Mui for some pre-made components that I didn’t want to code from scratch.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731602646.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx3z5xf/"
                },
                {
                    "id": "lx3zkg1",
                    "author": "divclassdev",
                    "body": "You can, but imagine I’ve just joined your team and now I’m in your slack dms:\n\nHey, why do we have both tailwind and mui?\nAre we migrating from one to the other?\nShould I only use one or the other in certain components?\nHow do I know which to use when?\n\nOr, on my first day you can just say “oh we use tailwind.”",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731602769.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx3zkg1/"
                },
                {
                    "id": "lx6i50i",
                    "author": "TheRealSeeThruHead",
                    "body": "Can you instead use a unstyled component library with tailwind.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731630933.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx6i50i/"
                },
                {
                    "id": "lx77zq3",
                    "author": "aviemet",
                    "body": "Why add 2 style abstractions to your project? If you want to use MUI components, use their style system. If you want to use tailwind, use shadcn. The mental overhead of switching between them is more than I'd be willing to pay.\n\nWhat happens when your tailwind styles cascade down to child MUI components or vice versa? In which system do you fix conflicts? Why would you want to have to answer these questions when you could just pick one system and run with it?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731639710.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx77zq3/"
                },
                {
                    "id": "lx8nvni",
                    "author": "besseddrest",
                    "body": "> Can we have two style/css solutions in the project?\n\nYou can have as many that will work together to achieve your goal. But...\n\n> Does it make our code complex?\n\nYou introduce more complexity. More bulk. You have excess. You also make it complex for others that may work in your code\n\n> What are the best practices?\n\nTHe best practice is always consistency. If you commit to more than one you have to adhere to the system you create. If you get tired of using one library cause its much easier to do this and that in just one of them, now you have a 2nd library that is just occupying space, and something that you have to spend time stripping out and you don't have that. It's best when you come up with a system and you adhere to it\n\nMy advice is to use 1 system that has a good community around it. Learn it and if u need something special from another see if you can instead build it on your own.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731664742.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx8nvni/"
                },
                {
                    "id": "lx8svjw",
                    "author": "Queasy-Big5523",
                    "body": "You can have five different solutions in one project, that's physically possible. Should you though, is another question.\n\nTo be frank, I find all these UI toolkits like MUI a great tool for prototyping, but not for production. You'll always arrive at a place where no ready-made component cuts it and you're standing before the choice of forking, building your own or throwing another library.\n\nI would suggest ditching all these and either use something like Tailwind and connect it with Radix or React Aria, or going completely tool-less. That's what I've been doing for years in various projects and for various clients and it always paid off in the end. But remember that it's a bumpy and complex ride, much more involved than importing a button from your UI lib.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731667760.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx8svjw/"
                },
                {
                    "id": "lx5l4ex",
                    "author": "Due_Emergency_6171",
                    "body": "Add a few ui libraries and jss solutions as well, the more the merrier",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731620350.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx5l4ex/"
                },
                {
                    "id": "lx69sfl",
                    "author": "frogic",
                    "body": "It's probably fine. The two things that would give me pause is 1) there are a bunch of component libraries built with tailwind so you're a lot more likely to have a consistent feel for your site without as much customization. 2) because of 1, i'm not sure you're gaining that much not just writing pure css and adding mental overhead when you switch between reasoning two different ways of styling. \n\n\nThat being said you know your problem space and your abilities better than anyone here is going to and if you think it's the best way to solve your problem then why not?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731628152.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx69sfl/"
                },
                {
                    "id": "lx6kh45",
                    "author": "horizon_games",
                    "body": "Next you'll have 3 chart libraries like a recent project I was on",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731631714.0,
                    "parent_id": "t3_1gr8cfz",
                    "link_id": "t3_1gr8cfz",
                    "permalink": "/r/reactjs/comments/1gr8cfz/can_we_have_two_css_solutions_in_project/lx6kh45/"
                }
            ]
        },
        {
            "id": "1gr742u",
            "title": "Best React Testing Library",
            "author": "JoyShaheb_",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 19,
            "created_utc": 1731597596.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr742u/best_react_testing_library/",
            "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/",
            "selftext": "Hey everyone,\n\nI have a react project where i added storybook for UI visual testing/documentation of the components and all. \n\nI was wondering what is the best React testing library out there? best in terms of future proof, interaction testing, components testing, functions and all? I am hearing Jest here and there, but i would like to know the opinions of experts in this subject. Thanks in Advanced 🙏",
            "comments": [
                {
                    "id": "lx42yhl",
                    "author": "nabrok",
                    "body": "vitest framework.\n\n@testing-library/react and @testing-library/user-event to run the tests.\n\nmsw to mock API calls.",
                    "score": 48,
                    "upvotes": 48,
                    "downvotes": 0,
                    "created_utc": 1731603805.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx42yhl/"
                },
                {
                    "id": "lx4apaf",
                    "author": "cac",
                    "body": "Since you have storybook, look into Storybook Tests. It uses Vitest and testing library https://storybook.js.org/docs/writing-tests/component-testing",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731606166.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx4apaf/"
                },
                {
                    "id": "lx3kysk",
                    "author": "AndrewSouthern729",
                    "body": "I use vitest which is essentially jest for Vite.  It took some getting used to for someone like me who was new to unit testing.  I use it in combination with mockito which is used to mock different implementations.  I tend to use it mostly for mocking instances of types.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731598199.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx3kysk/"
                },
                {
                    "id": "lx3r8ru",
                    "author": "ConstructionNext3430",
                    "body": "Used jest (for mobile and web same repo) in a project. It worked. I wish meta / Facebook gave more direction on their official testing frameworks like how Apple and Xcode get xctests",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731600174.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx3r8ru/"
                },
                {
                    "id": "lx5frbu",
                    "author": "Canenald",
                    "body": "Jest is not a react testing library. It's a test runner on steroids, but not only for Reaet. You can run any js tests with it.\n\nReact Testing Library (RTL) is the unchallenged standard for testing React with unit-like tests.\n\nsome things I've tried...\n\n**Jest/Vitest**\n\nPros: easy to use module mocking feature with support for es6 imports\n\nCons: gets slow with a lot of imports\n\n  \n**Mocha**\n\nPros: blazing fast\n\nCons: It's purely a test runner so you have to install libraries for everything else. Good luck mocking es6 imports.\n\n  \n**RTL**\n\nPros: Runs like unit tests.\n\nCons: Slower than other unit tests. Failures can be inspected by dumping raw html.\n\n\n\nsome alternatives to unit-like tests with RTL...\n\n**Cypress component testing**\n\nPros: You can see your component in the browser as it's tested and after the tests. You can travel through time and review what happened.\n\nCons: Builds a dummy app with your component rendered in it so it can be slow to start.\n\n\n\n**Simply testing in browser using Cypress or Playwright**\n\nPros: Similar level of testing to RTL but you get to see your app and time travel through tests for debugging. Really tests the app the way it's going to be used (in a browser)\n\nCons: Slower than RTL.\n\n  \nHave fun choosing and living with your choices :)",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731618704.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx5frbu/"
                },
                {
                    "id": "lx4otzl",
                    "author": "theorcestra",
                    "body": "Place I used to work at used cypress for E2E, no complaints about that system.  It was well structured, ran well and allowed for the full stack of services to be tested.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731610443.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx4otzl/"
                },
                {
                    "id": "lx7owmq",
                    "author": "notkraftman",
                    "body": "I would highly recommended storybook tests. They've just updated it so you can run your regular vitest unit tests and storybook tests together.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731645939.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx7owmq/"
                },
                {
                    "id": "lx8t2a0",
                    "author": "Queasy-Big5523",
                    "body": "Depends on what you're using for bundling. If Vite (like you should, btw), go with Vitest. If not, take Jest, as it will be easier to integrate. For both, though, throw in Testing Library for React.\n\nWith Storybook 8.2 there's a new feature for testing stories, so you can also have a look there. Haven't tried this myself yet though.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731667869.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx8t2a0/"
                },
                {
                    "id": "lx8xocm",
                    "author": "ORCANZ",
                    "body": "- Unit tests: vitest\n- Component testing: RTL\n- E2E: playwright",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731670369.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx8xocm/"
                },
                {
                    "id": "lx970qe",
                    "author": "kettanaito",
                    "body": "A lot of great suggestions in this thread already! Here's what I'd use to test React components in 2024/2025.\n\n* Use Vitest instead of Jest. Vitest offers great ESM support, is extremely fast (x3-4 faster than Jest everywhere I tried it), and works fantastically out-of-the-box.\n* Uninstall JSDOM for good.\n* Instead, use [Vitest Browser Mode](https://vitest.dev/guide/browser/) (or [Playwright Components](https://playwright.dev/docs/test-components)) for integration tests in the actual browser. Normalize testing where your components are meant to be run—in the browser.\n* Playwright/Cypress for E2E tests.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731674668.0,
                    "parent_id": "t3_1gr742u",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx970qe/"
                },
                {
                    "id": "lx5igog",
                    "author": "mikewitk",
                    "body": "This stack warms my heart",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731619531.0,
                    "parent_id": "t1_lx42yhl",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx5igog/"
                },
                {
                    "id": "lx8axd8",
                    "author": "Practical-Ideal6236",
                    "body": "[msw: Handling API Calls with Mock Service Worker](https://www.trevorlasn.com/blog/react-testing-mock-service-worker)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731656916.0,
                    "parent_id": "t1_lx42yhl",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx8axd8/"
                },
                {
                    "id": "lx8udi4",
                    "author": "joyancefa",
                    "body": "I discovered a great one lately that can be used with Cypress to mock servers: \n\nhttps://www.mocks-server.org",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731668606.0,
                    "parent_id": "t1_lx42yhl",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx8udi4/"
                },
                {
                    "id": "lxci5wl",
                    "author": "straightouttaireland",
                    "body": "RTL and userEvent are great....but can be so slow.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731712301.0,
                    "parent_id": "t1_lx42yhl",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lxci5wl/"
                },
                {
                    "id": "lx6lsrl",
                    "author": "ConstructionNext3430",
                    "body": "Ah, I couldn’t think of cypress when I was writing my comment here but i used that too. My understanding was that cypress was for web only?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731632156.0,
                    "parent_id": "t1_lx5frbu",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx6lsrl/"
                },
                {
                    "id": "lxaxzay",
                    "author": "Pauli444",
                    "body": "Vitest browser mode is a combination of classic vitest and playwright. Currently imo is the best option for ui unit tests. \n\nAlso maybe storybook - in new versions it can do everything. But is harder to setup.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731694815.0,
                    "parent_id": "t1_lx5frbu",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lxaxzay/"
                },
                {
                    "id": "lxayofc",
                    "author": "Pauli444",
                    "body": "Agreed. I would just not use cypress if you can choose playwright. Cypress makes sense if you are used to it. But what I found is that it lacks some features that PW has.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731695020.0,
                    "parent_id": "t1_lx970qe",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lxayofc/"
                },
                {
                    "id": "lx96d5p",
                    "author": "kettanaito",
                    "body": "Agreed!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731674395.0,
                    "parent_id": "t1_lx5igog",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx96d5p/"
                },
                {
                    "id": "lx73g2g",
                    "author": "Canenald",
                    "body": "Yes, it runs tests in the browser.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731638146.0,
                    "parent_id": "t1_lx6lsrl",
                    "link_id": "t3_1gr742u",
                    "permalink": "/r/reactjs/comments/1gr742u/best_react_testing_library/lx73g2g/"
                }
            ]
        },
        {
            "id": "1gr6gfm",
            "title": "Backend woes from a Frontend Dev",
            "author": "okramv",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 25,
            "created_utc": 1731595837.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/",
            "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/",
            "selftext": "So... I'm burning through Firebase/Supabase free tier while testing my app. I had 10gb usage last month on Firebase, and testing Supabase this month I spent 1/3rd already. \n\nBy fetching some basic text, I guess I'm hammering the database with the amount of requests. And, I was hoping to have these dilemmas when the app is public, lol.\n\nWhich leads me to these questions: What are you guys using for Backend? Where are you hosting them? And, what plan are you on...\n\nThank you.",
            "comments": [
                {
                    "id": "lx525l3",
                    "author": "TheRealKidkudi",
                    "body": "In general, you should develop against a local or self hosted DB so you’re not paying for every request resent every time HMR refreshes or whatever. IMO you should really develop in an environment where *everything* is running locally, or at least as much as possible. \n\nFirebase, for example, has [a local emulator](https://firebase.google.com/docs/emulator-suite). Supabase similarly has a [CLI for local development](https://supabase.com/docs/guides/local-development).",
                    "score": 27,
                    "upvotes": 27,
                    "downvotes": 0,
                    "created_utc": 1731614520.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx525l3/"
                },
                {
                    "id": "lx3jxph",
                    "author": "besseddrest",
                    "body": "What? it sounds like the problem is you're hammering the db with a lot of requests when you fetch basic text, the fix isn't to switch your backend/hosting service",
                    "score": 22,
                    "upvotes": 22,
                    "downvotes": 0,
                    "created_utc": 1731597872.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3jxph/"
                },
                {
                    "id": "lx3ejdz",
                    "author": "BackpackPacker",
                    "body": "I host everything on a VPS except for authentication. I still use Supabase for that. ",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731596090.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3ejdz/"
                },
                {
                    "id": "lx4hjdu",
                    "author": "teslas_love_pigeon",
                    "body": "Don't test using production services, make different environments. Try to spin up equivalent services locally.\n\nIf you're tightly coupled to firebase (never used it), this might be hard/impossible but it's a good exercise to understand why it's useful to develop code in an agnostic manner.\n\nA good first step is to seed a database locally, this is extremely simple IME. It only becomes hard when you tightly tie your business logic with services that don't allow you to break away from.\n\nTry to keep these things in my when designing for the future.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731608232.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx4hjdu/"
                },
                {
                    "id": "lx3jhaz",
                    "author": "blu789",
                    "body": "I built a key/value cache in my app for this very reason.  I do a lot of repetitive reads to firebase and saves 90% of my free tier by adding a simple cache.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731597726.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3jhaz/"
                },
                {
                    "id": "lx3inli",
                    "author": "Any-Blacksmith-2054",
                    "body": "Everything on Free Oracle ARM instance, all projects, all databases, auth, elastic, redis, whatever",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731597457.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3inli/"
                },
                {
                    "id": "lx3pzfi",
                    "author": "trcrtps",
                    "body": "I don't know if this is a thing anymore, but in dev mode I believe it does everything twice? You should be figuring out how many API calls you are making and how to correct that before thinking about switching services.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731599780.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3pzfi/"
                },
                {
                    "id": "lx3ggcz",
                    "author": "alzee76",
                    "body": "I host pretty much everything on AWS EC2 instances I roll myself.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731596732.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3ggcz/"
                },
                {
                    "id": "lx3h94n",
                    "author": "adevx",
                    "body": "Everything on Hetzner VPS instances, auth included. 32GB, 16vcpu, 320GB (CAX41)",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731596996.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3h94n/"
                },
                {
                    "id": "lx3rcxp",
                    "author": "no_dice_grandma",
                    "body": "I self host with Postgres. You can install directly on linux or within a docker container in minutes.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731600211.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx3rcxp/"
                },
                {
                    "id": "lx45wbw",
                    "author": "dfltr",
                    "body": "For basic test servers, it’s hard to go wrong with a free tier Elastic Beanstalk instance.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731604710.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx45wbw/"
                },
                {
                    "id": "lx4eahc",
                    "author": "Ok-master7370",
                    "body": "Used to have a similar problem testing with supabase, so I made a react project I use as a supabase template after trail and error, it has everything down to crud, I only test new features",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731607244.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx4eahc/"
                },
                {
                    "id": "lx6i7an",
                    "author": "Anbaraen",
                    "body": "This is an x/y problem, your problem is you're using live services during development. You need to use local equivalents so you don't build up a huge bill, then have testing to make sure the live environment works when you switch over.\n\nYou can even fully mock your network requests and just build the frontend with something like Mock Service Worker before you focus on integration with the backend.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731630954.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx6i7an/"
                },
                {
                    "id": "lx6r4nf",
                    "author": "vizim",
                    "body": "Are you polling your the api? Consider using the realtime features.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731633987.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx6r4nf/"
                },
                {
                    "id": "lx7degx",
                    "author": "SayHiDak",
                    "body": "While I agree with everyone saying that you should develop on local as much as possible. It’s not bad that you are realizing that you are eating your usage for free tier for your app while using it “normally”. So yes, you are hammering, that’s what people is gonna do when they use your app. And that’s why we cache repetitive data to avoid making too many unnecessary requests to the database which is also a common practice even in local.\n\nAs for backend. It depends on the needs, if I need a CMS I go with Strapi.\nIf I need a fast backend I do Golang\nIf I need something simple I go with Express\nI always docker everything\nAWS is awesome for deploying most of the services but since you are in Firebase I would stick to GCP to unify all the services.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731641624.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx7degx/"
                },
                {
                    "id": "lx86cu5",
                    "author": "No-Acanthaceae-5979",
                    "body": "Host ur own database for dev purposes or use mock data. When you're ready, switch to production db. Docker compose up will spin up the database before you can get coffee...",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731654370.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx86cu5/"
                },
                {
                    "id": "lx8wgd9",
                    "author": "theofficialnar",
                    "body": "What project do you have that burns through free tier firebase just for testing? Damn, I have a live web app that me and my wife use for tracking our expenses and it barely even gets close to 70% usage.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731669736.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx8wgd9/"
                },
                {
                    "id": "lx9fga5",
                    "author": "aaronksaunders",
                    "body": "I have built multiple apps with multiple developers and have never come close to the edge on the free tier, what exactly does you app do and what are u doing to the database? That probably should be the first question.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731677911.0,
                    "parent_id": "t3_1gr6gfm",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx9fga5/"
                },
                {
                    "id": "lxczlpn",
                    "author": "ruddet",
                    "body": "Containerize all the things!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731718701.0,
                    "parent_id": "t1_lx525l3",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lxczlpn/"
                },
                {
                    "id": "lx4bo0x",
                    "author": "okramv",
                    "body": "I'm just using the site normally to be clear. I only end up with more requests because I'm staying longer to observe changes.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731606457.0,
                    "parent_id": "t1_lx3jxph",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx4bo0x/"
                },
                {
                    "id": "lxbc2zo",
                    "author": "EvilPencil",
                    "body": "Yep.  It's extremely common for backend devs to have all the backing services running locally in docker containers.  Firebase is no exception.\n\n[https://medium.com/@jens.skott\\_65388/simplifying-firebase-emulation-with-docker-a-guide-to-local-development-and-testing-0c3c33fd92c7](https://medium.com/@jens.skott_65388/simplifying-firebase-emulation-with-docker-a-guide-to-local-development-and-testing-0c3c33fd92c7)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731699006.0,
                    "parent_id": "t1_lx4hjdu",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lxbc2zo/"
                },
                {
                    "id": "lx8rbj2",
                    "author": "kool0ne",
                    "body": "Did you use a tool/library for this or did you build it from scratch?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731666850.0,
                    "parent_id": "t1_lx3jhaz",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx8rbj2/"
                },
                {
                    "id": "lx4gi3y",
                    "author": "besseddrest",
                    "body": "sorry, im a bad reader \"while testing my app\"",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731607918.0,
                    "parent_id": "t1_lx4bo0x",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lx4gi3y/"
                },
                {
                    "id": "lxa3oi9",
                    "author": "blu789",
                    "body": "Fundamentally, a key value cache is super easy to write (my key is a collection query, my value is the list of documents that matched that query).  With that in mind, I used something called bolt.new. It's basically Claude wrapped in an IDE. There is a paid version and an open source version. I'm on the paid version.\n\nI wrote a spec of how it should work (about 5 minutes of brainstorming with gemini), then fed the spec to bolt.new (Claude under the hood) and waited for bolt to finish...\n\nBolt wrote my cache, from my spec, bug free, and it worked the first time, in about 30 seconds. Actually closer to 20 seconds.  So total time.. under 6 minutes.\n\nIt worked so well the first time, I had it add cache statistics on top of it.  Looking at the final code, about 75% of it is statistics, 20% is the actual cache logic.  The entire cache logic with statistics is about 350 lines of code ... \n\nOn a side note, using bolt, I wrote in 6 days what I couldn't do in 6 months.\n\nGoing on a tangent: I personally feel, at no point in the future, should people be writing code anymore. We should be project managers writing detailed specifications and schema structures and data flow diagrams and let AI handle the tedious part of coding it.  I reviewed the code it built line by line and it looked fantastic.  It could use some comments (bolt doesnt' write comments unless you explicitly ask it to), but yea, the code is phenomenal.\n\nThe statistics it spits out is crazy. I learned so much about the behavior of my app in minutes.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731685813.0,
                    "parent_id": "t1_lx8rbj2",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lxa3oi9/"
                },
                {
                    "id": "lxdfi88",
                    "author": "blu789",
                    "body": "BTW.\n\nif you read my previous reply from 11 hours ago, I was just praising bolt.\n\nWell, I just switched to wavesurf from codeium about an hour ago.  It was released 3 days ago and i didn't know about it until a few hours ago when an AI enthustiast friend showed it to me.\n\nIt's a version of bolt integrated into it's own branch of vscode.  It uses codeim's UI stuff that's built into vscode etc...  \n\nIt's far superior UI (it uses Claude also, so it's the same LLM), and it's free (bolt charges $).\n\nI will be using wavesurf for a few days or weeks until something better comes along.\n\nJust fyi.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731724913.0,
                    "parent_id": "t1_lx8rbj2",
                    "link_id": "t3_1gr6gfm",
                    "permalink": "/r/reactjs/comments/1gr6gfm/backend_woes_from_a_frontend_dev/lxdfi88/"
                }
            ]
        },
        {
            "id": "1gr5b29",
            "title": "Is Clerk really that good?",
            "author": "Difficult-Visual-672",
            "score": 36,
            "upvotes": 36,
            "downvotes": 0,
            "num_comments": 49,
            "created_utc": 1731592580.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/",
            "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/",
            "selftext": "I don’t mean to sound overly skeptical, but when a service is aggressively marketed everywhere, it starts to feel like one of those casino ads popping up from every corner. It may be fun at first, but eventually costly.\n\nFrom a developer’s perspective, it’s even more concerning when your app becomes tightly bound to a closed-source (the platform itself), paid service. If something changes, you’re often left with two choices: accept their terms or rebuild everything from scratch.\n\nNowadays, I have the feeling that relying too heavily on these kinds of platforms can turn into a trap. They risk limiting your flexibility and forcing you into decisions that might not align with your long-term vision.\n\nThat said, I’ve really barely used Clerk, and I’m probably just being biased. So I’d like to hear more opinions about it.",
            "comments": [
                {
                    "id": "lx41zdp",
                    "author": "memestheword",
                    "body": "I used it for a side project, and yes it is incredibly easy to setup. Especially if you use their prebuilt components. \n\nThe part I don't feel great about is syncing their data with my db. If you don't use cloud auth, this is pretty trivial, but with Clerk you need to use a webhook and create an endpoint for it to call to update your db whenever there's a user CRUD operation. It has been working for me for the most part, but I feel like it would only take one thing to go wrong and all of of a sudden you're out of sync.",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731603502.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx41zdp/"
                },
                {
                    "id": "lx3ayvu",
                    "author": "Beautiful_Object_344",
                    "body": "I use it regularly with Convex. It’s simple and quick to integrate and have auth and database set up and running. That being said. It’s a trade off in quick starting but costs can go up if you scale but as a solo dev that’s something I’ll happily deal with later if it takes off. Which would happen after 10k monthly active users.",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731594858.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3ayvu/"
                },
                {
                    "id": "lx4ee0s",
                    "author": "xChooChooKazam",
                    "body": "We use it in production with a very large customer base and like anything else there’s pros and cons. Pricing can be crazy if you’re not large enough to get custom pricing. We just implemented it in the past year, and already had to make some major changes with their v5 upgrade to stay current. Their FGA implementation is pretty poor in comparison to something like Okta. Those are really minor things though and otherwise it’s been a solid company to work with who always is available to help with major issues.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731607275.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4ee0s/"
                },
                {
                    "id": "lx5bngq",
                    "author": "hollyhoes",
                    "body": "as someone's who has rolled my own auth, from social login to smart cards, both for corporate work and for my own clients, Clerk was honestly a such a relief for my current startup. Specifically, in a 0->1 context, I move faster without breaking because it's been pretty reliable thus far. \n\nHonestly for the time it'd take for me to roll my own auth, then maintain it, could have costed thousands of dollars of my hourly rate, let alone opportunity cost of working on features instead. and if I ever run into the issue where it becomes too expensive, esp past the 10k user mark, migrating really isn't a huge deal and is a good problem to have, because my software has good monetization strats.\n\nto address your concern about it being closed-source, absolutely can be an issue. but in the doomsday scenario clerk  does something stupid, I'd just migrate to a new provider. still would probably take less time then rolling/maintaining my own auth. idk there's a lot of loud hate for paid services in the dev community but also they're all annoying and don't make jack shit on their indie projects so i'm ok being hated for using something like Clerk.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731617452.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx5bngq/"
                },
                {
                    "id": "lx369kn",
                    "author": "CodeAndBiscuits",
                    "body": "I've used Clerk. It was early days and didn't work out. But I would use it again. I don't see how this is any different in your OP than Auth0, Cognito, etc. This isn't like choosing cloud hosting providers, where with some thoughtful decisions and adjustments in your stack, you can stay very generic and portable. Do you know how to construct a properly crafted and bulletproof authentication back end? There are open source options out there for this, but a lot of people think they can just install Passport and they're done. The truth is more complex than that, and it's very easy to make a mistake that introduces an attack vector. Unless you are a security expert, crafting your own authentication mechanism is a risk, and don't forget that these products include management tools and a lot of other features that are usually the value people really pay for. \n\nMarketing is marketing. I'm not sure why you are seeing so many ads for it; I am not. But that's just the ad networks at work.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731593160.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx369kn/"
                },
                {
                    "id": "lx3jze6",
                    "author": "JohntheAnabaptist",
                    "body": "It's pretty good, no real complaints other than that if I use it, I immediately feel locked in. With nextauth (haven't updated to v5 yet) I don't feel locked in. Clerk offers a lot of out of the box features that I would have to implement myself if I wanted them though. Try it, it's easier to try than to ask others for some vibes.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731597888.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3jze6/"
                },
                {
                    "id": "lx3yr9b",
                    "author": "yksvaan",
                    "body": "Use any auth provider you wish but keep your user data to yourself. ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731602522.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3yr9b/"
                },
                {
                    "id": "lx36muk",
                    "author": "budd222",
                    "body": "I've never heard of it or seen a single ad for it. It's called retargeting. You obviously went to their site and now you're being shown ads. Doesn't mean it's marketed aggressively.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731593296.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx36muk/"
                },
                {
                    "id": "lx3qarl",
                    "author": "M4nnis",
                    "body": "It appears to me extremely expensive.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731599878.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3qarl/"
                },
                {
                    "id": "lx4ffwi",
                    "author": "Finerfings",
                    "body": "I've used it on a few projects. Super easy to set up, generous free plan, good docs.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731607593.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4ffwi/"
                },
                {
                    "id": "lx49mqy",
                    "author": "fredblols",
                    "body": "It's kinda like NordVPN in this way i guess",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731605845.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx49mqy/"
                },
                {
                    "id": "lx7ziw9",
                    "author": "bubbaholy",
                    "body": "It was really easy to get organization (like Slack workspaces) support working, and it comes with a lot of prebuilt React components. The price isn't much of an issue if you have paid users, compared to the cost of recreating it. If none of those things apply, might as well look at something else more open and less expensive.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731650801.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx7ziw9/"
                },
                {
                    "id": "lx8tdyj",
                    "author": "Queasy-Big5523",
                    "body": "I've used Clerk and migrated from it, simply to save on money (client preferred to pay me for a few weeks of work rather than pay $25 per month, fine with me). It was a bit of a chore, but I was prepaired for this, as I synced everything with the client's DB, so Clerk was handling \"just\" the auth part.\n\nHonestly, the tool's great and I would still use it and suggest it to customers. But it can be expensive, especially if you're just starting and watching every penny twice before spending it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731668054.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx8tdyj/"
                },
                {
                    "id": "lx37ht9",
                    "author": "trekinbami",
                    "body": "It's nice if you have a very simple flow, don't mind the constraints and need to get started quickly. If you need custom stuff, roll your own auth.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731593613.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx37ht9/"
                },
                {
                    "id": "lx35izg",
                    "author": "Jmoghinator",
                    "body": "Not great but easy to set up",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731592884.0,
                    "parent_id": "t3_1gr5b29",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx35izg/"
                },
                {
                    "id": "lx47p6j",
                    "author": "Pelopida92",
                    "body": "I get this. For most projects, it’s better to bet on integrated all-in-one BaaS solutionslike Appwrite, Supabase, etc, because then you users data lives in the same place of all the rest of the backend data of your services. This is important. But of course it depends a lot on project size, project type and so on.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731605260.0,
                    "parent_id": "t1_lx41zdp",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx47p6j/"
                },
                {
                    "id": "lx4gznb",
                    "author": "michaelfrieze",
                    "body": "I haven't had any issues with going out of sync. The webhook seems to work quite well in my experience.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731608066.0,
                    "parent_id": "t1_lx41zdp",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4gznb/"
                },
                {
                    "id": "lxd5kfi",
                    "author": "manueljs",
                    "body": "Just do a fetch and create the user on your db JIT if it doesn't exist. More reliable than webhook.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731721006.0,
                    "parent_id": "t1_lx41zdp",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lxd5kfi/"
                },
                {
                    "id": "lx3u1gv",
                    "author": "jescalan",
                    "body": "Clerk employee here - if you ever feel like it gets to the point where the costs are unreasonable, reach out to our support and we can chat. We are super committed as a company to making sure that our pricing feels fair as you scale up and can certainly work something out if it doesn't!",
                    "score": 14,
                    "upvotes": 14,
                    "downvotes": 0,
                    "created_utc": 1731601058.0,
                    "parent_id": "t1_lx3ayvu",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3u1gv/"
                },
                {
                    "id": "lx4jeyd",
                    "author": "Beautiful_Object_344",
                    "body": "I use it regularly with Convex. It’s simple and quick to integrate and have auth and database set up and running. That being said. It’s a trade off in quick starting but costs can go up if you scale but as a solo dev that’s something I’ll happily deal with later if it takes off. Which would happen after 10k monthly active users. \n\nFor example I built this app with clerk, next.js and convex [ScreenFast](https://screenfa.st)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731608800.0,
                    "parent_id": "t1_lx3ayvu",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4jeyd/"
                },
                {
                    "id": "lx50vyo",
                    "author": "jescalan",
                    "body": "Would love to hear more about the scenario that caused pricing to be crazy for you! Were always working on making our pricing feel fair especially for startups, so if we failed in that way I’d like to fix it ☺️",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731614130.0,
                    "parent_id": "t1_lx4ee0s",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx50vyo/"
                },
                {
                    "id": "lx3a0ju",
                    "author": "adevx",
                    "body": "I don't buy this \"You have to be a security expert\" line, yes if writing your own cypher algo, but not if following well known patterns and using off the shelf libraries. \n\nYes, people should take it seriously and read upon best practices from reputable sources, but as a developer we should not shy away from things that require a bit of upfront learning. There is a lot of power in having your own optimized auth flow, faster onboarding, domain tailored security features, no dependency on a third party that might change the rules mid-game, or become a frowned-upon service due to security breaches.",
                    "score": 20,
                    "upvotes": 20,
                    "downvotes": 0,
                    "created_utc": 1731594518.0,
                    "parent_id": "t1_lx369kn",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3a0ju/"
                },
                {
                    "id": "lx371or",
                    "author": "obl122",
                    "body": "I've never been to their site but I get a lot of ads along with \"ads\" in the form of paid promotion from YT and newsletter authors. They have a large marketing presence.",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731593447.0,
                    "parent_id": "t1_lx36muk",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx371or/"
                },
                {
                    "id": "lx3hemn",
                    "author": "horizon_games",
                    "body": "That's crazy to not have heard of Clerk, on par these days with not hearing of OAuth. I've never been to Clerks site and still have it pop up in discussions, articles, dev channels, etc. Used often for quick scaffolding and throwing an app togethet",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731597047.0,
                    "parent_id": "t1_lx36muk",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3hemn/"
                },
                {
                    "id": "lx49m8y",
                    "author": "mortalhal",
                    "body": "I've heard of it b/c a. lot of dev channels on youtube are sponsored by them",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731605841.0,
                    "parent_id": "t1_lx36muk",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx49m8y/"
                },
                {
                    "id": "lx65w9s",
                    "author": "Mental-Artist7840",
                    "body": "What if your service goes down while a webhook update comes through? You’re out of sync.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731626862.0,
                    "parent_id": "t1_lx4gznb",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx65w9s/"
                },
                {
                    "id": "lx40l4k",
                    "author": "novagenesis",
                    "body": "When I challenge people on that especially WRT credential authentication, nearly 100% of the time their code has a timing attack in it (almost always related to the auth taking far longer if the username is valid than if the username is invalid).\n\nThe next step is where they say \"but timing attacks are ok.  It's not like your user list is confidential\"\n\n...\n\nThat's why I still repeat the \"security expert\" line.\n\nAnd of note, I've seen the exact timing attack in the docs of almost all the diy or semi-diy auth libraries.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731603079.0,
                    "parent_id": "t1_lx3a0ju",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx40l4k/"
                },
                {
                    "id": "lx3w2zd",
                    "author": "Cahnis",
                    "body": "NOOO, you need a security expert to tell you to store the token in an http-only cookie! There is no way you can search it by yourself! /s",
                    "score": -5,
                    "upvotes": -5,
                    "downvotes": 0,
                    "created_utc": 1731601694.0,
                    "parent_id": "t1_lx3a0ju",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3w2zd/"
                },
                {
                    "id": "lx383i8",
                    "author": "teslas_love_pigeon",
                    "body": "I mean you basically signed up to consume ads, where's the shocker? News letters are a waste of time, read actual books.",
                    "score": -15,
                    "upvotes": -15,
                    "downvotes": 0,
                    "created_utc": 1731593832.0,
                    "parent_id": "t1_lx371or",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx383i8/"
                },
                {
                    "id": "lx3vopk",
                    "author": "budd222",
                    "body": "We don't use any auth provider at work so I have no need to research them or care about them, I guess. And I haven't done a personal project outside of work in many years.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731601573.0,
                    "parent_id": "t1_lx3hemn",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3vopk/"
                },
                {
                    "id": "lx423ly",
                    "author": "CodeAndBiscuits",
                    "body": "I think there's a term for this. The people that don't know what they don't know don't know that they don't know it. Security doesn't start and end with simple rules like HTTP only tokens. But the blog posts about \"securing your application\" don't mention things like timing attacks. Folks read the blog posts and assume they are suddenly security experts. Ask them what a nonce is and they assume you mean a misspelled British insult. \n\nThe simple truth is that the vast majority of applications out there just don't get very much attention from elite hackers. They like to believe they are important, but in the grand scheme of things they really aren't. So folks assume that because they haven't been compromised, their security is good. It doesn't mean that at all, but introspection is rare in this space.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731603538.0,
                    "parent_id": "t1_lx40l4k",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx423ly/"
                },
                {
                    "id": "lx41mzk",
                    "author": "Particular-Cow6247",
                    "body": "You seem to understand this a bit\nWhy does it take longer with a valid username?\n\nI would assume because the check is first if the username exist and if then if the pw is correct \nBut couldn’t you just check if the pw is correct for that username?\nLike in pseudo\n\nif(username in db && password === pwQuery(username))\n\nVs \n\nif(password === pwQuery(usernsme))",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731603397.0,
                    "parent_id": "t1_lx40l4k",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx41mzk/"
                },
                {
                    "id": "lx45q6f",
                    "author": "Significant_Hat1509",
                    "body": "Can you please explain this timing attack in more detail, or give a link where it is explained in more detail?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731604657.0,
                    "parent_id": "t1_lx40l4k",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx45q6f/"
                },
                {
                    "id": "lx41cu6",
                    "author": "jescalan",
                    "body": "Clerk's architecture is actually quite different from the standard \"put a session id into an http only cookie\" way of doing auth. It's quite a bit more complex for us to build it this way internally, but results in a more efficient and scalable output for customers. We have a post about this (https://clerk.com/blog/combining-the-benefits-of-session-tokens-and-jwts) in case anyone is interested!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731603312.0,
                    "parent_id": "t1_lx3w2zd",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx41cu6/"
                },
                {
                    "id": "lx38m06",
                    "author": "obl122",
                    "body": "Two different issues. I know what I signed up for and I know it's marketing. But to say Clerk isn't aggressively marketed is simply wrong and that's exactly what you said. So you're, simply, wrong.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731594016.0,
                    "parent_id": "t1_lx383i8",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx38m06/"
                },
                {
                    "id": "lx4gg3a",
                    "author": "novagenesis",
                    "body": "This is 100% true.   I've recently interviewed a lot of people for jobs and NOBODY is able to really talk through the implication of jwts with me.  They don't always provide jwt solutions that are insecure, but it seems more coincidence than expertise.\n\n...and I am FAR from a security expert myself.  I've just had to patch security exploits in enterprise systems before.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731607901.0,
                    "parent_id": "t1_lx423ly",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4gg3a/"
                },
                {
                    "id": "lx4eag0",
                    "author": "Strange_Ordinary6984",
                    "body": "If you're using good password hygiene (maybe bcrypt is still a thing), then you can't just compare passwords. \n\nUsing bcrypt as an example, to check that the password matches, you need to obtain the salt section of the previously hashed password (found in the output of the originally hashed password), then attempt to hash the newly entered password with the same salt. If you end up with the same result, then they must have provided the correct password. This is a kinda slow process.\n\n\nRegardless of how you write that pseudocode, somewhere in there, you still need to:\n\nA. Make a call to look for a user\nB. Check the password\n\n\nIf you find a user, no matter how fast the checking part is, it's still going to take some time. A good timing attack algo can likely compare even the difference of just a few milliseconds as long as the network connection across the chain is stable.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731607244.0,
                    "parent_id": "t1_lx41mzk",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4eag0/"
                },
                {
                    "id": "lx4jfh3",
                    "author": "novagenesis",
                    "body": "What the other guy said.  One path includes a call to a VERY intensive mathematical algorithm.  The other path does not.\n\nThere's a contentious workaround where you hash their password and throw it out iff you don't find the user.  The problem with that is that it's CPU-heavy to check a password.\n\nThere's no objectively-best answer.  A company that specialized in security will weigh the pros and cons and provide you a reasonable one.  Maybe they'll do a blind random wait of approximately the hashing time?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731608804.0,
                    "parent_id": "t1_lx41mzk",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4jfh3/"
                },
                {
                    "id": "lx4ezgv",
                    "author": "novagenesis",
                    "body": "I'd be happy to.\n\nConsider this pseudocode:\n\n    login(username,password) {\n      user = db.getUser(username);\n      if(!user) throw new AccessDeniedError();\n      // <--oh no, the timing attack is here!\n      if(user.hashedPassword == slowEncryptionHash(password)) {\n        return true;\n      }\n      else throw new AccessDeniedError();\n    }\n\nThis is THE most common credentials workflow I see.  The timing attack happens when username fails to match a user because the hashing of the password is SO slow it changes the overall response time.  In practice, an attacker writes a simple program that attempts to login a million usernames with random passwords, keeping track of how long the request took to receive a response.  (It's easy to rotate IP addresses to avoid most protections on mass-requests)\n\nThey will end up with 2 categories that are easily separated.  The \"fast responses\" (maybe sub-100ms in some systems) and the \"slow responses\" (maybe 400+ms).\n\nWhat does it mean?  They throw out the fast response list.  The slow response list **is a list of valid usernames in the system that they successfully harvested from this exploit**.\n\nNetwork speeds are not perfectly consistent, so it's possible a few in the \"slow\" list aren't real... but they can always do a second pass to verify.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731607455.0,
                    "parent_id": "t1_lx45q6f",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4ezgv/"
                },
                {
                    "id": "lx47ls5",
                    "author": "Cahnis",
                    "body": "\n\nDid you miss the \"/s\"?\n\n\nBut the blogpost does seem interesting, ty i will check it out",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731605231.0,
                    "parent_id": "t1_lx41cu6",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx47ls5/"
                },
                {
                    "id": "lx3d3fx",
                    "author": "teslas_love_pigeon",
                    "body": "I didn't say that, read the names in this thread dude. I know you prefer small blurbs of text but if you don't even know who you are responding to you should take some english classes at your local CC.\n\nCritical reading isn't just for communication majors now.",
                    "score": -11,
                    "upvotes": -11,
                    "downvotes": 0,
                    "created_utc": 1731595600.0,
                    "parent_id": "t1_lx38m06",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3d3fx/"
                },
                {
                    "id": "lx4k31x",
                    "author": "Particular-Cow6247",
                    "body": "Seems like the salt is the problem then?\nOtherwise you could always first hash the incoming password first and then do a lookup",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731609000.0,
                    "parent_id": "t1_lx4eag0",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4k31x/"
                },
                {
                    "id": "lx4hhoo",
                    "author": "Significant_Hat1509",
                    "body": "Thanks!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731608218.0,
                    "parent_id": "t1_lx4ezgv",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4hhoo/"
                },
                {
                    "id": "lx4gh8o",
                    "author": "got_no_time_for_that",
                    "body": "But if you're being sarcastic, it implies that *actually, you can just implement this on your own without too much effort*. So wouldn't the response explaining that it is actually quite a bit more complicated than that be warranted?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731607910.0,
                    "parent_id": "t1_lx47ls5",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4gh8o/"
                },
                {
                    "id": "lx777kk",
                    "author": "jescalan",
                    "body": "No, but most people on the internet tend to, so I figured I'd provide some potentially useful context!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731639440.0,
                    "parent_id": "t1_lx47ls5",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx777kk/"
                },
                {
                    "id": "lx3h9i0",
                    "author": "stewman241",
                    "body": "There's a difference between expecting ads, where you'd normally expect a distribution from various vendors, and seeing ads predominantly from one vendor.\n\nPresumably there are some target parameters though and certain people fall within them.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731597000.0,
                    "parent_id": "t1_lx3d3fx",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx3h9i0/"
                },
                {
                    "id": "lx4m9s7",
                    "author": "Strange_Ordinary6984",
                    "body": "Yes, the salt is preventing that from happening. \n\n\nI'll rant a little.\n\nThere's basically two ways to encrypt something. One way or two way.\n\nTwo-way encryption is super handy, but to decrypt the item, you need to agree on a secret password that you can use. This is extremely useful, but the problem is that now all you've done is move your vulnerability to a new location. If you're building a server that stores users' passwords, you'll need to have the secret key somewhere on that machine. If a hacker invades that server and finds the secret, you might as well have stored them in plaintext\n\nOne way encryption is an interesting way to solve this problem. What you do is create a random secret and hash the password with it, then store the secret right alongside the hashed password! The trick is that the secret doesn't decrypt the payload. It's just the one used to encode it. If you use the same secret, called a salt, and the same input, you'll always get the same output. Thus, you can verify, but not decrypt. \n\nNow, there's no secret for a hacker to find.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731609666.0,
                    "parent_id": "t1_lx4k31x",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4m9s7/"
                },
                {
                    "id": "lx4kdo5",
                    "author": "Cahnis",
                    "body": "It doesn't need to always be as complicated as clerk, and it is not something a regular dev can't crack either. Depends on the project.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731609087.0,
                    "parent_id": "t1_lx4gh8o",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx4kdo5/"
                },
                {
                    "id": "lx78j8g",
                    "author": "jescalan",
                    "body": "Entirely agreed tbh. I would not in a million years recommend a developer try to architect their auth the way Clerk does, if they are implementing it themselves. The benefits wouldn't be worth the added complexity.\n\nIt does make sense for devs to *adopt* it though, since as a dev you don't need to deal with any of the complexity (we eat it for you), so it's pure upside. It also makes sense for us as a SaaS company, as the complexity is a fixed cost effectively, where the benefits that result from this crazy architecture are something that every paying customer gets an advantage from, so it scales well business-wise.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731639901.0,
                    "parent_id": "t1_lx4kdo5",
                    "link_id": "t3_1gr5b29",
                    "permalink": "/r/reactjs/comments/1gr5b29/is_clerk_really_that_good/lx78j8g/"
                }
            ]
        },
        {
            "id": "1gr57gl",
            "title": "Is overriding component styles from a parent considered bad practise?",
            "author": "DontBeSnide",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731592273.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/",
            "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/",
            "selftext": "So I started work on a component library as a personal project a few weeks back. The one issue I'm having stems from overriding component styles from a parent.\n\nPassing `className` seems to be the standard approach to styling a component, however, say we have a complex component which contains multiple different HTML elements. How do we style each of these elements?\n\nOne reason why I might be struggling with such a question might be related to how the company I work at handles it. The product is to allow for dynamic styling, so that if a client says \"I want this area to be bigger or for the colour to change\" we can override these styles on a per app basis. What was strange though was how one of our senior devs mentioned \"It's a weird quirk that the product has\".",
            "comments": [
                {
                    "id": "lx35dum",
                    "author": "puchm",
                    "body": "Look at the way Chakra UI / ShadCN do it. Their components are composable and allow for more fine grained customizing.\n\nGenerally I'd do as much as possible through a config though - things like colors are used by different components and whenever they want the colors to change you can just use a different config for their app.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731592831.0,
                    "parent_id": "t3_1gr57gl",
                    "link_id": "t3_1gr57gl",
                    "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/lx35dum/"
                },
                {
                    "id": "lx53jnj",
                    "author": "lp_kalubec",
                    "body": "One nice thing about React is that, given certain input, you are guaranteed to receive a specific HTML output. This allows you to define nicely encapsulated components that fully control their state, behavior, and rendered output. The outside world can only affect them through a publicly exposed API (props).\n\nI like React’s philosophy, and I see no reason not to apply the same principle to CSS, even though the framework doesn't care about CSS at all.\n\nI want my components to fully control their visual presentation, including both HTML and CSS, because CSS is strictly bound to HTML - it only makes sense when it is applied to HTML.\n\nBecause of that, I consider overriding a child’s CSS a bad practice. To me, overriding a child’s CSS isn’t much different from overwriting a child’s state (we don’t do that, right?).\n\nIn the past, this problem used to be solved by methodologies such as [BEM](https://en.bem.info/methodology/) which, thanks to strict naming conventions, prevented one component's styles from being overridden by another component (called *blocks* back then).\n\nToday, with modern frameworks and tools like [CSS Modules](https://github.com/css-modules/css-modules/tree/master) (or [scoped styles, e.g., in Vue.js)](https://vuejs.org/api/sfc-css-features#scoped-css), we no longer need naming conventions. We can easily achieve CSS scoping without relying on such conventions.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731614955.0,
                    "parent_id": "t3_1gr57gl",
                    "link_id": "t3_1gr57gl",
                    "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/lx53jnj/"
                },
                {
                    "id": "lx35r5x",
                    "author": "adobeblack",
                    "body": "That’s normal. And if you have a complex component that uses multiple elements you want styled, break the elements out into separate components. You can look at shadcn as an example of this.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731592970.0,
                    "parent_id": "t3_1gr57gl",
                    "link_id": "t3_1gr57gl",
                    "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/lx35r5x/"
                },
                {
                    "id": "lx47aji",
                    "author": "fsquad",
                    "body": "It’s your app, make it look how you want. Whether it’s *maintainable* across updates is a different question.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731605137.0,
                    "parent_id": "t3_1gr57gl",
                    "link_id": "t3_1gr57gl",
                    "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/lx47aji/"
                },
                {
                    "id": "lx66o2h",
                    "author": "rainmouse",
                    "body": "It is probably cleaner if the component handles it's own presentation but perhaps passing props to enable or disable features or styles from the parent instead. So if it's a button, instead of passing large and wide classes, pass large and wide boolean props and left the button sort out how it handles those. ",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731627114.0,
                    "parent_id": "t3_1gr57gl",
                    "link_id": "t3_1gr57gl",
                    "permalink": "/r/reactjs/comments/1gr57gl/is_overriding_component_styles_from_a_parent/lx66o2h/"
                }
            ]
        },
        {
            "id": "1gr0c2d",
            "title": "Help with analyzing my custom fetch logic with loading states and simple load more pagination (React + typescript)",
            "author": "Necessary_Hope8316",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731572902.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/",
            "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/",
            "selftext": "I implemented a fetch logic, few months ago. Now looking at it, I had to clean it up a lot. I am not sure if it's structured ok and would love your take on it.. This code fetches a collection of reviews from the back-end. \n\n    import { ToastAction } from \"@/Components/ui/toast\";\n    import { useToast } from \"@/Components/ui/use-toast\";\n    import { Review } from \"@/types/review\";\n    import axios from \"axios\";\n    import { useCallback, useEffect, useState } from \"react\";\n    \n    const useReview = (\n        { contractor } : { contractor: number }\n    ): \n    {\n        reviews: Review[],\n        loading: boolean,\n        loadMore: CallableFunction,\n        hasMore: boolean,\n        reviewRefresh: () => void\n    } => {\n        const [reviews, setReviews] = useState<Review[]>([]);\n        const [offset, setOffset] = useState<number>(0);\n        const [loading, setLoading] = useState<boolean>(true);\n        const [hasMore, setHasMore] = useState<boolean>(true);\n        const { toast } = useToast();\n    \n        const take: number = 5;\n    \n        function reviewRefresh() {\n            setReviews([]);\n            setLoading(true);\n            setOffset(0);\n            setHasMore(true);\n        }\n    \n        const displayFetchError = useCallback((): void => {\n            toast({\n              variant: \"destructive\",\n              title: \"Uh oh! Something went wrong.\",\n              description: \"There was a problem with your request.\",\n              action: <ToastAction altText=\"Try again\">Try again</ToastAction>,\n            });\n        }, [toast]);\n    \n        useEffect(() => {\n            if (!loading) return;\n    \n            const source = axios.CancelToken.source();\n            axios.get<{ data: Review[]}>(route('contractor.review', {\n                contractor: contractor,\n                offset: offset,\n                take: take\n            }), {\n                cancelToken: source.token,\n            })\n                .then((response) => {\n                    if (response.data.data.length < take) {\n                        setHasMore(false);\n                    }\n    \n                    setReviews(prevReviews => [...prevReviews, ...response.data.data]);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    displayFetchError();\n                    setLoading(false)\n                });\n    \n            return () => {\n                source.cancel();\n            };\n        }, [contractor, take, offset, loading, displayFetchError]);\n    \n        const loadMore = () => {\n            setLoading(true);\n            setOffset(prevOffset => prevOffset + take);\n        }\n        \n        return {reviews, loading, loadMore, hasMore, reviewRefresh };\n    }\n    \n    export default useReview;\n\n\n\n",
            "comments": [
                {
                    "id": "lx28bou",
                    "author": "SuccessfulStrength29",
                    "body": "Idk if you're doing this for learning purposes, but personally I would use react query bcz managing everything gets very messy and complex.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731575677.0,
                    "parent_id": "t3_1gr0c2d",
                    "link_id": "t3_1gr0c2d",
                    "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/lx28bou/"
                },
                {
                    "id": "lx27z13",
                    "author": "stickersforyou",
                    "body": "Pretty good. I would say...\n\n1. You don't need to explicitly type everything. Something like const take: number = 5 is not necessary, TS already understands that. Some of your useState does not need to be typed, example useState(false) implies the state item is a Boolean. But useState([]) does need to be typed because TS does not know what the empty array type is. But the response type of your hook does not need to be typed. Play around with how much typing you can remove, my rule is less is more!\n\n2. Should loadMore always change the offset? If I'm reading this right it should only do so if the axios request was successful (and maybe hasMore is true). If an error occurs the offset always changes and another attempt would skip a whole batch of reviews. Also what happens if you pass the endpoint an out of bounds offset? You might need to handle not trying to fetch more if hasMore is false.\n\n3. Modern style prefers try/catch and async/await over then/catch, be good to familiarize yourself with it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731575440.0,
                    "parent_id": "t3_1gr0c2d",
                    "link_id": "t3_1gr0c2d",
                    "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/lx27z13/"
                },
                {
                    "id": "lx856qo",
                    "author": "lp_kalubec",
                    "body": "Bear in mind that you might end up with multiple `useEffect` callbacks running in parallel, which are not guaranteed to complete in the same order they were triggered due to the asynchronous work happening inside these callbacks.\n\nThis means that callbacks triggered earlier could update the state after callbacks triggered later - that’s what is known as a [race condition.](https://www.wikiwand.com/en/articles/Race_condition)\n\nTo prevent this from happening, you need a `useEffect` [cleanup function](https://react.dev/reference/react/useEffect#connecting-to-an-external-system) that will \"cancel\" the `setState` for pending callbacks every time a new `useEffect` callback is triggered.\n\n[https://maxrozen.com/race-conditions-fetching-data-react-with-useeffect](https://maxrozen.com/race-conditions-fetching-data-react-with-useeffect)\n\nThat said, tbh, I’d just use [SWR](https://swr.vercel.app/docs/getting-started) and call it a day.\n\n\\---\n\nI would also consider the following refactors:\n\n* I think your hook is trying to do too much - it mixes responsibilities. I would suggest limiting it to data fetching and returning the state (e.g., `reviews`, loading state, etc.), while removing the toast functionality from it.\n* I'm not a big fan of `reviewRefresh`. It mixes the declarative approach (where the function/component reacts to its input parameters and performs tasks based solely on the data) with an imperative approach (where you're explicitly telling the function what to do from the outside). If the component using the hook knows when to call `reviewRefresh`, it also knows when to render an empty list. As a result, rendering an empty list conditionally could become the responsibility of the component that calls `useReview`. I assume you might be using `reviewRefresh` to reset the state when the contractor changes. If that's the case, this behavior could instead be handled within the hook itself - it could observe the `contractor` value and reset the state automatically.\n* I think that `useEffect` should not include `loading` as a dependency, nor should you be setting the `loading` state from within the `loadMore` function. The `useEffect` hook should only observe the arguments that are required to query the data. Managing the `loading` state should be the responsibility of the `useEffect` callback, as the `loading` state depends solely on whether data is being fetched or not. So, the code responsible for performing data fetching should also control the `loading` state. You shouldn't be telling it that it is in the loading state - it should be the other way around. The fetching code should tell you whether it's fetching or not.\n* Do you really need `axios`? Native `fetch` with `AbortController` will be equally good.\n* The `response.data.data.length < take` condition doesn't reliably guarantee that there is more data. In an edge case, this condition might evaluate to `true`, but the next fetch could still return zero items. You can solve it by fetching `take + 1` items to deduce if more data exists but return only the first take items to maintain the expected batch size (but thb, I would rather do it on the backend).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731653734.0,
                    "parent_id": "t3_1gr0c2d",
                    "link_id": "t3_1gr0c2d",
                    "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/lx856qo/"
                },
                {
                    "id": "lx2dxrt",
                    "author": "Necessary_Hope8316",
                    "body": "Initially I skipped over the extra stuff and thought I will just manually handle it but as the project got complex, the logic to handle it also got complex...This is my first large scale project and I am simultaneously learning react + typescript while developing.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731579468.0,
                    "parent_id": "t1_lx28bou",
                    "link_id": "t3_1gr0c2d",
                    "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/lx2dxrt/"
                },
                {
                    "id": "lx2ehow",
                    "author": "Necessary_Hope8316",
                    "body": "Ok thank you for lot of useful info, I will try to improve more!\n\nAlso for the 2nd point: loadMore is a function that will be eventually passed to a load more button component. Here clicking the button triggers the useEffect. The offset issue is not a problem because my laravel backend will return only an empty array if it does not find any more data from my database.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731579828.0,
                    "parent_id": "t1_lx27z13",
                    "link_id": "t3_1gr0c2d",
                    "permalink": "/r/reactjs/comments/1gr0c2d/help_with_analyzing_my_custom_fetch_logic_with/lx2ehow/"
                }
            ]
        },
        {
            "id": "1gqxs0z",
            "title": "Coding Tutorial: Build a Secure Chat App with React, Firebase, and Permit.io",
            "author": "Permit_io",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731562030.0,
            "url": "https://www.permit.io/blog/coding-tutorial-build-a-secure-chat-app-with-react-firebase-and-permitio",
            "permalink": "/r/reactjs/comments/1gqxs0z/coding_tutorial_build_a_secure_chat_app_with/",
            "selftext": "",
            "comments": []
        },
        {
            "id": "1gqxcou",
            "title": "Excel like sheets in react.",
            "author": "PAM-o0",
            "score": 25,
            "upvotes": 25,
            "downvotes": 0,
            "num_comments": 29,
            "created_utc": 1731560502.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/",
            "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/",
            "selftext": "Hi, everyone I'm looking for a spreadsheet library in react and the most of the features I want resemble to excel or maybe google sheets. The only thing I'm Ok with not being available is formulas I don't need them.  \nthen most major things i need list to:\n\n1. Collapsable rows\n2. dropdown type column\n\nfor now this is the major thing I need and even if these are not available yet but if the library provides flexibility to make it work around that also good so I welcome any suggestions.",
            "comments": [
                {
                    "id": "lx1kptm",
                    "author": "ORCANZ",
                    "body": "ag-grid seems like a good fit",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731561420.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1kptm/"
                },
                {
                    "id": "lx1swix",
                    "author": "Chthulu_",
                    "body": "‘data grid’ is the keyword you’re looking for in general. There are plenty. \n\nTanstack Table is OSS, and very well liked by the community. I’ve never used it but the fact it’s open source makes it attractive. Probably your best bet. \n\nag-grid is the standard, and does have a free (community) version. It’s likely enough for your needs, at least in the beginning. I’ve been using the paid version heavily for years, and am more or less happy with it. It’s not fun to use, it’s not first-class React, but it’s extremely powerful. \n\nOtherwise, there are half a dozen other data-grid libraries which you might like better, depending on your needs.",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731565764.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1swix/"
                },
                {
                    "id": "lx2byks",
                    "author": "yksvaan",
                    "body": "The big question here is amount of cells and complexity of features and updates between the cells. At some point you're just better of writing it in vanillajs.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731578157.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2byks/"
                },
                {
                    "id": "lx2gi0p",
                    "author": "Apprehensive_Ad_3957",
                    "body": "[https://handsontable.com/](https://handsontable.com/)",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731581118.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2gi0p/"
                },
                {
                    "id": "lx2p21r",
                    "author": "Traditional_Local792",
                    "body": "Good library curated list here:   \n[https://jspreadsheets.com/](https://jspreadsheets.com/) \n\nYou can evaluate them by yourself to pick the one fit with your needs!",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731585925.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2p21r/"
                },
                {
                    "id": "lx1rdpk",
                    "author": "shadohunter3321",
                    "body": "We're thinking of doing this for one of our features as well. Syncfusion's spreadsheet looks good. Let us know if you find any free alternative.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731564891.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1rdpk/"
                },
                {
                    "id": "lx21qc3",
                    "author": "leesw",
                    "body": "material-react-table has been my lifesaver so far. great middle ground between MUI DataGrid which can be expensive and TanStack which is headless.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731571200.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx21qc3/"
                },
                {
                    "id": "lx2rrt4",
                    "author": "drink_with_me_to_day",
                    "body": "Glide Data Grid if you are ok with canvas based tables: https://grid.glideapps.com/",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731587240.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2rrt4/"
                },
                {
                    "id": "lx2vsnp",
                    "author": "nolanised",
                    "body": "There is also this https://github.com/adazzle/react-data-grid",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731589028.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2vsnp/"
                },
                {
                    "id": "lx1q8i7",
                    "author": "ArunITTech",
                    "body": "You can try the Syncfusion [React Spreadsheet](https://www.syncfusion.com/react-components/react-spreadsheet?utm_medium=reddit&utm_source=backlinks&utm_campaign=react-spreadsheet-reddit-backlinks).\n\n* It is a feature-rich component for organizing and analyzing data in tabular format like in Microsoft Excel for web application.\n* It provides all the common Excel features, including data binding, selection, freeze panes, editing, formatting, protection, resizing, sorting, importing, and exporting Excel documents.\n\nSyncfusion offers a [free community license](https://www.syncfusion.com/products/communitylicense/?utm_medium=reddit&utm_source=backlinks&utm_campaign=react-spreadsheet-reddit-backlinks) to individual developers and small businesses.\n\nNote: I work for Syncfusion.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731564258.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1q8i7/"
                },
                {
                    "id": "lx2rrve",
                    "author": "AffectionateBowl9798",
                    "body": "Check out [Primereact](https://primereact.org/datatable/) data table. I think it had what you are looking for and a lot of other complex functionality.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731587240.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2rrve/"
                },
                {
                    "id": "lx2sjrf",
                    "author": "PAM-o0",
                    "body": "Thanks everyone for the suggestions, But one thing I needed to ask why like no one suggested using handsontable, asking this because I've decided to go ahead with it, is it like it's not popular enough or is it just no one has used it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731587600.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2sjrf/"
                },
                {
                    "id": "lx38upg",
                    "author": "sopax74952",
                    "body": "Take a look on Revo Grid: https://rv-grid.com/",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731594102.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx38upg/"
                },
                {
                    "id": "lx4llog",
                    "author": "PositiveUse",
                    "body": "The question is: what are you trying to do? Maybe it’s easier to just use Excel  ;)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731609461.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx4llog/"
                },
                {
                    "id": "lx8l6x0",
                    "author": "kistune999",
                    "body": "Don't use MUI grid a lot of stuff behind premium, I ended up using PrimeREACT.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731663053.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx8l6x0/"
                },
                {
                    "id": "lx8v3r7",
                    "author": "akoskm",
                    "body": "I think Blueprint.js table is close [https://blueprintjs.com/docs/#table](https://blueprintjs.com/docs/#table).\n\nI've used it on a couple of projects.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731669009.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx8v3r7/"
                },
                {
                    "id": "lxbxi1a",
                    "author": "Glad_Ad_1079",
                    "body": "[https://ui.shadcn.com/docs/components/data-table](https://ui.shadcn.com/docs/components/data-table)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731705577.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lxbxi1a/"
                },
                {
                    "id": "lxeeckh",
                    "author": "Icy-Lime928",
                    "body": "If you are looking for excel like features then checkout universheet. My team used it in an app and now it's in production and it's working fine. https://univer.ai/",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731741122.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lxeeckh/"
                },
                {
                    "id": "lx24u4l",
                    "author": "ebykka",
                    "body": "Take a look at this one https://smartclient.com/product/react_components.jsp\n\nIt has LGPL license so should be fine for commercial usage",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731573288.0,
                    "parent_id": "t3_1gqxcou",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx24u4l/"
                },
                {
                    "id": "lx1p1y9",
                    "author": "PAM-o0",
                    "body": "ag grid works on commercial model. I can't buy the subscritption",
                    "score": -8,
                    "upvotes": -8,
                    "downvotes": 0,
                    "created_utc": 1731563611.0,
                    "parent_id": "t1_lx1kptm",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1p1y9/"
                },
                {
                    "id": "lx3d6rs",
                    "author": "DegreeZ19",
                    "body": "yep tanstack table is the one i used sometime back. Has many configuration options based on your needs and is very well documented plus the open source community can help you with any problems",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731595631.0,
                    "parent_id": "t1_lx1swix",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx3d6rs/"
                },
                {
                    "id": "lx30jjf",
                    "author": "maria_la_guerta",
                    "body": "Came here to say this as well. With the way React works it's likely only going to scale you so far in an app like this.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731590969.0,
                    "parent_id": "t1_lx2byks",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx30jjf/"
                },
                {
                    "id": "lx8tbj1",
                    "author": "Hordeur",
                    "body": "I've worked with this one before, it's pretty neat!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731668015.0,
                    "parent_id": "t1_lx2vsnp",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx8tbj1/"
                },
                {
                    "id": "lx2fo75",
                    "author": "LolzPatrol",
                    "body": "The company I work for had had a horrible experience attempting to stop paying for a Syncfusion licensed which was supposed to be valid for a lifetime as long as we don't upgrade our components which we didn't. \n\nWe have literally been harassed by Syncfusion sales staff for more than a year, wouldn't recommend using them.",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731580597.0,
                    "parent_id": "t1_lx1q8i7",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2fo75/"
                },
                {
                    "id": "lx3hvlg",
                    "author": "vash513",
                    "body": "Someone literally posted it above",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731597201.0,
                    "parent_id": "t1_lx2sjrf",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx3hvlg/"
                },
                {
                    "id": "lx1sqna",
                    "author": "Fitzi92",
                    "body": "You might try the free version of MUI grid or go headless with TanStack Table.\n\n\nYou are basically looking for a \"DataGrid\", you should find quiet a few options with this keyword.",
                    "score": 15,
                    "upvotes": 15,
                    "downvotes": 0,
                    "created_utc": 1731565669.0,
                    "parent_id": "t1_lx1p1y9",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx1sqna/"
                },
                {
                    "id": "lx2i9xu",
                    "author": "coyoteazul2",
                    "body": "The community version is free",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731582207.0,
                    "parent_id": "t1_lx1p1y9",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2i9xu/"
                },
                {
                    "id": "lx2z05a",
                    "author": "SmashTheGoat",
                    "body": "This, it’s fairly easy to implement MUI grid with sorting, filtering, and pagination. But getting Excel-like editing features would probably take a considerable effort to implement.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731590354.0,
                    "parent_id": "t1_lx1sqna",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx2z05a/"
                },
                {
                    "id": "lx3xinl",
                    "author": "Fitzi92",
                    "body": "MUI Data Grid does support inline editing in the free version. Depending on what OP requires exactly, it could require considerable effort though.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731602140.0,
                    "parent_id": "t1_lx2z05a",
                    "link_id": "t3_1gqxcou",
                    "permalink": "/r/reactjs/comments/1gqxcou/excel_like_sheets_in_react/lx3xinl/"
                }
            ]
        },
        {
            "id": "1gqpx1r",
            "title": "React StrictMode Render Cycle Question",
            "author": "almost-interested",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731538023.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/",
            "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/",
            "selftext": "    import React, { useEffect, useState } from \"react\";\n    \n    //useQuestion.js\n    let id = 0;\n    const incId = () => {\n      return ++id;\n    };\n    \n    export default function useQuestion() {\n      const [id, setId] = useState(incId());\n      console.log(\"render\", id);\n      useEffect(() => {\n        console.log(\"mount\", id);\n        return () => {\n          console.log(\"clean up\", id);\n        };\n      }, []);\n    }\n    \n    //App.jsx\n    export function App() {\n      useQuestion();\n      return (\n        <div>\n          Parent Wrapper<Child></Child>\n        </div>\n      );\n    }\n    \n    //Child.jsx\n    export function Child() {\n      useQuestion();\n      return <div>Child</div>;\n    }\n    \n    //index.js\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>;\n    \n    \n    \n\n\n\nI am trying to figure out what is happening during React's StrictMode, specifically React 18. Given this code and based on the React Documentation [<StrictMode> – React](https://react.dev/reference/react/StrictMode#fixing-bugs-found-by-re-running-effects-in-development) I would think that what I should see logged out is:  \n\n* render 1 (App)\n* render 2 (Child)\n* mount 1 (App useEffect)\n* mount 2 (Child useEffect)\n* clean up 1 (App cleanUp)\n* clean up 2 (Child cleanUp)\n* render 3 (StrictMode rerun App)\n* render 4 (StrictMode rerun Child)\n* mount 3 (StrictMode rerun App useEffect)\n* mount 4 (StrictMode rerun child useEffect)\n\nAnd then no more cleanUps since the app is rendered.\n\nI've tried this with ReactDev tools off and on. What I actually see logged out in StrictMode is:\n\n* render 1\n* render 2\n* render 3\n* render 4\n* mount 4\n* mount 2\n* clean up 4\n* clean up 2\n* mount 4 \n* mount 2\n\nThis does not seem like the documented behavior at all or am I misunderstanding it. Do the Docs not say it re-renders, and re-runs effects? or did it mean it somehow re-renders twice without calling the useEffect() and then it just runs useEffect() twice after it's already mounted and unmounted the component? Even if that's the case where does render 3 go?\n\nAlso, if you run it outside of StrictMode it behaves exactly as intended \n\n* render 1\n* render 2\n* mount 2\n* mount 1\n\nNo unmounting since it's a first time render and it only renders once. Can anyone explain more clearly what the StrictMode render cycle looks like? I've already been down the rabbit hole with chatGPT and Claude and the hallucinations made me doubt everything.\n\n",
            "comments": [
                {
                    "id": "lwzw0bd",
                    "author": "acemarke",
                    "body": "If you look at the implementation of `renderWithHooks`, it looks roughly like:\n\n    function renderWithHooks(fiber) {\n      const Component = fiber.type;\n      \n      let children = Component(fiber.props);\n      \n      if (isDevAndStrictMode) {\n        children = Component(fiber.props) \n      }\n      \n      return children;\n    }\n\nThere's also nuances around whether the value of a hook gets kept around from the first render to the second render. \n\nEffects run after rendering is complete.  Also, note that React renders top-down, but always runs effects bottom-up.  So, the `<Child>` effect will run before the `<App>` effect.\n\nI'm hazy on whether React double-executes each effect immediately, or runs through the entire sequence of effects twice.  Based on that output it seems like it's running through the whole sequence.\n\nFWIW you may be interested in my post [A (Mostly) Complete Guide to React Rendering Behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/) as well.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731538589.0,
                    "parent_id": "t3_1gqpx1r",
                    "link_id": "t3_1gqpx1r",
                    "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/lwzw0bd/"
                },
                {
                    "id": "lx1775k",
                    "author": "landisdesign",
                    "body": "All rendering happens first, from the top down. Then the dom is evaluated. Then effects are run, from the bottom up.\n\nIn strict mode, effects are run, cleaned up, then run again.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731555474.0,
                    "parent_id": "t3_1gqpx1r",
                    "link_id": "t3_1gqpx1r",
                    "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/lx1775k/"
                },
                {
                    "id": "lx3kx73",
                    "author": "almost-interested",
                    "body": "Thank you that article you wrote is super helpful! As a follow up question concerning Reacts definition of \"lazy initialization\", does the id in the useState of the hook follow React's rules on \"purity\"? The id changes on every call of the hook but it's referencing some outside cache/value and it \"newly created\". Was before fine or if I wanted it to be within the rules of React should it be something like:\n\n    let id = 0;\n    const incId = ()=>{\n    return id++\n    };\n    \n    export default function useQuestion() {\n      const [id, setId] = useState(null)\n      if(!id) setId(incId());\n      console.log(\"render\", id);\n      useEffect(()=> {\n        console.log(\"mount\", id);\n        return () => {\n         console.log(\"clean up\", id); \n        };\n      }, []);\n    }",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731598185.0,
                    "parent_id": "t1_lwzw0bd",
                    "link_id": "t3_1gqpx1r",
                    "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/lx3kx73/"
                },
                {
                    "id": "lxa7s6r",
                    "author": "almost-interested",
                    "body": "Just thinking out loud, and putting this here for anyone who is a noob like me and didn't understand this React Documentation\n\n\"Note\n\nStrict Mode enables the following checks in development:\n\nYour components will re-render an extra time to find bugs caused by impure rendering.\n\nYour components will re-run Effects an extra time to find bugs caused by missing Effect cleanup.\n\nYour components will be checked for usage of deprecated APIs.\n\nAll of these checks are development-only and do not impact the production build.\"\n\nI had some confusion around the language of Mounting and Rendering (and I could still be wrong). The rendering takes place on mount and cleanup takes place when it unmounts. An update is effectively just a mount unmount.  My impression is in a normal single render cycle the component would onMount { Render => useEffect setups } then onUnmount { useEffect cleanups }\n\nu/acemarke 's article has an awesome diagram of this Timeline of a React Component With Hooks | [JulesBlom.com](http://JulesBlom.com),\n\nSo when the documentation said it would re-run I thought it meant twice through a simulated full render cycle 2x (onMount { Render => useEffect setups } then onUnmount { useEffect cleanups })  What it actually says, and what I think it is doing, is onMount { 2x Render => useEffect setups => useEffect cleanups => useEffect setups }\n\nAnd as the others said, the renders are top down but the useEffects are bottom up.\n\nI changed a few things to make the logs clearer.\n\n    //useQuestion.js\n    let id = 0;\n    const incId = () => {\n      return ++id;\n    };\n    \n    export default function useQuestion(component) {\n      const [id, setId] = useState(`${component} ${incId()}`);\n      console.log(\"mount & render\", id);\n      useEffect(() => {\n        console.log(\"setup\", id);\n        return () => {\n          console.log(\"clean up\", id);\n        };\n      }, []);\n    }\n    \n    //App.jsx\n    export function App() {\n      useQuestion(\"Parent\");\n      return (\n        <div>\n          Parent Wrapper<Child></Child>\n        </div>\n      );\n    }\n    \n    //Child.jsx\n    export function Child() {\n      useQuestion(\"Child\");\n      return <div>Child</div>;\n    }\n    \n    //index.js\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>;\n\n* mount & render Parent 1\n* mount & render Parent 2 \n* mount & render Child 3 \n* mount & render Child 4 \n* setup Child 4 \n* setup Parent 2 \n* clean up Child 4\n* clean up Parent 2\n* setup Child 4\n* setup Parent 2  \n\nBecause my initial impression was that the whole cycle had run twice, I thought that Parent 1 and Child 3 were actually components being mounted and unmounted and should have setups and clean ups of their own. What I was actually seeing was the id being set on the first render to 1 and then immediately another render called incId() and set the id to 2. The same was true of Child 3 having its id set to 4.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731687042.0,
                    "parent_id": "t1_lwzw0bd",
                    "link_id": "t3_1gqpx1r",
                    "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/lxa7s6r/"
                },
                {
                    "id": "lx44p99",
                    "author": "acemarke",
                    "body": "You're passing an initial value to the `useState` hook. When React re-renders the component in dev, I _think_ it throws away the prior hook values, so it's saving the hook initial values from the second call.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731604343.0,
                    "parent_id": "t1_lx3kx73",
                    "link_id": "t3_1gqpx1r",
                    "permalink": "/r/reactjs/comments/1gqpx1r/react_strictmode_render_cycle_question/lx44p99/"
                }
            ]
        },
        {
            "id": "1gqhp9e",
            "title": "Help building an Accordion using react-aria",
            "author": "KylianHaaland",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731517396.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gqhp9e/help_building_an_accordion_using_reactaria/",
            "permalink": "/r/reactjs/comments/1gqhp9e/help_building_an_accordion_using_reactaria/",
            "selftext": "Has anyone here used react-aria to build an Accordion component?\n\nI'm struggling to understand how to approach this since the tools that can help build an Accordion (Disclosure, DisclosureGroups and useAccordion) are in alpha mode (under construction)\n\nI'm struggling with understanding what library to use, react-aria? @react-aria/accordion... There's also react-aria-components but as far as I know this are the pre made components, if so, I don't want this, I want a very customizable Accordion, which can only be achieved with react-aria as far as I know.\n\nI'll appreciate your help.",
            "comments": [
                {
                    "id": "lx0ixpk",
                    "author": "gnawlej",
                    "body": "I've written component libraries with both, and I generally use react aria components unless I need to use the underlying hooks. Components are just a much nicer interface to work with, and while the components are \"pre-made\", the base class names are defaults, so overwritten when you apply your own.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731546621.0,
                    "parent_id": "t3_1gqhp9e",
                    "link_id": "t3_1gqhp9e",
                    "permalink": "/r/reactjs/comments/1gqhp9e/help_building_an_accordion_using_reactaria/lx0ixpk/"
                }
            ]
        },
        {
            "id": "1gqh5af",
            "title": "What's your favorite approach to state management in React, and why?",
            "author": "jeferson0993",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 47,
            "created_utc": 1731516015.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/",
            "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/",
            "selftext": "# What's your go-to approach to managing state in React applications, and have you explored other libraries or frameworks, such as Recoil, Jotai, or Overmind?\n\n&#x200B;\n\n[View Poll](https://www.reddit.com/poll/1gqh5af)",
            "comments": [
                {
                    "id": "lwy04x2",
                    "author": "MrWewert",
                    "body": "Zustand",
                    "score": 22,
                    "upvotes": 22,
                    "downvotes": 0,
                    "created_utc": 1731517810.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwy04x2/"
                },
                {
                    "id": "lwz1xx6",
                    "author": "azangru",
                    "body": "Obligatory reminder that context api is not a state management solution, but a dependency injection mechanism. You would still need something to hold state in, be it react's own hooks, or a store like redux that is passed down the component tree in a context. Besides, \"context api\" (answer 3) cannot be used independently from \"hooks\" (answer 2).",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731529254.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwz1xx6/"
                },
                {
                    "id": "lwxx4bq",
                    "author": "Capaj",
                    "body": "at least add zustand to the list. Most people today agree zustand is the best.",
                    "score": 16,
                    "upvotes": 16,
                    "downvotes": 0,
                    "created_utc": 1731516893.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwxx4bq/"
                },
                {
                    "id": "lwzcn8m",
                    "author": "ordnannce",
                    "body": "What a strange list.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731532511.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzcn8m/"
                },
                {
                    "id": "lwyif7a",
                    "author": "Mafty_Navue_Erin",
                    "body": "I think Mobx is pretty simpler to handle (several juniors are able to use it with minimum training) compared to Redux that I do not know why it takes so much time for people to understand.\n\nThe only issue with Mobx is when people start making actions outside the store (runInAction should trigger a linter error) and make a Big(BIG) Store with 6000 lines instead of a store for each domain.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731523333.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwyif7a/"
                },
                {
                    "id": "lwzm8fo",
                    "author": "EmployeeFinal",
                    "body": "React\n\n\nhttps://kentcdodds.com/blog/application-state-management-with-react",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731535426.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzm8fo/"
                },
                {
                    "id": "lwztkty",
                    "author": "OneMeasurement655",
                    "body": "xstate",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731537786.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwztkty/"
                },
                {
                    "id": "lwy5ufu",
                    "author": "lynxkk7",
                    "body": "Context API, normally my use is very simple.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731519541.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwy5ufu/"
                },
                {
                    "id": "lwyh2bb",
                    "author": "frogic",
                    "body": "I haven't had a greenfield project that needed it yet(outside of using react-query for server state)so I've always used whatever the project already has.  I'm super comfortable with redux but I'd probably try zustand out if it comes up.  It really shouldn't matter that much as long as it allows you to write a selector that lets you control what changes to state will cause a rerender and has good typescript support.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731522925.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwyh2bb/"
                },
                {
                    "id": "lwys4wh",
                    "author": "VMWGuy",
                    "body": "nanostores",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731526262.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwys4wh/"
                },
                {
                    "id": "lwz1vro",
                    "author": "emughnetsyan",
                    "body": "Effector",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731529234.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwz1vro/"
                },
                {
                    "id": "lwzhdvr",
                    "author": "IllResponsibility671",
                    "body": "Another day that ends with 'day', must be time for another state management post.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731533934.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzhdvr/"
                },
                {
                    "id": "lwzi9wv",
                    "author": "TheOnceAndFutureDoug",
                    "body": "I like how Context and Hooks are separate like they're not going to be part of a singular cohesive strategy. They serve difference purposes and you're likely using both if you're using either.\n\nAlso Zustand.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731534204.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzi9wv/"
                },
                {
                    "id": "lwzkoa2",
                    "author": "grudev",
                    "body": "Zustand for complex apps, Jotai for simpler projects. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731534941.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzkoa2/"
                },
                {
                    "id": "lwzmy8d",
                    "author": "iam_brucewayne",
                    "body": "Zustand",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731535653.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzmy8d/"
                },
                {
                    "id": "lwzp0rc",
                    "author": "campsafari",
                    "body": "overmindjs",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731536314.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzp0rc/"
                },
                {
                    "id": "lwzvr3e",
                    "author": "JahmanSoldat",
                    "body": "Zustand not being mentioned is a crime, or a bad joke, anyhow, dislike.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731538504.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lwzvr3e/"
                },
                {
                    "id": "lxcipp3",
                    "author": "straightouttaireland",
                    "body": "React Query for async data. Zustand for everything else.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731712494.0,
                    "parent_id": "t3_1gqh5af",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lxcipp3/"
                },
                {
                    "id": "lx5tlxd",
                    "author": "jeferson0993",
                    "body": "Great choice! What drew you to Zustand over other state management options?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731622956.0,
                    "parent_id": "t1_lwy04x2",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5tlxd/"
                },
                {
                    "id": "lx0zbt4",
                    "author": "PanicAdvanced5691",
                    "body": "overrated. redux is better",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731552513.0,
                    "parent_id": "t1_lwy04x2",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx0zbt4/"
                },
                {
                    "id": "lx0055q",
                    "author": "v_throwaway_02",
                    "body": "1000x this, literally the creator of context stated it's not supposed to store frequently muted state, and you'll have to create hundreds of contexts to properly inject data, as they trigger a rerender no matter what value changes inside it. To use them properly you'd have to use a library that implements selectors for contexts, but then again you're running a crooked redux, and more spaghetti for no reason",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731540004.0,
                    "parent_id": "t1_lwz1xx6",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx0055q/"
                },
                {
                    "id": "lx5tpgf",
                    "author": "jeferson0993",
                    "body": "Well said! How do you handle complex state management scenarios?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731622987.0,
                    "parent_id": "t1_lwz1xx6",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5tpgf/"
                },
                {
                    "id": "lx5ttru",
                    "author": "jeferson0993",
                    "body": "Popular demand! What makes Zustand stand out to you?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731623023.0,
                    "parent_id": "t1_lwxx4bq",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5ttru/"
                },
                {
                    "id": "lx5tvb9",
                    "author": "jeferson0993",
                    "body": "Care to elaborate? What would you add or change?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623037.0,
                    "parent_id": "t1_lwzcn8m",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5tvb9/"
                },
                {
                    "id": "lx5twtc",
                    "author": "jeferson0993",
                    "body": "Good point! How do you structure your Mobx stores for scalability?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623051.0,
                    "parent_id": "t1_lwyif7a",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5twtc/"
                },
                {
                    "id": "lx5tyiy",
                    "author": "jeferson0993",
                    "body": "Excellent resource! What insights have you applied from Kent's approach?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623065.0,
                    "parent_id": "t1_lwzm8fo",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5tyiy/"
                },
                {
                    "id": "lx5u0hy",
                    "author": "jeferson0993",
                    "body": "Great choice! How has Xstate improved your state management workflow?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623081.0,
                    "parent_id": "t1_lwztkty",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5u0hy/"
                },
                {
                    "id": "lx5u2cb",
                    "author": "jeferson0993",
                    "body": "Simplicity wins! Have you encountered complex scenarios where Context API fell short?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623098.0,
                    "parent_id": "t1_lwy5ufu",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5u2cb/"
                },
                {
                    "id": "lx5u4a1",
                    "author": "jeferson0993",
                    "body": "Looking forward to trying Zustand! What features would make you choose it over Redux?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623114.0,
                    "parent_id": "t1_lwyh2bb",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5u4a1/"
                },
                {
                    "id": "lx5u5td",
                    "author": "jeferson0993",
                    "body": "Interesting choice! How do Nanostores simplify state management for you?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623128.0,
                    "parent_id": "t1_lwys4wh",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5u5td/"
                },
                {
                    "id": "lx5u7xr",
                    "author": "jeferson0993",
                    "body": "Unique approach! What benefits has Effector brought to your projects?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623146.0,
                    "parent_id": "t1_lwz1vro",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5u7xr/"
                },
                {
                    "id": "lx5uand",
                    "author": "jeferson0993",
                    "body": "Humor appreciated! What's your go-to state management solution?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623168.0,
                    "parent_id": "t1_lwzhdvr",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5uand/"
                },
                {
                    "id": "lx5ucip",
                    "author": "jeferson0993",
                    "body": "Spot on! How do you combine Context and Hooks effectively?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623185.0,
                    "parent_id": "t1_lwzi9wv",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5ucip/"
                },
                {
                    "id": "lx5ue4u",
                    "author": "jeferson0993",
                    "body": "Pragmatic approach! What factors determine your choice between Zustand and Jotai?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623199.0,
                    "parent_id": "t1_lwzkoa2",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5ue4u/"
                },
                {
                    "id": "lx5ufdn",
                    "author": "jeferson0993",
                    "body": "Another Zustand fan! What features make it your top choice?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623209.0,
                    "parent_id": "t1_lwzmy8d",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5ufdn/"
                },
                {
                    "id": "lx5uguv",
                    "author": "jeferson0993",
                    "body": "Great alternative! How has Overmindjs improved your state management experience?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623222.0,
                    "parent_id": "t1_lwzp0rc",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5uguv/"
                },
                {
                    "id": "lx5uj16",
                    "author": "jeferson0993",
                    "body": "Popular opinion! What makes Zustand deserving of top consideration?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731623240.0,
                    "parent_id": "t1_lwzvr3e",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5uj16/"
                },
                {
                    "id": "lx5tnuv",
                    "author": "jeferson0993",
                    "body": "Interesting perspective! What specific advantages does Redux offer in your experience?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731622973.0,
                    "parent_id": "t1_lx0zbt4",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5tnuv/"
                },
                {
                    "id": "lx03pql",
                    "author": "azangru",
                    "body": "I cannot understand how come react core team still hasn't added context selectors as was discussed in this RFC: [https://github.com/reactjs/rfcs/pull/119](https://github.com/reactjs/rfcs/pull/119)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731541250.0,
                    "parent_id": "t1_lx0055q",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx03pql/"
                },
                {
                    "id": "lx5trhd",
                    "author": "jeferson0993",
                    "body": "Completely agree! Have you explored libraries that implement selectors for Context API?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731623003.0,
                    "parent_id": "t1_lx0055q",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx5trhd/"
                },
                {
                    "id": "lx67i12",
                    "author": "ordnannce",
                    "body": "No.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731627390.0,
                    "parent_id": "t1_lx5tvb9",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx67i12/"
                },
                {
                    "id": "lx66004",
                    "author": "OneMeasurement655",
                    "body": "It forces you to think about how you update your state and control when updates can occur. \n\nIt’s also really nice to represent an application, from a data perspective, without having to worry about react for the most part. This allows for full testing of your logic, without a visual representation",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731626896.0,
                    "parent_id": "t1_lx5u0hy",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx66004/"
                },
                {
                    "id": "lx6342t",
                    "author": "frogic",
                    "body": "I don't think it would be feature related just how pleasant I find the API and how frustrating the foot guns are. For instance with redux finding out connect/mapstatetoprops and useSelector have different comparison functions was an unpleasant few hours and having to find out I couldn't normally log inside of a reducer when debugging(that might have been immer related can't remember) was annoying but redux is unlikely to hurt me like that again. ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731625956.0,
                    "parent_id": "t1_lx5u4a1",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx6342t/"
                },
                {
                    "id": "lx60gp0",
                    "author": "IllResponsibility671",
                    "body": "useState and ContextApI",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731625104.0,
                    "parent_id": "t1_lx5uand",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx60gp0/"
                },
                {
                    "id": "lxb5o5d",
                    "author": "TheOnceAndFutureDoug",
                    "body": "Simple: Do multiple things down multiple branches need this, or are they otherwise kinda deep and prop drilling is annoying? Context. Otherwise State.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731697084.0,
                    "parent_id": "t1_lx5ucip",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lxb5o5d/"
                },
                {
                    "id": "lx256wg",
                    "author": "v_throwaway_02",
                    "body": "yeah no idea on why they also push useReducer and other subpar solutions when there's redux (the main point against redux has always been verbosity, which is not a point anymore w/ redux toolkit) or a similar state management - the result is a bunch of small react apps that cannot scale without heavy refactor. When I jump on a new project and I see contexts I know I need to illuminate some people on their issues, as most people just follow blindly the docs\n\nsame goes for SSR, there's a cost on having an extra server vs having a bunch of static files, especially if the application is not public. Now it seems a subsidiary of Vercel",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731573532.0,
                    "parent_id": "t1_lx03pql",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx256wg/"
                },
                {
                    "id": "lx6ckmn",
                    "author": "v_throwaway_02",
                    "body": "used this for a bit [https://www.npmjs.com/package/@fluentui/react-context-selector](https://www.npmjs.com/package/@fluentui/react-context-selector) (as they were using context before I arrived in the last series of projects) and then moved them all towards redux toolkit",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731629072.0,
                    "parent_id": "t1_lx5trhd",
                    "link_id": "t3_1gqh5af",
                    "permalink": "/r/reactjs/comments/1gqh5af/whats_your_favorite_approach_to_state_management/lx6ckmn/"
                }
            ]
        },
        {
            "id": "1gqdbqg",
            "title": "Creating your own React design system analytics tool",
            "author": "awofinc",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731505868.0,
            "url": "https://alexocallaghan.com/creating-your-own-react-design-system-analytics-tool",
            "permalink": "/r/reactjs/comments/1gqdbqg/creating_your_own_react_design_system_analytics/",
            "selftext": "",
            "comments": []
        },
        {
            "id": "1gqaym4",
            "title": "How to disable back button on WebBrowser?",
            "author": "devX_Nikhil",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 13,
            "created_utc": 1731497995.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/",
            "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/",
            "selftext": "I use this function\n\n`const disableBackButton = () => {`\n\n  `window.history.pushState(null, '', window.location.href);`\n\n  `window.onpopstate = () => {`\n\n`window.history.pushState(null, '', window.location.href);`\n\n  `};`\n\n`};`\n\nand it working fine on laptop chrome, android browser but the back button is not disabling on iPhone chrome How to disable on iphones as well?",
            "comments": [
                {
                    "id": "lwwkdv7",
                    "author": "ORCANZ",
                    "body": "Why are you doing this.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731499288.0,
                    "parent_id": "t3_1gqaym4",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwkdv7/"
                },
                {
                    "id": "lwwknsc",
                    "author": "HelloImQ",
                    "body": "Websites that behave like that are the absolute worst.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731499427.0,
                    "parent_id": "t3_1gqaym4",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwknsc/"
                },
                {
                    "id": "lwwzv7c",
                    "author": "Merc92",
                    "body": "Jesus christ. Stop abusing browsers",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731505921.0,
                    "parent_id": "t3_1gqaym4",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwzv7c/"
                },
                {
                    "id": "lwwkvzq",
                    "author": "devX_Nikhil",
                    "body": "Because it’s a requirement of client",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731499540.0,
                    "parent_id": "t1_lwwkdv7",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwkvzq/"
                },
                {
                    "id": "lwwkz6c",
                    "author": "devX_Nikhil",
                    "body": "I know but what can i do…🤷🏻‍♂️",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731499584.0,
                    "parent_id": "t1_lwwknsc",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwkz6c/"
                },
                {
                    "id": "lwwlh5f",
                    "author": "billybobjobo",
                    "body": "Part of the gig is guiding the client away from bad ideas.  And this is only ever a bad idea. It’s hard to imagine any exceptions.  \n\nAnd whatever hacking you do to make it happen, it’s the kind of thing that will be likely stop working in the future with new browser versions.  Stack overflow is a graveyard of hacks to override desired browser behavior that no longer work.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731499832.0,
                    "parent_id": "t1_lwwkvzq",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwlh5f/"
                },
                {
                    "id": "lwwl6tr",
                    "author": "ORCANZ",
                    "body": "Why does he want this ? It’s either a very fishy website aimed at infecting the client, or it’s a very stupid requirement which will make users close the website and never come back",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731499690.0,
                    "parent_id": "t1_lwwkvzq",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwl6tr/"
                },
                {
                    "id": "lx88kgo",
                    "author": "Macluawn",
                    "body": "When I hire a plumber or a contractor, I always tell them upfront to smack me in the face with a wrench if I request anything stupid.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731655593.0,
                    "parent_id": "t1_lwwkvzq",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lx88kgo/"
                },
                {
                    "id": "lwwll0o",
                    "author": "OnADrinkingMission",
                    "body": "Tell them that modern browsers implement safety features to prevent this behavior on websites. And that this type of interaction on a website does not follow standards. It could lead to unstable behaviors because there will never be a consistent API and some browsers may even disable the functionality entirely.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731499884.0,
                    "parent_id": "t1_lwwkz6c",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwll0o/"
                },
                {
                    "id": "lwwliy2",
                    "author": "devX_Nikhil",
                    "body": "Thanks for your advice but the question it not about ..why he wants... the question is this possible or not?",
                    "score": -5,
                    "upvotes": -5,
                    "downvotes": 0,
                    "created_utc": 1731499857.0,
                    "parent_id": "t1_lwwl6tr",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwliy2/"
                },
                {
                    "id": "lwwltpj",
                    "author": "devX_Nikhil",
                    "body": "Yeah sure...thanks",
                    "score": -3,
                    "upvotes": -3,
                    "downvotes": 0,
                    "created_utc": 1731500001.0,
                    "parent_id": "t1_lwwll0o",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwltpj/"
                },
                {
                    "id": "lwwmo8u",
                    "author": "ORCANZ",
                    "body": "Yeah I’m not helping a scammer or hacker sorry\n\nAnd if he’s just dumb then I’m trying to help you because you’re not paid to piss code but also to educate your clients.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731500406.0,
                    "parent_id": "t1_lwwliy2",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwmo8u/"
                },
                {
                    "id": "lwwmlq6",
                    "author": "OnADrinkingMission",
                    "body": "Don’t believe me: go read the MDN docs on  this topic. But if your overlords refuse to implement proper security protocols, that would prevent this issue from popping up, you can use:\n\nwindow.history.forward()",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731500373.0,
                    "parent_id": "t1_lwwltpj",
                    "link_id": "t3_1gqaym4",
                    "permalink": "/r/reactjs/comments/1gqaym4/how_to_disable_back_button_on_webbrowser/lwwmlq6/"
                }
            ]
        },
        {
            "id": "1gqadrv",
            "title": "Framer Motion is now independent. Introducing Motion.",
            "author": "mattgperry",
            "score": 221,
            "upvotes": 221,
            "downvotes": 0,
            "num_comments": 22,
            "created_utc": 1731495695.0,
            "url": "https://motion.dev/blog/framer-motion-is-now-independent-introducing-motion",
            "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwwmd37",
                    "author": "Gilldadab",
                    "body": "Great news. I think motion being so closely associated with Framer became confusing after both became so successful in their own right.",
                    "score": 68,
                    "upvotes": 68,
                    "downvotes": 0,
                    "created_utc": 1731500259.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwmd37/"
                },
                {
                    "id": "lwwj9x3",
                    "author": "readeral",
                    "body": "This is great news Matt. I loved playing with popmotion when I was a new react dev.",
                    "score": 21,
                    "upvotes": 21,
                    "downvotes": 0,
                    "created_utc": 1731498724.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwj9x3/"
                },
                {
                    "id": "lwwfxjr",
                    "author": "dzigizord",
                    "body": "cool",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731496900.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwfxjr/"
                },
                {
                    "id": "lwwp3a4",
                    "author": "zxyzyxz",
                    "body": "motion.dev was announced initially a few years ago as Motion One, so it looks like this isn't just a rebrand but an actual migration of features from Framer Motion into what was Motion One, now simply Motion, and I assume the Framer Motion library will be deprecated.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731501525.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwp3a4/"
                },
                {
                    "id": "lwwt77u",
                    "author": "mattsowa",
                    "body": "So... framer motion will be merged with motion one? Or? This is not explained in the article",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731503293.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwt77u/"
                },
                {
                    "id": "lwxj9qa",
                    "author": "Intelligent-Rice9907",
                    "body": "Cool, I’ve used motion with Astro and it’s kind of hard to achieve the same type of animations like framer motion. And with hard is that you need to consider the initial state of the component or element you’re trying to animate without using conditional rendering and it’s chaos as it is right now. Hope this will be targeted",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731512617.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxj9qa/"
                },
                {
                    "id": "lwxydsk",
                    "author": "imapersonithink",
                    "body": "The best news for me is that there is a search bar for the docs.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731517277.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxydsk/"
                },
                {
                    "id": "lwy7ozi",
                    "author": "_agamblin",
                    "body": "Wait does this mean that framer-motion is now using the WAAPI under the hood like Motion.one does instead of requestAnimationFrame?",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731520100.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwy7ozi/"
                },
                {
                    "id": "lwwzolq",
                    "author": "NON_EXIST_ENT_",
                    "body": "Congrats Matt!",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731505851.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwwzolq/"
                },
                {
                    "id": "lwyspyg",
                    "author": "devneill",
                    "body": "So exciting, well done!",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731526441.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwyspyg/"
                },
                {
                    "id": "lwybc8w",
                    "author": "chevalierbayard",
                    "body": "Sick sick sick sick sick!!!",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731521196.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwybc8w/"
                },
                {
                    "id": "lwynw0i",
                    "author": "dromtrund",
                    "body": "Dang, nice domain name",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731524973.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwynw0i/"
                },
                {
                    "id": "lwzk4eo",
                    "author": "Phiilu_",
                    "body": "Congrats! Love (Framer) Motion with React, but I am really excited for the vanilla version. This will be huge for people that are using frameworks like Phoenix LiveView.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731534772.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwzk4eo/"
                },
                {
                    "id": "lx2glrw",
                    "author": "arxior",
                    "body": "Hey /u/mattgperry, good luck with this move and thanks for the great work.\n\nAny chance of supporting an animation timeline? It's a hard requirement for my use case. Currently using gsap for this",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731581182.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lx2glrw/"
                },
                {
                    "id": "lx4o6us",
                    "author": "_ciruz",
                    "body": "That’s great, good luck",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731610248.0,
                    "parent_id": "t3_1gqadrv",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lx4o6us/"
                },
                {
                    "id": "lwxnh07",
                    "author": "mattgperry",
                    "body": "Yeah a big rationale behind this was because of that. You search \"Framer animations\" right now and you get my docs with code examples. Depending on if you're using Framer Motion or Framer, that is or isn't what you're looking for. But if you're using Framer, it's also scary and useless.",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731513929.0,
                    "parent_id": "t1_lwwmd37",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxnh07/"
                },
                {
                    "id": "lwxnjhp",
                    "author": "mattgperry",
                    "body": "That's great to hear thanks! Finally come full circle.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731513951.0,
                    "parent_id": "t1_lwwj9x3",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxnjhp/"
                },
                {
                    "id": "lwxo0bh",
                    "author": "mattgperry",
                    "body": "Over the last two years Motion One has basically ended up inside of Framer Motion and improved. Sadly I didn't really have time to maintain it when it was just my side project. This replaces both libraries. Framer Motion users have no breaking changes, but there's an upgrade guide for Motion One [https://motion.dev/docs/upgrade-guide](https://motion.dev/docs/upgrade-guide)",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731514096.0,
                    "parent_id": "t1_lwwp3a4",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxo0bh/"
                },
                {
                    "id": "lwxo3p3",
                    "author": "mattgperry",
                    "body": "Just quoting my reply in another thread:\n\n\\> Over the last two years Motion One has basically ended up inside of Framer Motion and improved. Sadly I didn't really have time to maintain it when it was just my side project. This replaces both libraries. Framer Motion users have no breaking changes, but there's an upgrade guide for Motion One [https://motion.dev/docs/upgrade-guide](https://motion.dev/docs/upgrade-guide)",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731514125.0,
                    "parent_id": "t1_lwwt77u",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwxo3p3/"
                },
                {
                    "id": "lwyjrti",
                    "author": "mattgperry",
                    "body": "Framer Motion has been using WAAPI under the hood like Motion One for values that can be hardware accelerated for about two years now. \n\nI have another improvement in the pipeline where we can use it to animate values via CSS variables in supporting browsers for some non-accelerated values to limit the scope of style recalculations. Maybe within the next few months.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731523736.0,
                    "parent_id": "t1_lwy7ozi",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lwyjrti/"
                },
                {
                    "id": "lx2moqi",
                    "author": "mattgperry",
                    "body": "We have a timeline: [https://motion.dev/docs/animate#sequencing](https://motion.dev/docs/animate#sequencing)\n\nIs there a specific feature though that you're missing here?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731584707.0,
                    "parent_id": "t1_lx2glrw",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lx2moqi/"
                },
                {
                    "id": "lx1evrj",
                    "author": "TrackieDaks",
                    "body": "Thank goodness. Searching the docs is a roll-of-the-dice on if it would land me on relevant API reference documentation, or some completely irrelevant framer feature promo page.\n\nI don't know whose idea it was to go in on the \"Hey, I know you're building your own thing, but we also make an app!\" train, but that was a mistake.\n\nAnd I use both the product and the project almost daily.\n\nGlad you get to do your own thing, and have support in doing it!",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731558695.0,
                    "parent_id": "t1_lwxnh07",
                    "link_id": "t3_1gqadrv",
                    "permalink": "/r/reactjs/comments/1gqadrv/framer_motion_is_now_independent_introducing/lx1evrj/"
                }
            ]
        },
        {
            "id": "1gq4hdx",
            "title": "With React compiler, would you still use `useMemo` in some circumstances?",
            "author": "PlateletsAtWork",
            "score": 30,
            "upvotes": 30,
            "downvotes": 0,
            "num_comments": 38,
            "created_utc": 1731471092.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/",
            "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/",
            "selftext": "React compiler is supposed to eliminate the need for calling `useMemo`, right? But I'm wondering, are there cases where you'd still want to call `useMemo` explicitly?\n\nWhat I'm thinking in particular is if you have something you want to ensure only runs only once when the component is mounted. You might want to explicitly mark that so the code is self documenting. A silly toy example, but with something like:\n\n```tsx\nfunction MyComponent() {\n   const uniqueValue = Math.random();\n\n   return <p>{uniqueValue}</p>;\n}\n```\n\nEven if I know the React compiler is going to memoize that for me, it feels weird to just leave it like that. Does anyone have thougts around this? Should you still manually mark things to be memoized if you're using the React compiler?",
            "comments": [
                {
                    "id": "lwvb6ro",
                    "author": "octocode",
                    "body": "that’s not a good use for useMemo since the internal cache can be cleared during certain operations and the value would be recalculated again\n\nif you want to run something “only once”, put it inside useState like `const [val] = useState(() => Math.random())`\n\nto answer the question, no, it’s unlikely that useMemo will be useful long term and will probably just be removed eventually if compiler becomes standard",
                    "score": 40,
                    "upvotes": 40,
                    "downvotes": 0,
                    "created_utc": 1731472497.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvb6ro/"
                },
                {
                    "id": "lwwcd1y",
                    "author": "FirefighterAnnual454",
                    "body": "‘useMemo‘ is for computing values and will likely still be around, React Compiler would make ‘memo‘ which is used to cache components unnecessary\n\nAlso wrt to your example, yea unique value would have the same value since it doesn’t accept any props but that’s just how any memorized function works, arguments don’t change and the function is not evaluated twice. Putting the unique value behind a ‘useRef‘ would solve the problem",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731494760.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwwcd1y/"
                },
                {
                    "id": "lwxouht",
                    "author": "basically_alive",
                    "body": "useMemo could be useful if you want to control when the calculation is re-run with dependencies. Maybe for some reason you want Math.random() to rerun when some other prop changes for example.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731514357.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwxouht/"
                },
                {
                    "id": "lx25u5j",
                    "author": "Famous_4nus",
                    "body": "Just plan your architecture accordingly. Use SOC concepts and you'll never have to worry about useMemo.\n\nUseMemo and useCallback should be used purely for optimization purposes and absolutely nothing else. If something doesn't work without those hooks, then the problem is elsewhere in your app.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731573984.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx25u5j/"
                },
                {
                    "id": "lwvcrd9",
                    "author": "shadohunter3321",
                    "body": "The compiler is a long way from getting stable and further away from libraries catching up to it. I can say this because I've tested the latest releases and it doesn't play well with libraries like `react-hook-form` which you are going to be using in most web apps (unless it's just a website)\n\nIf you're starting a project now, you should explicitly memoize values and functions where needed.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731473201.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvcrd9/"
                },
                {
                    "id": "lwvv009",
                    "author": "yksvaan",
                    "body": "I'd say some pragma hints or something to provide instructions would be good. Now the compiler is kinda silly, just memoing everything no matter if it makes sense or not. It should really have cost analysis ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731483124.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvv009/"
                },
                {
                    "id": "lwvv0p8",
                    "author": "Fauken",
                    "body": "Even if `useMemo` wasn't really doing anything different than what the compiler would do, I still believe it's nice as a syntax for encapsulating some logic to derive a value. Without it you'd have to create a function and pass in relevant values or use an IIFE.  \n\n\n    const value = useMemo(() => {\n      // some branching/complex logic \n    }, [...])\n\n\nFeels nicer to me than something like: \n\n\n    function calculateValue(params) {\n      ...\n    }\n    \n    function Component() {\n      const value = calculateValue(...)\n    \n      return (...)\n    }",
                    "score": -3,
                    "upvotes": -3,
                    "downvotes": 0,
                    "created_utc": 1731483137.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvv0p8/"
                },
                {
                    "id": "lwvxtsn",
                    "author": "neosatan_pl",
                    "body": "I don't use useMemo and see very little reason for it to exist. I also see it as a ugly code alongside useCallback. I expect it to disappear from the API in future releases.",
                    "score": -8,
                    "upvotes": -8,
                    "downvotes": 0,
                    "created_utc": 1731484948.0,
                    "parent_id": "t3_1gq4hdx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvxtsn/"
                },
                {
                    "id": "lwvbfdn",
                    "author": "PlateletsAtWork",
                    "body": "That's a good point, thank you.  I didn't realize \\`useMemo\\` could be cleared internally, but makes sense since it's supposed to be memoization.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731472603.0,
                    "parent_id": "t1_lwvb6ro",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvbfdn/"
                },
                {
                    "id": "lwven1w",
                    "author": "LiveRhubarb43",
                    "body": "I'm not sure this is correct. If you have something like `const uniqueValue = useMemo(() => Math.random(), [])` what is the situation where that gets recalculated?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731474065.0,
                    "parent_id": "t1_lwvb6ro",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwven1w/"
                },
                {
                    "id": "lwy3yj5",
                    "author": "MercyHealMePls",
                    "body": "Just keeping the call to Math.random outside of the component and assigning should also work, no?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731518969.0,
                    "parent_id": "t1_lwvb6ro",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwy3yj5/"
                },
                {
                    "id": "lx1pw2m",
                    "author": "futsalcs",
                    "body": "This isn't entirely right. The compiler will memo computed values as well, not just components.\n\nThe compiler makes useMemo, useCallback and React.memo obsolete.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731564068.0,
                    "parent_id": "t1_lwwcd1y",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx1pw2m/"
                },
                {
                    "id": "lwwzumm",
                    "author": "TransportationOwn269",
                    "body": "The react team already uses react compiler in production. From their perspective the bugs induced by the compiler are actually from the code base that does not respect the react rules.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731505915.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwwzumm/"
                },
                {
                    "id": "lwvzuiw",
                    "author": "aragost",
                    "body": "I’m going to try out compiler in my app soon - what issues did you find with react-hook-form?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486299.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvzuiw/"
                },
                {
                    "id": "lww09xx",
                    "author": "Aggregior",
                    "body": "\"where needed\" is a very important part here. Both hooks useMemo and useCallback are definitely overused",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486590.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww09xx/"
                },
                {
                    "id": "lwzu32s",
                    "author": "Massive_Ambition3962",
                    "body": "> If you're starting a project now, you should explicitly memoize values and functions where needed.\n\nAccording to React core team, if you're using compiler, no, you don't need to.\n\nhttps://github.com/reactwg/react-compiler/discussions/16\n\n> our current recommendation is to leave manual memoization in for existing code, but for new code written after the compiler is added you can omit them.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731537951.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwzu32s/"
                },
                {
                    "id": "lwzuqoj",
                    "author": "Massive_Ambition3962",
                    "body": "> doesn't play well with libraries like react-hook-form\n\nmore than likely breaks the rules of react then.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731538168.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwzuqoj/"
                },
                {
                    "id": "lwvlnx9",
                    "author": "Grenaten",
                    "body": "Interestingly, I developed many apps with many forms, and never used that library. Maybe I was missing out.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731477580.0,
                    "parent_id": "t1_lwvcrd9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvlnx9/"
                },
                {
                    "id": "lwzu69e",
                    "author": "Massive_Ambition3962",
                    "body": "https://github.com/reactwg/react-compiler/discussions/33",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731537980.0,
                    "parent_id": "t1_lwvv009",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwzu69e/"
                },
                {
                    "id": "lx1pe7r",
                    "author": "futsalcs",
                    "body": "It does not \"just memo everything no matter if it makes sense or not\". The compiler has tons of heuristics to figure out what to memo and what not to memo.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731563796.0,
                    "parent_id": "t1_lwvv009",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx1pe7r/"
                },
                {
                    "id": "lwvzafh",
                    "author": "West-Chemist-9219",
                    "body": "“Ugly code” smh",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731485922.0,
                    "parent_id": "t1_lwvxtsn",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvzafh/"
                },
                {
                    "id": "lww3nn9",
                    "author": "rainst85",
                    "body": "Those react devs and their silly hooks",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731488913.0,
                    "parent_id": "t1_lwvxtsn",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww3nn9/"
                },
                {
                    "id": "lwvexye",
                    "author": "octocode",
                    "body": "https://react.dev/reference/react/useMemo#caveats\n\n> React will throw away the cache if your component suspends during the initial mount. In the future, React may add more features that take advantage of throwing away the cache—for example, if React adds built-in support for virtualized lists in the future, it would make sense to throw away the cache for items that scroll out of the virtualized table viewport. This should be fine if you rely on useMemo solely as a performance optimization. Otherwise, a state variable or a ref may be more appropriate.",
                    "score": 19,
                    "upvotes": 19,
                    "downvotes": 0,
                    "created_utc": 1731474210.0,
                    "parent_id": "t1_lwven1w",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvexye/"
                },
                {
                    "id": "lwvznfr",
                    "author": "aragost",
                    "body": "Think about it from the other side: Memo gives you no guarantees that you will not rerun when it deems it necessary, just like with component renders",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731486163.0,
                    "parent_id": "t1_lwven1w",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvznfr/"
                },
                {
                    "id": "lwvsdpq",
                    "author": "Difficult-Ad-5892",
                    "body": "This will only run once or when the component reloads or is first loaded. Since there is no dependency added.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731481461.0,
                    "parent_id": "t1_lwven1w",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwvsdpq/"
                },
                {
                    "id": "lwy45oe",
                    "author": "octocode",
                    "body": "depends if you use that component in more than one place. if you need the same value globally that’s fine too.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731519028.0,
                    "parent_id": "t1_lwy3yj5",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwy45oe/"
                },
                {
                    "id": "lx1w4y3",
                    "author": "FirefighterAnnual454",
                    "body": "I don’t understand how it’s supposed to memo computed values, it would require parsing the JS AST and memoizing each function (how would inline functions work?)\n\nAnd memoizing everything and anything is what we’re not supposed to do, if they’re gonna do that they might as well introduce signal primitives into React\n\nDo you have a source?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731567664.0,
                    "parent_id": "t1_lx1pw2m",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx1w4y3/"
                },
                {
                    "id": "lww0bpl",
                    "author": "shadohunter3321",
                    "body": "1. Watching values do not always get the latest value. \n2. Typing something in the input fields changes the value on form but the change doesn't actually show up on the screen.\n\nIt's fine for simple use cases but when you have complex logic in the form and you need controlled inputs split into multiple components, it starts acting weird. I'm guessing this is because react-hook-form' optimizations to minimize re-render are based on current react render policy. But with compiler, the memoization is different from what we get with memo().",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731486623.0,
                    "parent_id": "t1_lwvzuiw",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww0bpl/"
                },
                {
                    "id": "lww0kdz",
                    "author": "shadohunter3321",
                    "body": "Definitely. It should only be used if you're explicitly memoizing the component where you're passing it as prop. Or for derived values with very complex calculations. \n\nSome libraries also mention in their doc where memoized functions should be passed.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486790.0,
                    "parent_id": "t1_lww09xx",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww0kdz/"
                },
                {
                    "id": "lww6u89",
                    "author": "neosatan_pl",
                    "body": "I have no issues with hooks, but the useMemo and useCallback feels like a workaround react functionality. I think the react core team feels similarly and this is why they are introducing react compiler.\n\nPretty much all of the use of the useMemo I saw was unwarranted and just introduced more complexity to the code. I might be oldfashioned or just too stupid, but I don't like working on a 3000 lines long components that are overflowing with different kind of \"caching\" logic. Thus I do prefer a more clean cut division of responsibilities. If you use a state management lib, then use it for persisting state that should survive a component unmount and provide a stable reference to your data. There is very little need to do it per component while you have better tools to do that (lets be honest, we all use a state management lib or are using REST/GraphQL client that caches data internally). Components aren't just the place to persist data. So this is why I feel that the whole idea of useMemo and useCallback is overused and leads to ugly code.\n\nThere are, of course, sensible ways to use both hooks, but in general there are better tools or you can design the application to not need it and have simpler, more maintainable code at the end.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731491110.0,
                    "parent_id": "t1_lww3nn9",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww6u89/"
                },
                {
                    "id": "lwy5ala",
                    "author": "MercyHealMePls",
                    "body": "Ah fair enough",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731519375.0,
                    "parent_id": "t1_lwy45oe",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwy5ala/"
                },
                {
                    "id": "lx1ztb7",
                    "author": "futsalcs",
                    "body": "The compiler does parse the JS AST. It does a lot more too. You can view the output of an [example on the playground](https://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAwhALYAOhCmOAFMHjguWAL4CURwAOsUTiEwOIggButIgF4izVmAB0aPABsWMegA8ZAPiI6ApEQBMM6bIAMnANz8iRGAhyxiE2nczsQ7IA). Note how the computed value is cached in this example.\n\nIt doesn't memoize _everything_, we have heuristics to memo values only when necessary. I wrote about one such heuristic here: https://www.recompiled.dev/blog/type-system/\n\nYou can watch the presentation here (starting at 37:55) where we go over more details on how this works: https://youtu.be/lyEKhv8-3n0?si=VSYGSHO8b_qamD4n\n\nDisclaimer: I worked on the react compiler.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731569969.0,
                    "parent_id": "t1_lx1w4y3",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx1ztb7/"
                },
                {
                    "id": "lww4o4q",
                    "author": "aragost",
                    "body": "thanks, I'll go into my own test with this additional knowledge. I've always found that `watch` was a bit weird/trying to be a bit too smart, hopefully the compiler will give the library a nudge in a sensible direction\n\nedit: [this issue](https://github.com/react-hook-form/react-hook-form/issues/12298) is worth subscribing to",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731489605.0,
                    "parent_id": "t1_lww0bpl",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww4o4q/"
                },
                {
                    "id": "lwwpr7w",
                    "author": "rainst85",
                    "body": "I have been working for 5 years now on an app (react web and native) that updates views pretty often via websocket subscription (we are in the order of 3-4 updates per second).\n\nOptimising rerenders and expensive computations has been a pillar of the development team and it wouldn’t be possible without a wise use of useMemo (and useCallback but not as often).\n\nSure it’s a bit verbose but that’s where react is at the moment and it does the job just fine, reading that there is very little use for it just melts my brain",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731501820.0,
                    "parent_id": "t1_lww6u89",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwwpr7w/"
                },
                {
                    "id": "lx27ju6",
                    "author": "FirefighterAnnual454",
                    "body": "Huh TIL thanks for that\n\nCan I ask why not just introduce signals instead of introducing so much complexity to do what signals do??",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731575150.0,
                    "parent_id": "t1_lx1ztb7",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx27ju6/"
                },
                {
                    "id": "lww5hxc",
                    "author": "shadohunter3321",
                    "body": "Thanks for the link. I was really looking forward to upgrading a project (300+ routes) we started 4 months back to use the compiler when it comes out. We religiously followed all rules of react. But when I tried out the latest release that supports previous versions of react, got hit with this reality. Unfortunately the whole project consists of forms for every route and I don't think we'd be able to upgrade and change all these logics if react-hook-form decides to implement breaking changes.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731490175.0,
                    "parent_id": "t1_lww4o4q",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lww5hxc/"
                },
                {
                    "id": "lwwweqc",
                    "author": "neosatan_pl",
                    "body": "What can I say? Maybe it's skill issue? I work on a real time game. I worked on a log viewer that was streaming hundreds of log lines that needed to be translated into components per second. I worked on real time charts. I really didn't need a useMemo for any of it. \n\nI think the only project I worked that used useMemo for longer time was a management app that used react-table. It was causing a hell of a performance problem and we finally solved by removing react-table and implementing a simple table component with data processed before it was set in the state. useMemo became obsolete and perforamance problem went away.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731504578.0,
                    "parent_id": "t1_lwwpr7w",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lwwweqc/"
                },
                {
                    "id": "lx2a22k",
                    "author": "futsalcs",
                    "body": "Because we are absorbing the complexity into the compiler and the framework, unlike signals which force the complexity onto developers. \n\nDevelopers using React can stick to using plain old javascript objects and don't have to learn a new way to build apps. Now, they get all the benefits of signals for _free_.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731576863.0,
                    "parent_id": "t1_lx27ju6",
                    "link_id": "t3_1gq4hdx",
                    "permalink": "/r/reactjs/comments/1gq4hdx/with_react_compiler_would_you_still_use_usememo/lx2a22k/"
                }
            ]
        },
        {
            "id": "1gpzhx8",
            "title": "Xstate as backend",
            "author": "Every_Ordinary_3506",
            "score": 36,
            "upvotes": 36,
            "downvotes": 0,
            "num_comments": 23,
            "created_utc": 1731456100.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpzhx8/xstate_as_backend/",
            "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/",
            "selftext": " \nOur backend uses XState with around 4-5 state machines. However, one of these machines is massive, with over 18,000 lines of code. This is causing significant issues with type checking—loading types after each change takes about 45 seconds, and sometimes it doesn’t work at all.\n\nOur tech stack includes Remix and XState. Overall, the experience is really frustrating. Navigating the project is difficult since there are no cmd+click references to functions, making it hard to jump to definitions.\n\nThe project includes a huge JSON with numerous states, which only adds to the complexity.\n\nAny advice on how to handle this situation?\n\nOur lead/principal engineer doesn't want to change this developer experience and we have to work on this 18000 lines single file with all the business logic. \n\nPlease help\n\n\n",
            "comments": [
                {
                    "id": "lwua3h4",
                    "author": "davidkpiano",
                    "body": "Hey, creator of XState here. I'm shocked that the machine is that big - it really shouldn't be.\n\nFeel free to DM and I can hop on a call to help sort out the mess.",
                    "score": 132,
                    "upvotes": 132,
                    "downvotes": 0,
                    "created_utc": 1731458624.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwua3h4/"
                },
                {
                    "id": "lwu3arm",
                    "author": "eindbaas",
                    "body": "run",
                    "score": 24,
                    "upvotes": 24,
                    "downvotes": 0,
                    "created_utc": 1731456249.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwu3arm/"
                },
                {
                    "id": "lwuh4ha",
                    "author": "ordnannce",
                    "body": "That actually sounds quite fun to untangle. But your real problem is the principal engineer. Take up David's offer and get some real evidence to bring to your team.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731461119.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwuh4ha/"
                },
                {
                    "id": "lwu8np8",
                    "author": "Every_Ordinary_3506",
                    "body": "Also debugging is a nightmare since we can't use debugger because xstate subverts the call stack",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731458121.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwu8np8/"
                },
                {
                    "id": "lwuwluh",
                    "author": "Arashi-Tempesta",
                    "body": "give react devs a store, introduce them to the concept of slices/smaller machines\n\nthey will add even the npm install in there\n\nreminds me of the old school redux project that the component couldnt even handle a click without going through a redux saga",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731466642.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwuwluh/"
                },
                {
                    "id": "lx1du0t",
                    "author": "Llaver",
                    "body": "Push changes, get code review from the homie, merge as \"minor bug fixes\"\n\n(Once again, don't listen to me)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731558227.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lx1du0t/"
                },
                {
                    "id": "lwu4vx5",
                    "author": "NotLyon",
                    "body": "What state is being managed? Is it a game or multiplayer app?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731456810.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwu4vx5/"
                },
                {
                    "id": "lwvg4ro",
                    "author": "JohntheAnabaptist",
                    "body": "How TF u get 18k lines state machine",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731474778.0,
                    "parent_id": "t3_1gpzhx8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwvg4ro/"
                },
                {
                    "id": "lwupjo9",
                    "author": "r0llingthund3r",
                    "body": "You dropped this king 👑",
                    "score": 35,
                    "upvotes": 35,
                    "downvotes": 0,
                    "created_utc": 1731464114.0,
                    "parent_id": "t1_lwua3h4",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwupjo9/"
                },
                {
                    "id": "lww6o6i",
                    "author": "Every_Ordinary_3506",
                    "body": "Thank you, David, for your help. I can’t share any code due to confidentiality, but we’ll check with our team leaders to see if they're open to outside assistance. As I mentioned, though, our principal/lead seems reluctant to make changes and prefers to stick with the current, subpar development experience.\n\n😭😭",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731490992.0,
                    "parent_id": "t1_lwua3h4",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lww6o6i/"
                },
                {
                    "id": "lwuj8y5",
                    "author": "Donnyboy",
                    "body": "You just made a fan out of me. This kind of community support is hard to do!",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731461867.0,
                    "parent_id": "t1_lwua3h4",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwuj8y5/"
                },
                {
                    "id": "lwu8q96",
                    "author": "Every_Ordinary_3506",
                    "body": "Where do I run 😭😭😭",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731458146.0,
                    "parent_id": "t1_lwu3arm",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwu8q96/"
                },
                {
                    "id": "lwuaiyq",
                    "author": "davidkpiano",
                    "body": "Are you using XState 4 or 5?\n\nXState 5 allows you to inspect every single microstep in the machine, and you can easily add a debugger there.",
                    "score": 13,
                    "upvotes": 13,
                    "downvotes": 0,
                    "created_utc": 1731458772.0,
                    "parent_id": "t1_lwu8np8",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwuaiyq/"
                },
                {
                    "id": "lwwuvuk",
                    "author": "Every_Ordinary_3506",
                    "body": "All side effects, API calls, and onClick events are being managed centrally in a single state machine through events.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731503976.0,
                    "parent_id": "t1_lwuwluh",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwwuvuk/"
                },
                {
                    "id": "lx1gf0s",
                    "author": "Agonlaire",
                    "body": "The more I'm exposed to the React ecosystem the more insane stuff I see relating to APIs and state consumption.\n\nWhy do frontend devs think they can come up with basically a \"backend\" just by patching different libraries with node as a glue?\n\nI only see this blasphemy on React based projects.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731559396.0,
                    "parent_id": "t1_lwuwluh",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lx1gf0s/"
                },
                {
                    "id": "lwu8ai1",
                    "author": "Every_Ordinary_3506",
                    "body": "It's a checkout application",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731457991.0,
                    "parent_id": "t1_lwu4vx5",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwu8ai1/"
                },
                {
                    "id": "lww48vy",
                    "author": "Every_Ordinary_3506",
                    "body": "All the business logic is in that json 🤮🤮",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731489321.0,
                    "parent_id": "t1_lwvg4ro",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lww48vy/"
                },
                {
                    "id": "lx1dh7g",
                    "author": "Llaver",
                    "body": "\"Sir team lead, please understand that I would never go against your great wisdom, oh great leader, but I have the creator of one of the most important libraries in our code base and he would like to share his magical prowess. Please master, will you allow a thought that is not your own to enter your domain?\" \n\nShould help them understand how silly they're being \n\n😊😊\n\nSigned, an unemployed (don't listen to me)",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731558073.0,
                    "parent_id": "t1_lww6o6i",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lx1dh7g/"
                },
                {
                    "id": "lww0nmm",
                    "author": "fullctxdev",
                    "body": "[remix.run](http://remix.run)",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731486852.0,
                    "parent_id": "t1_lwu8q96",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lww0nmm/"
                },
                {
                    "id": "lww47fo",
                    "author": "Every_Ordinary_3506",
                    "body": "Xstate 5 but we can't debug those in backend, we have to add a function with a debugger or console.logs.\n\nLine by line debugging isn't possible \n\nXstate is great but the way it's architecture in our project is a nightmare",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731489293.0,
                    "parent_id": "t1_lwuaiyq",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lww47fo/"
                },
                {
                    "id": "lwyvayt",
                    "author": "Arashi-Tempesta",
                    "body": "no wonder its so big\n\nonly thing to do in a situation like that is set up a lot of end to end/integration tests and ensure as much corners are covered\n\nthen is when you start trying to split that machine into smaller ones if possible, or just rethink the setup if state machines are not the call",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731527220.0,
                    "parent_id": "t1_lwwuvuk",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lwyvayt/"
                },
                {
                    "id": "lx293bl",
                    "author": "Ug1bug1",
                    "body": "\"Dear team lead, even the creator of the library says that you are wrong.\"",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731576203.0,
                    "parent_id": "t1_lx1dh7g",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lx293bl/"
                },
                {
                    "id": "lww3uds",
                    "author": "Every_Ordinary_3506",
                    "body": "You know what I'm talking about fullctxdev, we both need help",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731489043.0,
                    "parent_id": "t1_lww0nmm",
                    "link_id": "t3_1gpzhx8",
                    "permalink": "/r/reactjs/comments/1gpzhx8/xstate_as_backend/lww3uds/"
                }
            ]
        },
        {
            "id": "1gpxuvq",
            "title": "Released a daily word games mobile app built with React (yes React, that is not a typo)",
            "author": "s0ngo",
            "score": 10,
            "upvotes": 10,
            "downvotes": 0,
            "num_comments": 20,
            "created_utc": 1731451616.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/",
            "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/",
            "selftext": "I have been programming long enough to remember when React Native was released. It was a game changer being able to write native iOS and Android apps in a single codebase, especially for small teams. But over the last few years, things have gone one step further. You are able to write a web, Android, and iOS app in a single codebase without sacrificing native functionality using Capacitor. It still mostly runs as a webview, but provides a bridge to access any native features (like camera, geolocation, etc). I used it to build a daily crossword / word game app similar to the NYT Games. It was pretty shocking how fast I was able to move with capacitor - from first commit to release on the app stores it was around 3 months. \n\nI'm pretty happy with the results so I wanted to share! The app has daily word games, including mid-size and mini crosswords and Sudoku. It also has a few other original handwritten games. App Store links for those interested (its completely free):\n\n[App Store](https://apps.apple.com/us/app/puzpop/id6670177208)\n\n[Google Play](https://play.google.com/store/apps/details?id=com.puzpop.app)",
            "comments": [
                {
                    "id": "lwuvlh0",
                    "author": "CuxienusMupima",
                    "body": "I am curious - did you explore making a PWA and using something like [https://www.pwabuilder.com/](https://www.pwabuilder.com/) to packing it for app store, rather than using capacitor? Or are you using native features that aren't accessible as a PWA?",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731466280.0,
                    "parent_id": "t3_1gpxuvq",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwuvlh0/"
                },
                {
                    "id": "lwvkcmr",
                    "author": "drumnation",
                    "body": "Looks great. I’m pretty experienced with react native but much prefer react web development experience. Ima try capacitor at some point. Great work!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731476879.0,
                    "parent_id": "t3_1gpxuvq",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwvkcmr/"
                },
                {
                    "id": "lww8ul4",
                    "author": "power78",
                    "body": ">things have gone one step further. You are able to write a web, Android, and iOS app in a single codebase \n\nSo why not also post the web version seeing as this is a reactjs sub, not a mobile sub?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731492471.0,
                    "parent_id": "t3_1gpxuvq",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lww8ul4/"
                },
                {
                    "id": "lwtxpvd",
                    "author": "tweakdeveloper",
                    "body": "probably going to be a hot take on this subreddit but like. does the world really need _another_ \"cross-platform\" mobile solution?\n\nhttps://xkcd.com/927/",
                    "score": -10,
                    "upvotes": -10,
                    "downvotes": 0,
                    "created_utc": 1731454283.0,
                    "parent_id": "t3_1gpxuvq",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwtxpvd/"
                },
                {
                    "id": "lwvcrm9",
                    "author": "mrdmadev",
                    "body": "I’ve been out of the dev arena for a few years. Didn’t Apple neuter PWAs?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731473204.0,
                    "parent_id": "t1_lwuvlh0",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwvcrm9/"
                },
                {
                    "id": "lwuwvxa",
                    "author": "s0ngo",
                    "body": "Honestly, I did not look into building it as a PWA much. There is a good chance it would have been sufficient for my use case. But adding Capacitor to my react project was such a small lift, that I did not see any reason to limit myself to PWA features",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731466741.0,
                    "parent_id": "t1_lwuvlh0",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwuwvxa/"
                },
                {
                    "id": "lwwvkv3",
                    "author": "s0ngo",
                    "body": "Thanks! One thing I will say is that Capacitor is niche enough that if you ask AI for coding help it will often hallucinate functions. But the capacitor documentation is really easy to follow",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731504249.0,
                    "parent_id": "t1_lwvkcmr",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwwvkv3/"
                },
                {
                    "id": "lwwusw4",
                    "author": "s0ngo",
                    "body": "I have a website running but it's hidden away and I want to make some additional edits before posting it anywhere. And yes this is a reactjs sub, so I posted about my reactjs project",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731503943.0,
                    "parent_id": "t1_lww8ul4",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwwusw4/"
                },
                {
                    "id": "lwu1e5s",
                    "author": "Cyral",
                    "body": "Capacitor has existed since 2018 and is largely the successor to Cordova (2009), it’s not some small project.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731455582.0,
                    "parent_id": "t1_lwtxpvd",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwu1e5s/"
                },
                {
                    "id": "lwv55hw",
                    "author": "vegancryptolord",
                    "body": "The world doesn’t actually need anything. We should just go back to living in caves. I mean seriously… dung huts? When caves already exist? Then stone buildings? Wood? Brick? I mean jeez humans give it a rest already! Caves fuckin exist man…",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731469914.0,
                    "parent_id": "t1_lwtxpvd",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwv55hw/"
                },
                {
                    "id": "lwu1yl2",
                    "author": "s0ngo",
                    "body": "Haha I knew what that xkcd would be before I clicked on it. \n\nBut to solve the problem of one code base for web, Android, and iOS I believe the only two real contenders are Capacitor and Cordova.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731455780.0,
                    "parent_id": "t1_lwtxpvd",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwu1yl2/"
                },
                {
                    "id": "lwu0ib2",
                    "author": "shun_tak",
                    "body": "Of course we need another one /s",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731455272.0,
                    "parent_id": "t1_lwtxpvd",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwu0ib2/"
                },
                {
                    "id": "lwx52y3",
                    "author": "CuxienusMupima",
                    "body": "My question was definitely not meant to be read as \"you should have done it \\*this\\* way\"! \n\nI'm just a hobbyist in terms of web dev, but I do run a small site (maybe a hundred users per day) that is a PWA. The benefits of the PWA for me are (1) the \"app\" icon on the users home page (2) better use of screen real estate and (3) \\[potentially\\] the offline storage will be more resistant to being evicted in case of low space.\n\nSince I'm not actually using any of the native-only APIs, I suspect capacitor would actually be a downgrade for me (harder to test, limited to what is available on WebView which can often trail \"real\" browsers) so I was curious about what went into the decision for OP (I think a word game app also wouldn't really require much in terms of native-only APIs).",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731507856.0,
                    "parent_id": "t1_lwvcrm9",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwx52y3/"
                },
                {
                    "id": "lwvr8l1",
                    "author": "volivav",
                    "body": "Question is, which specific feature of capacitor did you actually need? And is that feature not available in PWAs?\n\nYou mentioned how it has geolocation and camera access, but I fail to understand how is that relevant for word games, and PWAs have access to those as well anyway.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731480767.0,
                    "parent_id": "t1_lwuwvxa",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwvr8l1/"
                },
                {
                    "id": "lwwxbro",
                    "author": "drumnation",
                    "body": "Have you tried using cursor and adding the capacitor documentation to it?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731504940.0,
                    "parent_id": "t1_lwwvkv3",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwwxbro/"
                },
                {
                    "id": "lwu1ocb",
                    "author": "tweakdeveloper",
                    "body": "oh, today i learned. i'm on the same page now. still think there's way too many of them around, but at least it's not adding to the pile.",
                    "score": -3,
                    "upvotes": -3,
                    "downvotes": 0,
                    "created_utc": 1731455680.0,
                    "parent_id": "t1_lwu1e5s",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwu1ocb/"
                },
                {
                    "id": "lwv7a6g",
                    "author": "tweakdeveloper",
                    "body": "i'm having a hard time taking this seriously tbh. your comment mocks _new_ and _useful_ inventions. mine expresses dissatisfaction with the seemingly-endless propogation of different ends to the same flawed means (albeit perhaps not in the most elegant way).\n\ni'm sure i'd feel differently about cross-platform mobile frameworks if i'd managed to find one that actually delivered on the \"two platforms, one codebase\" promise. unfortunately, in my experience, for anything more than a to-do list app you end up having _three_ codebases instead of the promised one due to the platform-specific code that needs to be written in addition to the shared code. this isn't even touching on the various flaws in the frameworks themselves (flutter's jank issues on iOS comes to mind.)\n\ni get that _in theory_ these frameworks improve developer experience. if they did, then i would agree with you that i'm criticizing needlessly, but my experience with them has been quite the opposite.",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731470793.0,
                    "parent_id": "t1_lwv55hw",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwv7a6g/"
                },
                {
                    "id": "lwwtcoo",
                    "author": "s0ngo",
                    "body": "Why build it as a PWA when it's a similar level of effort to build it as a capacitor app? In case there's any native features that are not available to PWAs that I might want to add in the future I don't want to be limited. In terms of immediate needs, local storage options and push notifications were important. Capacitor has built-in functions for those.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731503356.0,
                    "parent_id": "t1_lwvr8l1",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwwtcoo/"
                },
                {
                    "id": "lwwyurh",
                    "author": "s0ngo",
                    "body": "No I'm actually still not using cursor haha but that is a great suggestion!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731505533.0,
                    "parent_id": "t1_lwwxbro",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwwyurh/"
                },
                {
                    "id": "lwv85mw",
                    "author": "vegancryptolord",
                    "body": "I have a hard time taking any variation of “does the world really need another another ____” seriously tbh. So we’re in the same boat.\n\nPeople can build and do whatever they want if you don’t find it useful or fun you’re free to move on with your life ignoring its existence. The world doesn’t care whether you think it’s useful or not",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731471165.0,
                    "parent_id": "t1_lwv7a6g",
                    "link_id": "t3_1gpxuvq",
                    "permalink": "/r/reactjs/comments/1gpxuvq/released_a_daily_word_games_mobile_app_built_with/lwv85mw/"
                }
            ]
        },
        {
            "id": "1gpu4im",
            "title": "Global Data Store of Active Requests and Current State? ",
            "author": "Asleep-Pea-2184",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731442184.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpu4im/global_data_store_of_active_requests_and_current/",
            "permalink": "/r/reactjs/comments/1gpu4im/global_data_store_of_active_requests_and_current/",
            "selftext": "I have a next.js / express.js / PostgreSQL project with a fairly complicated dynamic dashboard. When users select different filters on the dashboard, it triggers a gnarly 600 line hook to trigger that fetches new data from the backend and essentially keeps a queue of the requests. The data fetches take seconds / minutes to complete due to the size of the datasets and the complexity of the calculations on the backend. \n\nMy express.js API further communicates to my containerized Python Flask & C++ APIs that live elsewhere when querying for certain metrics. These containers run even more complicated machinery on even bigger data sets. \n\nI need some sort of global data store that will track the current state of each user's dashboard and all of their active requests. So if user A changes their selected metric, there should be functionality that should cancel all of the code running on the Express.js, Flask, and C++ services for the old metric's request. Because these queries are so complex I need to cancel any that aren't actively being selected for to improve performance. \n\nI have a version 1 of this but its really messy and only works for the express.js backend, not for the c++ / Flask backends. Its just a simple in memory activeRequests object that I define globally in my express.js project. \n\nHas anyone solved a similar problem to this? \n\nThanks!",
            "comments": [
                {
                    "id": "lwsye04",
                    "author": "tobimori_",
                    "body": "Just use React Query",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731442751.0,
                    "parent_id": "t3_1gpu4im",
                    "link_id": "t3_1gpu4im",
                    "permalink": "/r/reactjs/comments/1gpu4im/global_data_store_of_active_requests_and_current/lwsye04/"
                }
            ]
        },
        {
            "id": "1gpqqi9",
            "title": "Storybook 8.4 release",
            "author": "kylegach",
            "score": 61,
            "upvotes": 61,
            "downvotes": 0,
            "num_comments": 9,
            "created_utc": 1731433942.0,
            "url": "https://storybook.js.org/blog/storybook-8-4/",
            "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/",
            "selftext": "",
            "comments": [
                {
                    "id": "lws5psy",
                    "author": "kylegach",
                    "body": "TL;DR:\n\nStorybook 8.4 is one of our most feature-packed minor releases ever:\n\n▶️ 1-click Component Testing in browser  \n🫧 50% smaller bundle size & 75% smaller lockfile  \n5️⃣ Svelte 5 and Svelte CSF  \n⚛️ React Native Storybook 8  \n🏷️ Tagging and filtering stories  \n💯 Hundreds more improvements",
                    "score": 29,
                    "upvotes": 29,
                    "downvotes": 0,
                    "created_utc": 1731433988.0,
                    "parent_id": "t3_1gpqqi9",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lws5psy/"
                },
                {
                    "id": "lwucfgd",
                    "author": "SeniorSesameRocker",
                    "body": "Nice. I have always heavily relied on SB. Don't think I have created any project without SB integration.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731459443.0,
                    "parent_id": "t3_1gpqqi9",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwucfgd/"
                },
                {
                    "id": "lwvide6",
                    "author": "l0gicgate",
                    "body": "Super impressed with how mature Storybook has gotten. The DX is impeccable. Easy setup, autodocs, trivial to add variants to components, tons of addons. \n\nI hadn’t used it since v5 and it’s night and day.\n\nThe only area that’s lacking is theming, some things can only be customized using CSS to target the elements and it’s not always possible. \n\nAmazing work y’all!",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731475877.0,
                    "parent_id": "t3_1gpqqi9",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwvide6/"
                },
                {
                    "id": "lwucvv6",
                    "author": "SeniorSesameRocker",
                    "body": "Perhaps post on r/StorybookJS",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731459605.0,
                    "parent_id": "t1_lws5psy",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwucvv6/"
                },
                {
                    "id": "lwt7127",
                    "author": "No_Literature_230",
                    "body": "That's good, last month I could put my hands into storybook and I can tell that is a wonderful tool, are you a contributor to the project?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731445474.0,
                    "parent_id": "t1_lws5psy",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwt7127/"
                },
                {
                    "id": "lx2n85b",
                    "author": "irukadesune",
                    "body": "is this an /s comment?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731584991.0,
                    "parent_id": "t1_lwucfgd",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lx2n85b/"
                },
                {
                    "id": "lwxhxmz",
                    "author": "azsqueeze",
                    "body": "You can provide your own components to be rendered in the docs view. Here's the documentation for it\nhttps://storybook.js.org/docs/configure/user-interface/theming#mdx-component-overrides",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731512194.0,
                    "parent_id": "t1_lwvide6",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwxhxmz/"
                },
                {
                    "id": "lwyfpvs",
                    "author": "domyen",
                    "body": "Done!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731522522.0,
                    "parent_id": "t1_lwucvv6",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwyfpvs/"
                },
                {
                    "id": "lwxo4ew",
                    "author": "l0gicgate",
                    "body": "That’s not what I’m talking about. I’m talking about the sidebar/nav theming",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731514131.0,
                    "parent_id": "t1_lwxhxmz",
                    "link_id": "t3_1gpqqi9",
                    "permalink": "/r/reactjs/comments/1gpqqi9/storybook_84_release/lwxo4ew/"
                }
            ]
        },
        {
            "id": "1gplkvj",
            "title": "React is a programming language, and its rules are syntax",
            "author": "ryanto",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731420658.0,
            "url": "https://buildui.com/posts/react-is-a-programming-language-and-its-rules-are-its-syntax",
            "permalink": "/r/reactjs/comments/1gplkvj/react_is_a_programming_language_and_its_rules_are/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwr3g1e",
                    "author": "alzee76",
                    "body": "React is not a programming language.  React is a toolkit.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731421737.0,
                    "parent_id": "t3_1gplkvj",
                    "link_id": "t3_1gplkvj",
                    "permalink": "/r/reactjs/comments/1gplkvj/react_is_a_programming_language_and_its_rules_are/lwr3g1e/"
                },
                {
                    "id": "lwr4kzu",
                    "author": "a_reply_to_a_post",
                    "body": "yeah no",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731422147.0,
                    "parent_id": "t3_1gplkvj",
                    "link_id": "t3_1gplkvj",
                    "permalink": "/r/reactjs/comments/1gplkvj/react_is_a_programming_language_and_its_rules_are/lwr4kzu/"
                }
            ]
        },
        {
            "id": "1gpkbk9",
            "title": "Do you find this react package useful?",
            "author": "devneill",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731416909.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpkbk9/do_you_find_this_react_package_useful/",
            "permalink": "/r/reactjs/comments/1gpkbk9/do_you_find_this_react_package_useful/",
            "selftext": "Hi everyone!\n\nI made an open source React package called 'Slidenote' that draws attention to your Call to Action by using scroll driven animation.\n\n  \nI would love your feedback!  \nIs this something that you would use?   \nHave I missed anything obvious that would make it a better package?\n\n  \nYou can find a demo here - [slidenote.devneill.com](http://slidenote.devneill.com) or on GitHub - [https://github.com/devneill/slidenote](https://github.com/devneill/slidenote)\n\n  \nThank you 🙏",
            "comments": []
        },
        {
            "id": "1gpiqpq",
            "title": "Is anyone using Relume React components?",
            "author": "miguste",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731411469.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpiqpq/is_anyone_using_relume_react_components/",
            "permalink": "/r/reactjs/comments/1gpiqpq/is_anyone_using_relume_react_components/",
            "selftext": "Relume has made my life a lot easier, in terms of creating website wireframes, it has integration with Webflow and React for their elements, but I haven't seen any mention about the React components here, I'm wondering if anyone is using Relume in React/Nextjs?",
            "comments": []
        },
        {
            "id": "1gphxp3",
            "title": "Can pure functional components have state?",
            "author": "the-crazy-programmer",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 16,
            "created_utc": 1731408175.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/",
            "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/",
            "selftext": "I'm using chatgpt to learn about pure functional components and it says the component is pure whe\n\n* It doesn't have any state\n* Produces same output for given props\n\nIs this right? ",
            "comments": [
                {
                    "id": "lwqapic",
                    "author": "IdleMuse4",
                    "body": "Technically it can have state... as long as that state isn't mutated by anything :P\n\nA very important additional criterion (which is sort of an expansion of \\`Produces same output for given props\\`), is that it mustn't mutate anything, mustn't have any 'side effects', for instance, mustn't mutate global variables, mustn't make \\`fetch\\` calls, stuff like that. It mustn't mutate any parameters that are passed into it.",
                    "score": 16,
                    "upvotes": 16,
                    "downvotes": 0,
                    "created_utc": 1731408605.0,
                    "parent_id": "t3_1gphxp3",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqapic/"
                },
                {
                    "id": "lwqapvn",
                    "author": "satya164",
                    "body": "When React introduced function components initially, it wasn't possible to have state. But now they can.\n\nAbout \"pure\", in terms of React, the purity is about same inputs producing the same output, and the \"inputs\" refer to props, state and context, not only props. Source: https://react.dev/learn/keeping-components-pure\n\nSo that ChatGPT response isn't correct.\n\nI highly recommend not using ChatGPT to learn. It often hallucinates and provides wrong info. Use it to help you try solving problems you have, but don't take what it says at face value, and always verify it first.\n\nPS. it's \"function\" component, not \"functional\".",
                    "score": 21,
                    "upvotes": 21,
                    "downvotes": 0,
                    "created_utc": 1731408611.0,
                    "parent_id": "t3_1gphxp3",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqapvn/"
                },
                {
                    "id": "lwr84s9",
                    "author": "oliphant428",
                    "body": "\"pure\" is loosely defined as \"same input, same output\"",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731423394.0,
                    "parent_id": "t3_1gphxp3",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwr84s9/"
                },
                {
                    "id": "lwqe4yb",
                    "author": "ezhikov",
                    "body": "Technically speaking react components should be idempotent, nog pure. That means that they can have state, but each render with same input (props, internal react state) after sode effects are fired, should produce same output",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731410687.0,
                    "parent_id": "t3_1gphxp3",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqe4yb/"
                },
                {
                    "id": "lwqej4u",
                    "author": "tymzap",
                    "body": "How would you define pure component?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731410916.0,
                    "parent_id": "t3_1gphxp3",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqej4u/"
                },
                {
                    "id": "lwrvwgu",
                    "author": "AbhinavKumarSharma",
                    "body": "What if I am modifying a plain (non-state) variable within useEffect and no re-renders are triggered. \n\nWill this component be treated as pure?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731430971.0,
                    "parent_id": "t1_lwqapic",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwrvwgu/"
                },
                {
                    "id": "lwr8774",
                    "author": "the-crazy-programmer",
                    "body": "Thank you! Agreed on the GPT part.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731423417.0,
                    "parent_id": "t1_lwqapvn",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwr8774/"
                },
                {
                    "id": "lwrze05",
                    "author": "delfV",
                    "body": "Not trying to be rude, but your answer is very wrong.\n\nFirst if all: \"function component\" in React and \"pure functional component\"/\"pure function\" are two different things. I think you confuse these terms.\n\nFunction components are well known concept *specific to React*. They can have state and it's totally fine.\n\nPure function is a term from functional programming and it means that for a given set of arguments it produces always the same output AND doesn't cause any side effects (mutate variable, do I/O).\n\nPure functional component then means that a given component for a given set of arguments (and React component can get only one argument: props) will always produce the same output and won't cause any side-effect. To achieve this the component can only depend on props and nothing else. So it cannot have any state. Also theoritically pure functional component doesn't have to be function component, it can be class-based but it doesn't really makes sense.\n\n>About \"pure\", in terms of React, the purity is about same inputs producing the same output, and the \"inputs\" refer to props, state and context, not only props. Source: https://react.dev/learn/keeping-components-pure\n\nI read the whole article you linked and can't find anything about input refering to state nor context. And it was what I expected because it'd be wrong otherwise. Pure function is a pure function. State and context are objects from the outside of component's scope. It can change every rerender and when it does so does output.\n\nA lot of people not familiar with functional programming don't understand the difference. Some even think C is functional language because it doesn't have classes, only functions. One of the most important concept in functional programming is limited and controlled state or lack of it at all. Also React makes it confusing and they try to fix it by telling people to call them function components instead of functional. Before hooks almost every function components was also (pure) functional one because they couldn't hold state but it isn't true anymore since hooks introduce side-effects and side-causes to them.\n\nIf you want to make it easier to write React in functional style (again, functional style, not function components) then you can try another language that is functional as well like ClojureScript, PureScript or Elm (this one doesn't use React however).\n\nSo to summary: ChatGPT was right in this one and if OP didn't confused the terms then your answer is missleading",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731432055.0,
                    "parent_id": "t1_lwqapvn",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwrze05/"
                },
                {
                    "id": "lwqdzm6",
                    "author": "00PT",
                    "body": "If React expects components are pure and development should always be done this way, why go through the process of rendering every time the owner does by default, instead of just when the props change? Why isn't the `memo` behavior just how all components work?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731410601.0,
                    "parent_id": "t1_lwqapvn",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqdzm6/"
                },
                {
                    "id": "lwqei4x",
                    "author": "tymzap",
                    "body": "ChatGPT is a good tool to learn PROVIDED you already have good amount of experience and development background. You need to filter out bad information from good.",
                    "score": -4,
                    "upvotes": -4,
                    "downvotes": 0,
                    "created_utc": 1731410900.0,
                    "parent_id": "t1_lwqapvn",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqei4x/"
                },
                {
                    "id": "lws592k",
                    "author": "satya164",
                    "body": "You can take things literally, or understand that majority of people mean \"function components\" when they say \"functional component\". It's a very commonly misspelled word. React docs themselves only mention \"function component\" and \"pure component\", not \"functional component\" or \"pure functional component\".\n\n> I read the whole article you linked and can't find anything about input refering to state nor context\n\nUnder \"Detecting impure calculations with StrictMode\"\n\n> in React there are three kinds of inputs that you can read while rendering: props, state, and context\n\nUnder \"Recap\"\n\n> A component must be pure, meaning: Same inputs, same output. Given the same inputs, a component should always return the same JSX.\n> You should not mutate any of the inputs that your components use for rendering. That includes props, state, and context.\n\n-\n\n> Pure function is a pure function\n\nSure, but \"pure (function)\", and \"pure (function component)\" aren't the same thing, obviously.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731433846.0,
                    "parent_id": "t1_lwrze05",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lws592k/"
                },
                {
                    "id": "lwqgcqv",
                    "author": "systoll",
                    "body": "> Why isn't the memo behavior just how all components work?\n\nIt essentially boils down to:\n\n1. There being common situations where figuring this stuff out at run time is slower than just rerendering the component.\n\n2. an 'unmemo' function being weird.\n\n3. Them having the [react compiler](https://react.dev/learn/react-compiler) in mind from the moment they started doing hooks.\n\nWith the react compiler, the memo behaviour *is* how all components work, because they figure things out at compile time.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731411920.0,
                    "parent_id": "t1_lwqdzm6",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqgcqv/"
                },
                {
                    "id": "lwqf8a9",
                    "author": "Glinkis2",
                    "body": "Memoization isn't free. It's always a tradeoff.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731411306.0,
                    "parent_id": "t1_lwqdzm6",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqf8a9/"
                },
                {
                    "id": "lwqx62s",
                    "author": "DrShocker",
                    "body": "Honestly at that I may as well just Google or read the docs anyway, right? \n\nAlthough googling now is often a Gemini response or web sites that are clearly AI generated lol",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731419397.0,
                    "parent_id": "t1_lwqei4x",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwqx62s/"
                },
                {
                    "id": "lws8yr7",
                    "author": "AbhinavKumarSharma",
                    "body": "I believe what delfV is concerned about is why the React documentation does not address why using useState is not considered impure, and how React's functional components differ from traditional functional programming components. I share the same question.\n\nHe is correct in noting that, in functional programming, a function or component is considered pure if its output is solely determined by its input, without altering any external or internal state, and without producing side effects.\n\nWe are observing a difference between React's definition of \"purity\" in components and the traditional definition in functional programming. In functional programming, a pure function's output strictly depends on its input without any side effects.\n\nHowever, in React, component \"purity\" is defined with more flexibility to accommodate the needs of interactive user interfaces.\n\nAccording to the React documentation, why is using useEffect, for example, to increase count of a non-stateful variable, considered impure, while using useState is considered pure?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731434976.0,
                    "parent_id": "t1_lws592k",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lws8yr7/"
                },
                {
                    "id": "lwsdfda",
                    "author": "satya164",
                    "body": "> how React's functional components differ from traditional functional programming components\n\nReact docs only refer to these as \"function\" components, not \"functional\". React borrows the concepts from functional programming, but changes the definitions slightly to mean \"input\" and \"output\". I don't think it's meant to follow functional programming rules verbatim, only borrow ideas.\n\nAs for why, from my understanding, the consumer isn't calling the components, React is calling the components - and when React calls the component, it provides the props, state and context as inputs. Which is equivalent to calling a function where you pass inputs in its arguments, but not exactly the same since components aren't regular functions. You can't call a React component (especially one containg hooks) directly and expect it to behave like a function - it'll throw an error instead of returning results.\n\nEither way, my response is based on how React team and docs define it. And I provide the source to back it up. You can disagree with React team, but it doesn't mean what I said is \"wrong\".",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731436336.0,
                    "parent_id": "t1_lws8yr7",
                    "link_id": "t3_1gphxp3",
                    "permalink": "/r/reactjs/comments/1gphxp3/can_pure_functional_components_have_state/lwsdfda/"
                }
            ]
        },
        {
            "id": "1gphiwp",
            "title": "React and FormData",
            "author": "rwieruch",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731406322.0,
            "url": "https://www.robinwieruch.de/react-form-data/",
            "permalink": "/r/reactjs/comments/1gphiwp/react_and_formdata/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwq7qg7",
                    "author": "rwieruch",
                    "body": "FormData is certainly not new in JS nor its usage in React ... and quite a few people on [LinkedIn](https://www.linkedin.com/posts/robin-wieruch-971933a6_react-19-insight-dealing-with-formdata-activity-7257417219930746881-hAe0?utm_source=share&utm_medium=member_desktop) have reminded me of this without reading the whole post 😄\n\nThe difference with React 19 is that the FormData API will become more important than ever, especially since Server Actions mean we'll be handling FormData directly on the server side. Suddenly we are on the receiving side of it!\n\nHere I want to walk you through how I extract, type, and validate form data server-side. I hope it's helpful for anyone diving into React 19 and Server Actions!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731406684.0,
                    "parent_id": "t3_1gphiwp",
                    "link_id": "t3_1gphiwp",
                    "permalink": "/r/reactjs/comments/1gphiwp/react_and_formdata/lwq7qg7/"
                }
            ]
        },
        {
            "id": "1gphcgr",
            "title": "One big component vs multiple smaller components",
            "author": "Fysco",
            "score": 21,
            "upvotes": 21,
            "downvotes": 0,
            "num_comments": 24,
            "created_utc": 1731405545.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/",
            "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/",
            "selftext": "I am about to build a pretty simple web page that has plenty of content sections with small differences. You know the ones that have a picture on the left, title + text on the right. The next section has the title above, CTA button added... but not much different.\n\nAbout 4 or 5 of these pretty similar sections. Now I usually don't like the idea of \"THE ONE BIG COMPONENT THAT HAS IT ALL\" but I'm starting to wonder about splitting all these similar sections into 4 or 5 separate components. That also doesn't seem great.\n\nAny thoughts?",
            "comments": [
                {
                    "id": "lwq76wn",
                    "author": "notAnotherJSDev",
                    "body": "Remember that you’re coding so the next person understands what’s going on, which is probably going to be you in a few months.\n\nGenerally speaking, splitting things into components is the right way to go about it",
                    "score": 54,
                    "upvotes": 54,
                    "downvotes": 0,
                    "created_utc": 1731406320.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwq76wn/"
                },
                {
                    "id": "lwq7w71",
                    "author": "accessible_logic",
                    "body": "It's nice to split them if you want to experiment with moving each section around. Additionally if each section has some state, that can be messy if you have all the state for each section in one big component. \n\nIf it's easy for you to find what you need in a big component it doesn't really make sense to split it up though. \n\nGo with your gut feeling instead of what others will tell you to do. Find out why you feel that way if somebody argues otherwise, and find out why they are doing so. I've found more success with finding my own style rather than doing what's \"correct\" according to industry.",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731406790.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwq7w71/"
                },
                {
                    "id": "lwq9kqk",
                    "author": "turtleProphet",
                    "body": "In your shoes I would \n\n1. Try to find a common set of blocks each section is made of (title, content section, etc) -- scope styles and accessibility to these as much as possible\n\n2. Make the 4-5 different sections out of these blocks with composition. Could be 4-5 different wrapper components if all your layouts are super different, or more likely a single layout with different slots for content, image, buttons, etc\n\nIf the slot approach gets too complicated I'd drop it and just make different layouts.\n\nInterested in how you end up solving this, please report back if you don't mind! I find I usually create a mess when abstracting too heavily on the frontend. We get new reqs and the pattern that seemed smart yesterday doesn't work any more.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731407886.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwq9kqk/"
                },
                {
                    "id": "lwqkige",
                    "author": "daftv4der",
                    "body": "Separation of concerns for legibility and maintainability. And also, you don't want component code rerendering from unrelated code in the same component. You'll almost always have better performance splitting things into smaller components.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731414016.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqkige/"
                },
                {
                    "id": "lwrfra3",
                    "author": "Cahnis",
                    "body": "components aren't just about code organization/reutilization, they are also about performance. You want your entire page to re-render every time a user clicks on a checkbox?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731425926.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwrfra3/"
                },
                {
                    "id": "lwqivcr",
                    "author": "TheRealSeeThruHead",
                    "body": "React is truly about composition. \nSo go for the multiple smaller components and if you need a convenient single component then create one by composing smaller components together.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731413216.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqivcr/"
                },
                {
                    "id": "lwq6n39",
                    "author": "SeniorSesameRocker",
                    "body": "You can make a single component with prop based layout. Your component should render the HTML elements so that semantics and a11y best practices are covered.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731405951.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwq6n39/"
                },
                {
                    "id": "lwqkkwy",
                    "author": "rcls0053",
                    "body": "If you are using React: split them apart. When ever state changes in that big component your entire page will reload itself. If you split it up and each of them have their own state, if one of those states changes, it won't affect the entire page.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731414049.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqkkwy/"
                },
                {
                    "id": "lwqia57",
                    "author": "Skeith_yip",
                    "body": "I usually break the page down to smaller component so I can better focus on each one of them.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731412919.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqia57/"
                },
                {
                    "id": "lwqire7",
                    "author": "yksvaan",
                    "body": "It depends. But you can just start by putting adding stuff and worry about breaking it down later. Just make a clear separation between different \"blocks\". Functionally it's pretty much equivalent to having a separate component there so it shouldn't be hard to switch between the two.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731413160.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqire7/"
                },
                {
                    "id": "lwqs0ey",
                    "author": "Axe_Raider",
                    "body": "i've regretted breaking 1 thing into smaller things a few times.\n\ni've regretted NOT breaking 1 thing into smaller things many times.\n\nso have a bias towards breaking things up, particularly if they're already big. the bigger something already is, the bigger the price to add things to it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731417344.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqs0ey/"
                },
                {
                    "id": "lwqtkbe",
                    "author": "MCShoveled",
                    "body": "As a general rule, try to keep your components under 150 LoC. Start thinking about breaking it when you get near 100. This keeps components small and easier to read/understand.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731417980.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwqtkbe/"
                },
                {
                    "id": "lwr0aay",
                    "author": "CatolicQuotes",
                    "body": "imagine you are the boss and components are your enployees and each person has its own responsibility.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731420574.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwr0aay/"
                },
                {
                    "id": "lwr4kjb",
                    "author": "zephyrtr",
                    "body": "I'd love to hear an argument for keeping a 2,000 line component that has closure over everything, instead of several 150 line components that have a name, interface and closure restricted only to their needs.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731422143.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwr4kjb/"
                },
                {
                    "id": "lwr90vm",
                    "author": "SimilarStruggle7696",
                    "body": "Sounds to me like you’ve got a few levels:\n\n1. Your page, made up of sections\n2. Your sections, sharing similarities but not exactly the same\n3. The small components that make up your sections\n\nDon’t be afraid to make small components, compose them into medium-sized components, and then compose those medium sized components into larger components! It will only help you in the long run. If you make a component for the title, for example, you could reuse it for the top and side of two different section components and rely on a wrapper div to determine how it lays out in relation to its sibling elements. Every case is different, but you might find that this makes your 4-5 section components pretty simple and without much duplication of logic or styling.\n\nPersonally I find that any time I write the same line of template code it helps to abstract it into a component because I’ll inevitably go back and modify something and then I only edit it once vs having to triple check that I’ve made the change everywhere it would be applicable.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731423699.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwr90vm/"
                },
                {
                    "id": "lwrn89f",
                    "author": "tresorama",
                    "body": "Usually I have one main component for each page that render only sub components, one for each section .\nSo when I open a page file I look at the main component and understand which section the page has .\nAt the end of the day the only thing that matter is being able to understand what going on , so split component until you are satisfied",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731428294.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwrn89f/"
                },
                {
                    "id": "lwst4er",
                    "author": "chjacobsen",
                    "body": "This is personal preference to some extent.\n\nThere are cases of too little splitting (2000 line monster components) and too much splitting (traversing a five level deep hierarchy to figure out where you put your actual logic), but inbetween those, there's a number of acceptable ways to do it.\n\nPersonally, I like to start with one or a couple of components, and as they grow, I break off parts into new components to keep things manageable. That's not the only way to do it though, and you'll have to find what works for you.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731441120.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwst4er/"
                },
                {
                    "id": "lwtshcm",
                    "author": "jordanddisch",
                    "body": "What I like to do in this situation is have a folder for the component and inside the file smaller abstractions for it. The most likely scenario is you won’t need to reuse those bits in other parts of the app, hence keeping it in the same folder. So one big component made of different smaller components.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731452464.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwtshcm/"
                },
                {
                    "id": "lwvte1d",
                    "author": "horizon_games",
                    "body": "Besides the performance related to React I think we generally tend to over-componentize things nowadays. Especially when a lot aren't being reused, and passing props can be tedious and overdone. Really depends on the complexity and breadth of the app, but too many cases are fragmented *just because*",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731482090.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwvte1d/"
                },
                {
                    "id": "lwvvn61",
                    "author": "ziggyjosh16",
                    "body": "Speaking from experience: Use the map function to render repeated built-ins with data.\n\nDo not try to make \"functional\" components for similar renders; you will end up refactoring.\n\nThink of components as independent parts of your webpage. \n\nThings that have unpredictable behavior or rely on data fetches are best as components with error handling. \n\nSections of a page with info that may be edited frequently over time are best as components.\n\nSections of a page with unique css styling are more easily managed as a component.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731483536.0,
                    "parent_id": "t3_1gphcgr",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwvvn61/"
                },
                {
                    "id": "lwr0p2k",
                    "author": "billybobjobo",
                    "body": "I think your first principle is the best possible one but it doesn’t always lead to componentization as a rule of thumb—i think it’s a balance! (Im guessing to the choir with you—I’m more talking to OP)\n\nI actually like inlining one off patterns for this same reason—to better tell the story of my code to the next author.\n\nUp to some tasteful threshold, Inlining indicates a concern is local (safe to edit without having to do a much deeper audit) and reduces context switching fatigue and brain RAM.  Monoliths are hard to read. Lots of premature abstractions are hard to read. \n\nBut your main point is the most important one: use patterns to tell the story of your thinking—rather than follow some rote “best practices.”\n\nI say this all having JUST refactored a juniors code to make it one big component instead of a lot of little components. They had the wrong abstraction and it was hard to read and think about.  The story was better told this way.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731420727.0,
                    "parent_id": "t1_lwq76wn",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwr0p2k/"
                },
                {
                    "id": "lws7k6u",
                    "author": "SwiftOneSpeaks",
                    "body": "I agree with your point fully, but I think the OP was asking a slightly different question.\n\nFrom what I understand of this situation, the OP is saying turning the big component into repeated uses of another component with a bunch of params is probably a bad abstraction. You may be thinking the same solution as I am, but I don't think the OP has considered it.\n\nOP, if the big component is big enough to make it harder to maintain, and repeated calls to small component with different params is a bad abstraction, those are both losing options.  If so, you can also break the big component into smaller, fairly but not quite repetitive components.  \n\nObviously a DRY solution is great if you can get a good abstraction, but some problems aren't quite repeating themselves and aren't different because of a common or repeatable logic.\n\nIn that case, leave it repetitive.  If the size alone is adding complexity, break it down into separate named components that look similar, and toss in a comment saying why you didn't abstract it.  Some future coder (maybe you) might abstract it when a good abstraction emerges from use, or maybe it never will but people will understand why.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731434544.0,
                    "parent_id": "t1_lwq76wn",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lws7k6u/"
                },
                {
                    "id": "lwwh7ln",
                    "author": "Py33e",
                    "body": "Totally agree with the state management in the big component, splitting it into smaller components name them easier to write unit test as well.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731497625.0,
                    "parent_id": "t1_lwq7w71",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwwh7ln/"
                },
                {
                    "id": "lwrwjp5",
                    "author": "albino_kenyan",
                    "body": "i agree. by default i would say put everything into one big component, except: 1) if only part of view needs to be rerendered after state changes 2) if smaller pieces need to be reused (either in this app or in other apps) 3) at a certain it just gets too big and you need to break it up in order to refactor it to simplify things, esp if multiple devs need to edit the same file.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731431176.0,
                    "parent_id": "t1_lwqkkwy",
                    "link_id": "t3_1gphcgr",
                    "permalink": "/r/reactjs/comments/1gphcgr/one_big_component_vs_multiple_smaller_components/lwrwjp5/"
                }
            ]
        },
        {
            "id": "1gpghsz",
            "title": "Form Builder",
            "author": "bLanK993",
            "score": 9,
            "upvotes": 9,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731401584.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpghsz/form_builder/",
            "permalink": "/r/reactjs/comments/1gpghsz/form_builder/",
            "selftext": "Hello frens, A few weeks back I saw this website called [ShadCN Form Builder](https://shadcn-form-build.vercel.app/) and wanted to build one myself. As the name suggests you can basically build a form using a GUI and it'll generate a code which you can copy paste. So I started making it and midway through I realised, I could make it a bit different than how the other person has done it, so, I chose a different UI and also decided to build it for any framework or library. Although, right now it is just based on react and some react related libraries. But in the future I plan to make it for more react libraries and also other frameworks. Obviously I'll need help from others as well. But for now, I just wanted to share it with yall and get your opinions on the same.\n\n[Link to Github](https://github.com/realbLanK993/forms-builder)\n\n[Link to website](https://realblank993.github.io/forms-builder/)\n\n[Video Demo](https://vimeo.com/1028731034)\n\nPS: I am not able to attach a demo video here so I have attached a link for the same above",
            "comments": [
                {
                    "id": "lwtyktr",
                    "author": "b_redditer",
                    "body": "That's really cool dude, \nLook into having some predefined layout or perhaps customisable ones where one can just drag things. Really cool project\n\nNoticed that password input doesn't have eye reveal thingy. Many little things including this. Would love to contribute. You accepting contributions?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731454591.0,
                    "parent_id": "t3_1gpghsz",
                    "link_id": "t3_1gpghsz",
                    "permalink": "/r/reactjs/comments/1gpghsz/form_builder/lwtyktr/"
                },
                {
                    "id": "lwuksk6",
                    "author": "bLanK993",
                    "body": "Thank you. Yes I am bringing in predefined templates. I haven't done drag and drop yet but you can still move the elements using the up and down arrow buttons on the right.\n\nYes the eye reveal totally went over my head😅. I'll implement it. Yes I am accepting contributions. It'll be really helpful.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731462411.0,
                    "parent_id": "t1_lwtyktr",
                    "link_id": "t3_1gpghsz",
                    "permalink": "/r/reactjs/comments/1gpghsz/form_builder/lwuksk6/"
                }
            ]
        },
        {
            "id": "1gpef1k",
            "title": "Is it worth combining Mantine with Tailwind for a Next.js app?",
            "author": "RealScience464",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731392333.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpef1k/is_it_worth_combining_mantine_with_tailwind_for_a/",
            "permalink": "/r/reactjs/comments/1gpef1k/is_it_worth_combining_mantine_with_tailwind_for_a/",
            "selftext": "Hey folks! 👋\n\nI'm diving into a new project and loving the dx with Mantine. However, I've noticed a few missing components that I'd need to create from scratch, and I think Tailwind would be perfect to fill those gaps. Has anyone here had success combining Mantine with Tailwind? Any advice on potential conflicts or tips for smooth integration?\n\nOn top of that, I’m a fan of the nav bar from Shadcn and would love to work it into the project. Would Mantine + Tailwind + Shadcn be a compatible combo, or am I asking for trouble?\n\nLastly, is Mantine fully compatible with Next.js's app router? Last time I tried, it felt a bit buggy, and I’m curious if others have had similar experiences or found workarounds.\n\nAppreciate any insights!",
            "comments": [
                {
                    "id": "lwv5ytd",
                    "author": "Minute_Abalone5058",
                    "body": "Yes, I start my projects with Mantine UI and Tailwind CSS, as these two work exceptionally well together. Here are some amazing features:\n\n# Classnames with Tailwind\n\nAlmost all Mantine UI components expose a `classNames` prop that allows you to customize the inner parts of the components. Without Tailwind, you would need to predefine styles in separate `.css` files or create dynamic class names with a CSS-in-JS toolkit. However, with Tailwind, it becomes as simple as this:\n\n    <Button \n      className=\"flex flex-row w-full group\" \n      size=\"sm\" \n      variant=\"subtle\" \n      color={isCurrent ? \"black\" : \"dark.6\"} \n      classNames={{ \n        inner: cx(!isCurrent && \"!font-normal\"), \n        label: \"flex-1\", \n      }}\n    />\n\n# Dark Mode\n\nBoth Mantine UI and Tailwind CSS provide built-in dark mode support, making it incredibly easy to combine them.\n\n    import type { Config } from \"tailwindcss\"; \n    \n    const config: Config = { \n      darkMode: ['class', '[data-mantine-color-scheme=\"dark\"]'], // <- Just one line here.\n    };\n\nAnd there are also some unexplored areas, such as how to unify the color palette and size palettes.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731470245.0,
                    "parent_id": "t3_1gpef1k",
                    "link_id": "t3_1gpef1k",
                    "permalink": "/r/reactjs/comments/1gpef1k/is_it_worth_combining_mantine_with_tailwind_for_a/lwv5ytd/"
                }
            ]
        },
        {
            "id": "1gpdqns",
            "title": "[TS React] React.InputHTMLAttributes has number included in the value's type which is not allowing to read the .length of the value",
            "author": "sjns19",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731389649.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpdqns/ts_react_reactinputhtmlattributes_has_number/",
            "permalink": "/r/reactjs/comments/1gpdqns/ts_react_reactinputhtmlattributes_has_number/",
            "selftext": "\\[Edit\\] Solved by forcing value to be string in a following way\n\n    inputAttributes: {\n        value?: string\n    } & React.InputHTMLAttributes<HTMLInputElement>\n\n\n\nI have the following type\n\n    export type DynamicInputAttributes = {\n        label: string,\n        maxLen?: number,\n        test?: string,\n        inputAttributes: React.InputHTMLAttributes<HTMLInputElement>\n    };\n\nThis is a type for the input data coming from the backend API which I'm using to render the input fields. The inputAttributes props exactly have the HTML input attributes like name, value, id, type etc...\n\nSome of the input fields come with default value from the API like\n\n    inputAttributes: {\n        value: 'Some value'\n    }\n\nand I need to read the length of this value while rendering the input fields\n\n    const defaultValue = inputAttributes.value ?? '';\n    const valueLen = defaultValue.length;\n\nHowever, I'm not being able to read the .length of it, TS throws the following error\n\n    Property 'length' does not exist on type 'string | number | readonly string[]'.\n      Property 'length' does not exist on type 'number'.\n\nI checked React's index.d.ts and figured React.InputHTMLAttributes has the following\n\n    interface InputHTMLAttributes<T> extends HTMLAttributes<T> {\n            ...\n            value?: string | readonly string[] | number | undefined;\n    }\n\nwhich is why I'm getting this error.\n\nThe value should've been string if I'm not wrong but I think they have it defined this way for a reason. How can I force it to be a string or is there a better type provided by React as a replacement for InputHTMLAttributes?",
            "comments": [
                {
                    "id": "lwpqbvy",
                    "author": "brzzzah",
                    "body": "`Property 'length' does not exist on type 'number'`\n\nIs the error to focus on; since value can be any one of `string`, `number`, `string[]`\n\n`value` cannot have any properties that are not shared with the other possible types (numbers do not have a length property).\n\nSo I guess there are two options, you could adjust your type definition to only accept strings for the value, or you could coerce the `value` into a string.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731394954.0,
                    "parent_id": "t3_1gpdqns",
                    "link_id": "t3_1gpdqns",
                    "permalink": "/r/reactjs/comments/1gpdqns/ts_react_reactinputhtmlattributes_has_number/lwpqbvy/"
                },
                {
                    "id": "lwpt0ss",
                    "author": "sjns19",
                    "body": "Thanks. I solved it by adding an extra value prop with a type of string and combining it with the attributes. Kinda feel stupid that I didn't come up with this idea earlier.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731396660.0,
                    "parent_id": "t1_lwpqbvy",
                    "link_id": "t3_1gpdqns",
                    "permalink": "/r/reactjs/comments/1gpdqns/ts_react_reactinputhtmlattributes_has_number/lwpt0ss/"
                }
            ]
        },
        {
            "id": "1gpc8vf",
            "title": "TanStack query useQuery on form Submission",
            "author": "Frosty_Ideal_7748",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 17,
            "created_utc": 1731384506.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/",
            "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/",
            "selftext": "useQuery on a from submission? without adding a state for the form values? \n\n  ",
            "comments": [
                {
                    "id": "lwpdwz4",
                    "author": "lightfarming",
                    "body": "useMutation is for mutations (form submissions), not useQuery. useQuery is for data fetches only.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731388058.0,
                    "parent_id": "t3_1gpc8vf",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwpdwz4/"
                },
                {
                    "id": "lwph63u",
                    "author": "CarousalAnimal",
                    "body": "What exactly are you trying to accomplish when you submit the form? I need a little more context to be able to help.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731389712.0,
                    "parent_id": "t3_1gpc8vf",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwph63u/"
                },
                {
                    "id": "lwq20r1",
                    "author": "svish",
                    "body": "You say you want the data in two places.\n\nUseQuery needs to know the input parameters to make the correct query and query key, so the save data is available in both places, i.e. you need shared state.\n\nUseMutation needs to store the data in shared state to make the return data available in both places.\n\nYou will need to add shared state in both cases.\n\nIn our case, we started with useQuery, but found it very awkward to work with together with a form, so we switched to useMutation instead. The mutation function is still doing a GET request, but it's easier and less awkward to deal with the response.\n\nWe have the mutation in a common parent component, and simply pass the response data down to the components that need it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731402762.0,
                    "parent_id": "t3_1gpc8vf",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwq20r1/"
                },
                {
                    "id": "lwpf6q3",
                    "author": "Character_Status8351",
                    "body": "Hmm I’m only fetching data, and mutations doesn’t allow data sharing across components",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731388692.0,
                    "parent_id": "t1_lwpdwz4",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwpf6q3/"
                },
                {
                    "id": "lwq1sg3",
                    "author": "Tinkuuu",
                    "body": "Hey, what does mutation do differently?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731402601.0,
                    "parent_id": "t1_lwpdwz4",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwq1sg3/"
                },
                {
                    "id": "lwpiw2g",
                    "author": "Character_Status8351",
                    "body": "1)Get some data based on input parameters \n2) render response back.. this would renders in two tables \nOne table will just be two view \nThe other will be to render out a table filled w btns each btn will change its text, change an input field and fetch data again with changed input",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731390639.0,
                    "parent_id": "t1_lwph63u",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwpiw2g/"
                },
                {
                    "id": "lwrwa6f",
                    "author": "Character_Status8351",
                    "body": "Hmm I like how this sounds 🤔 I will also need the from values in results component to call mutate again. So should I just have the react hook form and mutate in a common parent component then Form and results as children in there?\n\nmy parent component is async . Should I warp these two in a new component to handle all the data transfers. \n\nAsync function parent () { \n\n Return \n<Form/> \n<Results />",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731431093.0,
                    "parent_id": "t1_lwq20r1",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwrwa6f/"
                },
                {
                    "id": "lwplia0",
                    "author": "lightfarming",
                    "body": "is this like a search bar or something? for something like search, i usually would make it a controlled component, and use useQuery’s “refetch” in a useEffect that watches the search value. i’d debounce the refetch though.\n\ncan’t really do the refetch in the onchange or onsubmit, because the form state won’t have updated yet, meaning the query won’t have updated yet.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731392098.0,
                    "parent_id": "t1_lwpf6q3",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwplia0/"
                },
                {
                    "id": "lwrbisb",
                    "author": "lightfarming",
                    "body": "you call it imperatively instead of declaratively, so you can call ot in a submit or other handler. it has onsuccess, onerror etc handlers, allowing for cache updates etc. go check out the docs.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731424543.0,
                    "parent_id": "t1_lwq1sg3",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwrbisb/"
                },
                {
                    "id": "lwsruj4",
                    "author": "svish",
                    "body": "Try it out, see how it works.\n\nPass an `onSuccess(result)` callback to the Form, store the result in state and pass the state down to the Results.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731440736.0,
                    "parent_id": "t1_lwrwa6f",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwsruj4/"
                },
                {
                    "id": "lwplnoh",
                    "author": "Character_Status8351",
                    "body": "1)Get some data based on input parameters 2) render response back.. this would renders in two tables One table will just be two view The other will be to render out a table filled w btns each btn will change its text, change an input field and fetch data again with changed input",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731392184.0,
                    "parent_id": "t1_lwplia0",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwplnoh/"
                },
                {
                    "id": "lwu43k7",
                    "author": "Character_Status8351",
                    "body": "Is mutation cached? I know useQuery is but I don’t want want to make a network request if my form data doesn’t change",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731456531.0,
                    "parent_id": "t1_lwsruj4",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwu43k7/"
                },
                {
                    "id": "lwue510",
                    "author": "svish",
                    "body": "No, but you could use `queryClient.fetchQuery` in the mutation",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731460055.0,
                    "parent_id": "t1_lwu43k7",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwue510/"
                },
                {
                    "id": "lwug5u1",
                    "author": "Character_Status8351",
                    "body": "Would that work for my situation? I just want to catch the response back if my form values don’t change",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731460776.0,
                    "parent_id": "t1_lwue510",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwug5u1/"
                },
                {
                    "id": "lwugbux",
                    "author": "svish",
                    "body": "Try it out",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731460835.0,
                    "parent_id": "t1_lwug5u1",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwugbux/"
                },
                {
                    "id": "lwvbsay",
                    "author": "Frosty_Ideal_7748",
                    "body": "I think its working, what do you recommend for the cache value and stale time? users will submit and see data but data wont change ever unless they submit a different parameter",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731472763.0,
                    "parent_id": "t1_lwugbux",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lwvbsay/"
                },
                {
                    "id": "lww05u6",
                    "author": "svish",
                    "body": "Would recommend no cache at all",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486512.0,
                    "parent_id": "t1_lwvbsay",
                    "link_id": "t3_1gpc8vf",
                    "permalink": "/r/reactjs/comments/1gpc8vf/tanstack_query_usequery_on_form_submission/lww05u6/"
                }
            ]
        },
        {
            "id": "1gpbszh",
            "title": "JS is more in-demand than TypeScript? So should I Use that for my App?",
            "author": "sercetuser",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 28,
            "created_utc": 1731383059.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/",
            "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/",
            "selftext": "Im making my app using react and expo. I am debating on whether to use typescript of Javascript. I have a lot more experience with Javascript, however, I heard that typescript is really beloved in the community for debugging. My biggest gripe is that JS is still the most popular programming language and used by basically every company. So I think having more Javascript projects on my resume will look better than typescript. So should I use JS or TS? Is TS really all that better?",
            "comments": [
                {
                    "id": "lwp3w9g",
                    "author": "openfire3",
                    "body": "Typescript is just a superset of JavaScript. If you know JS, using Typescript shouldn’t be hard",
                    "score": 13,
                    "upvotes": 13,
                    "downvotes": 0,
                    "created_utc": 1731383556.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp3w9g/"
                },
                {
                    "id": "lwp3wlk",
                    "author": "nabrok",
                    "body": "If you know typescript you know javascript.  If you know javascript you don't necesarily know typescript.\n\nSo just use typescript.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731383560.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp3wlk/"
                },
                {
                    "id": "lwp3601",
                    "author": "Slight-Rent-883",
                    "body": "TS is more in demand actually",
                    "score": 17,
                    "upvotes": 17,
                    "downvotes": 0,
                    "created_utc": 1731383256.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp3601/"
                },
                {
                    "id": "lwp3k9n",
                    "author": "udbasil",
                    "body": "Typed Javascript is just freaking beautiful and I ain't going back to plain Javascript. \n\nBut you do realize the only difference between typescript and Javascript is just Javascript literally being typed. So you are still using Javascript logic and coding at the end of the day so you aren't switching languages.  As for job opportunities ...well I can't speak for that.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731383419.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp3k9n/"
                },
                {
                    "id": "lwp42es",
                    "author": "00PT",
                    "body": "TypeScript is an extension of JavaScript. If you master TypeScript, working in JavaScript is just inconvenient, but still entirely comprehensible. Meanwhile, if you master JavaScript, TypeScript has actual new concepts to learn and more restrictions you may have no experience dealing with.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731383625.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp42es/"
                },
                {
                    "id": "lwp6ovh",
                    "author": "zephyrtr",
                    "body": "Youve gotta cite some sources here bud. And you gotta be sure who's included in these statistics and if these companies are your peers or not.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731384735.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp6ovh/"
                },
                {
                    "id": "lwp77av",
                    "author": "TheTvShowJunkie",
                    "body": "Typescript is just a superset of JS it makes your js code easy to debug and there are few concepts which you need to learn if you haven't worked with any typed languages otherwise it is super easy to use and makes your developer experience 10x better",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731384954.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp77av/"
                },
                {
                    "id": "lwp7otl",
                    "author": "Brilla-Bose",
                    "body": "never worked in a javascript only project for the last 4 years. all the projects i worked on written in Typescript\n\nits not about whether there is a demand or not. lack of types could drive you crazy. especially if it written by someone else. as you get more experience you'll appreciate strongly typed language and struct Compilers",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731385166.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp7otl/"
                },
                {
                    "id": "lwp9lru",
                    "author": "landmark_86",
                    "body": "As previously mentioned, Typescript IS JavaScript, just with extra features.\n\nIt's a huge benefit when you have a large application or you're working on a team. As to whether you should use it in your application, can't really make that call for you.\n\nBut I think having Typescript experience is kind of essential if you want to be marketable as a JavaScript dev in 2024.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731386023.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp9lru/"
                },
                {
                    "id": "lwpdjja",
                    "author": "parcelcraft",
                    "body": "The answer is, it depends.  Using JSDoc with JavaScript will get you a lot of type safety.  Some substantial projects have switched to Javascript after being written in Typescript...but these are very few edge cases.  Typescript can introduce a lot of complexity in your code. Still, after developing it for 20 years, even if a project must be submitted in Javascript, I'll write it in Typescript first, then compile it to Javascript (indeed, almost every project must be compiled to JavaScript anyway: it's the primary programming language your browser understands).  I appreciate the type safety and code hinting that Typescript provides.  When I started using Typescript, I was frustrated at the code clutter and extra error reporting Typescript code gave me...but it's the extra error reporting that makes me a Fan: it makes your code less prone to errors, because you've already seen the red squiggly lines under your code.   This is not a one-or-the-other choice.  I write in both all the time:  Do both.  My preference is to code in Typescript--the learning curve can be a bit steep, but it pays off in the long run, and you may start to see the beauty (rather than the frustration of it) over time as you learn.   If you're just beginning to learn how to program, start with Javascript and then get fancy with Typescript once you have completed some hard-earned foundational learning.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731387873.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpdjja/"
                },
                {
                    "id": "lwp79ok",
                    "author": "Skeith_yip",
                    "body": "If you minus off the jQuery folks, I’m pretty sure most decent devs can’t go without typescript. \n\nUnless you’re doing a solo project, if not I feel you get a lot of benefits from typescript. Most popular libraries also come with typescript. A lot easier to work to with.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731384983.0,
                    "parent_id": "t3_1gpbszh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp79ok/"
                },
                {
                    "id": "lwp5s4x",
                    "author": "IBJON",
                    "body": "Other way around. As a super set of JS, TS uses a lot of concepts that aren't present in JS. Most them are easy enough to learn, but there's still a learning curve ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731384347.0,
                    "parent_id": "t1_lwp3w9g",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp5s4x/"
                },
                {
                    "id": "lwp6w80",
                    "author": "sercetuser",
                    "body": "Wouldnt having to statically declare the type constantly be more inconvenient?",
                    "score": -5,
                    "upvotes": -5,
                    "downvotes": 0,
                    "created_utc": 1731384823.0,
                    "parent_id": "t1_lwp42es",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp6w80/"
                },
                {
                    "id": "lwp7be3",
                    "author": "sercetuser",
                    "body": "https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/\n\nThere are more on google. This is just the first one i found",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731385003.0,
                    "parent_id": "t1_lwp6ovh",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp7be3/"
                },
                {
                    "id": "lwp8tq7",
                    "author": "None",
                    "body": "[deleted]",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731385671.0,
                    "parent_id": "t1_lwp7otl",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp8tq7/"
                },
                {
                    "id": "lwpef8a",
                    "author": "sercetuser",
                    "body": ">Some substantial projects have switched to Javascript after being written in Typescript...but these are very few edge cases.\n\nSurprised to hear this after getting bombarded with TS love from a couple different subreddits. Were these projects that switched back to JS from any notable companies? Also, do you happen to know why they switched back?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731388311.0,
                    "parent_id": "t1_lwpdjja",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpef8a/"
                },
                {
                    "id": "lwp6fah",
                    "author": "openfire3",
                    "body": "Except types, what are those concepts?",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731384620.0,
                    "parent_id": "t1_lwp5s4x",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp6fah/"
                },
                {
                    "id": "lwp7n7f",
                    "author": "00PT",
                    "body": "You don't have to declare the types constantly. Some JavaScript code can literally be copied into a TS file with 0 changes and not have any errors, you'll just be able to better understand what you're doing.\n\nTypeScript also has all kinds of inferences and utilities to help you out. And you can alias complex types with intuitive names if you want.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731385146.0,
                    "parent_id": "t1_lwp6w80",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp7n7f/"
                },
                {
                    "id": "lwp9b7p",
                    "author": "octocode",
                    "body": "have you ever had to make a small change in a large codebase with absolutely zero idea of what it would break?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731385890.0,
                    "parent_id": "t1_lwp6w80",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp9b7p/"
                },
                {
                    "id": "lwpeqxp",
                    "author": "IBJON",
                    "body": "Having errors because JS coerced a variable into the wrong type is far more inconvenient. ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731388472.0,
                    "parent_id": "t1_lwp6w80",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpeqxp/"
                },
                {
                    "id": "lwpcn8w",
                    "author": "zephyrtr",
                    "body": "This link isn't saying where it gets these numbers from. Is this just any repo on GitHub? Is it based on posted job openings? If yes, what's the salary floor?\n\nHonestly any good paying JS programming job I've personally seen also lists TS and the actual expectation is you either know TS already or will learn shortly after being hired.\n\nThere is in my mind zero reason to not use TS unless you, for some reason, intend to slap `any` on everything.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731387441.0,
                    "parent_id": "t1_lwp7be3",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpcn8w/"
                },
                {
                    "id": "lwpsfel",
                    "author": "Brilla-Bose",
                    "body": "seems like you're trying to write a comment to the post but instead replying my comment?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731396274.0,
                    "parent_id": "t1_lwp8tq7",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpsfel/"
                },
                {
                    "id": "lwpfq0p",
                    "author": "parcelcraft",
                    "body": "Svelte is a large project that did this.  See [https://gomakethings.com/ditching-typescript-for-javascript/](https://gomakethings.com/ditching-typescript-for-javascript/)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731388963.0,
                    "parent_id": "t1_lwpef8a",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpfq0p/"
                },
                {
                    "id": "lwp9s6n",
                    "author": "adobeblack",
                    "body": "Uhh, if you think typescript is just sprinkling some `type` declarations in, you should probably just read the docs???\n\nhttps://www.typescriptlang.org/docs/\n\nThe answer to your question is \"everything else\" 🤣",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731386105.0,
                    "parent_id": "t1_lwp6fah",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp9s6n/"
                },
                {
                    "id": "lwp8f2r",
                    "author": "IBJON",
                    "body": "Interfaces, generics, enums, decorators, directives, and a bunch of other things that I don't use regularly enough to list off the top of my head. \n\n\nEven just using types as an example, there's a lot more than just declaring your variables or function definition - you have type unions/intersections, conditional typing, using the keyof operator for type definitions, etc. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731385490.0,
                    "parent_id": "t1_lwp6fah",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp8f2r/"
                },
                {
                    "id": "lwpfzsq",
                    "author": "parcelcraft",
                    "body": "But I'll add that they had some very specific reasons for this choice. Svelte is an outlier here. Most larger projects have migrated from Javascript to Typescript over the last decade.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731389102.0,
                    "parent_id": "t1_lwpfq0p",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpfzsq/"
                },
                {
                    "id": "lwpav7o",
                    "author": "openfire3",
                    "body": "Yes there’s much to it in an advanced usage but from the docs: https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html\n\n“TypeScript stands in an unusual relationship to JavaScript. TypeScript offers all of JavaScript’s features, and an additional layer on top of these: TypeScript’s type system.”",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731386604.0,
                    "parent_id": "t1_lwp9s6n",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwpav7o/"
                },
                {
                    "id": "lwp9c73",
                    "author": "openfire3",
                    "body": "Yeah but interfaces, generics and enums are parts of the type system. Decorators and directives aren’t used in a day to day usage of React",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731385902.0,
                    "parent_id": "t1_lwp8f2r",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp9c73/"
                },
                {
                    "id": "lwp9ncw",
                    "author": "openfire3",
                    "body": "Compared to something like CoffeeScript, the code is not that much different",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731386043.0,
                    "parent_id": "t1_lwp8f2r",
                    "link_id": "t3_1gpbszh",
                    "permalink": "/r/reactjs/comments/1gpbszh/js_is_more_indemand_than_typescript_so_should_i/lwp9ncw/"
                }
            ]
        },
        {
            "id": "1gpaj3b",
            "title": "Daisy UI vs Shadcn UI?? Which one to choose in 2025",
            "author": "HelicopterSignal2366",
            "score": 27,
            "upvotes": 27,
            "downvotes": 0,
            "num_comments": 64,
            "created_utc": 1731379016.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/",
            "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/",
            "selftext": "Welcome Guys, \n\nI am kind of pretty good in `CSS` but I never liked `Tailwind` (bcz of it's inline style). As while learning CSS we avoid inline css and used external css file ri8. But now Tailwind seems the same inline one.   \nBut now we have `Shadcn and Daisy UI` which are popular and both are using `Tailwind CSS`. I really wanted to work with `Shadcn` & sometimes Daisy.   \n  \nGuys if you have free time could you please help me   \n*1: why Shadcn and daisy are popular*   \n*2: best way to learn it*   \n*3: Any tips and tricks you find out while working which makes ur life easy now &*   \n*4: Code or components you used or copy almost every time form this 2 lib.* \n\nPlease share your experience and I am excited to see no 3 & 4 answers. \n\nThank for reading till here. You are awesome 🍀 ",
            "comments": [
                {
                    "id": "lwoxm16",
                    "author": "photostu",
                    "body": "Shadcn until everything looks like shadcn",
                    "score": 76,
                    "upvotes": 76,
                    "downvotes": 0,
                    "created_utc": 1731381077.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwoxm16/"
                },
                {
                    "id": "lwpf1l3",
                    "author": "nader-eloshaiker",
                    "body": "I’ve used DaisyUI and Radix-UI (shadcn is a wrapper for radix), both are really great but have different use cases. Daisy is very opinionated on styling where as radix requires manual styling. Daisy has fixed variants where radix requires you to build variants. DaisyUI is a css only lib and so you have to build your own functionality into the elements where as radix gives you event hooks and attributes to manipulate. Radix has accessibility built in. Here is my take, use DaisyUI when there is no design or style requirements and no odd behaviour to build in the components. It’s easy it fast and requires no effort for variants. Use Radix/shadcn if you have a design system to adhere to, accessibility requirements and complex behaviours.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731388620.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpf1l3/"
                },
                {
                    "id": "lwp4si2",
                    "author": "openfire3",
                    "body": "Not really an answer to your question but give PandaCSS a try. It will output utility classes just like Tailwind but you won’t have to use a long string of class names. For something similar as Shadcn, you can check ParkUi which uses Ark instead of Radix and PandaCSS instead of Tailwind",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731383929.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwp4si2/"
                },
                {
                    "id": "lwtas5w",
                    "author": "pancomputationalist",
                    "body": "DaisyUI is amazing if you don't want to ship a lot of JavaScript. Works great with server rendered or static pages.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731446812.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwtas5w/"
                },
                {
                    "id": "lwuo3ew",
                    "author": "raf_and",
                    "body": "I've tested tons of ui libraries recently and I always end up using primereact.\n\nI'm not an excellent ui / react developer, so for me is way easier to work with.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731463591.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuo3ew/"
                },
                {
                    "id": "lwptmwn",
                    "author": "kiwiboy94",
                    "body": "I use both Daisy UI and Flowbite. Used Shadcn for cool components like datatable and sonner",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731397066.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwptmwn/"
                },
                {
                    "id": "lwrk2qw",
                    "author": "Bash4195",
                    "body": "Daisy is a nice framework, I used it and liked it quite a bit. But I switched to shad because Daisy just doesn't have enough components and refuses to do anything JavaScript. Shad is also great because of the way it's installed, you can customize everything and still have reusable components from the framework",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731427296.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwrk2qw/"
                },
                {
                    "id": "lwspur5",
                    "author": "kazabodoo",
                    "body": "Daisy UI user here. It’s simple and I like that. Shadcn is nice but I felt I needed a lot more config and in general the components felt bloated",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731440137.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwspur5/"
                },
                {
                    "id": "lwteelz",
                    "author": "Formal-Language7032",
                    "body": "Just took a quick look at Daisy UI but I can't shed the impression that this is basically Bootstrap with extra steps.\n\nNothing wrong with that, I still like Bootstrap, especially v5.3+, but I find it funny that we seem to go full circle again.\n\nPlease do correct me I'm totally wrong here :)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731447979.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwteelz/"
                },
                {
                    "id": "lwtx51u",
                    "author": "Holiday-Temporary507",
                    "body": "Both",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731454079.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwtx51u/"
                },
                {
                    "id": "lwox5il",
                    "author": "Longjumping-Ad1885",
                    "body": "shadcn, because you can generate great ui with v0.dev. It can generate almost production ready using Shadcn components, because it’s highly trained on it",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731380905.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwox5il/"
                },
                {
                    "id": "lwrmiqt",
                    "author": "Laurenz1337",
                    "body": "MUI 🗿",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731428071.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwrmiqt/"
                },
                {
                    "id": "lwq5c03",
                    "author": "cprecius",
                    "body": "If you have a Figma design, then I would use Shadcn due to 100% customizability. If there are no Figma designs, Mantine is my go to.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731405055.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwq5c03/"
                },
                {
                    "id": "lwqdpp6",
                    "author": "Few_Goat6791",
                    "body": "Daisy UI if u don’t want ur site look like the crowds’ site",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731410439.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwqdpp6/"
                },
                {
                    "id": "lwu2evx",
                    "author": "hudsonab123",
                    "body": "I’ve used both and prefer shadcn, but probably will build next project in something completely new because tailwind is getting really annoying to use",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731455937.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwu2evx/"
                },
                {
                    "id": "lx1k0cq",
                    "author": "melokour",
                    "body": "Check out NextUi I have been very much enjoying it, they also use Tailwind under the hood and have very nice components",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731561076.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lx1k0cq/"
                },
                {
                    "id": "lx4twt8",
                    "author": "Pauli444",
                    "body": "I would use DaisyUI for presentational web for examle but if You nees more use interaction, go with something else. Shadcn, mantine, mui, does even matter. Everything has its pros cons. Me personally i would go with Mantine and style it it a little bit so it does not look so generic.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731611997.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lx4twt8/"
                },
                {
                    "id": "lx4wiq1",
                    "author": "Kitchen-Conclusion51",
                    "body": "Radix ui",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731612788.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lx4wiq1/"
                },
                {
                    "id": "lwou4s0",
                    "author": "No_Shame_8895",
                    "body": "Shadcn , daisy ui lack in many things, when using 3rd party Library daisy ui is nightmare",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731379788.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwou4s0/"
                },
                {
                    "id": "lwpgg46",
                    "author": "8isnothing",
                    "body": "Not what you’re asking for but I highly recommend MaterialUI.\nIs it dated? Yes.\nIs it kinda ugly to today’s standards? Yes.\n\nBut it has a lot of components and works well with styled components and alike.\n\nI personally hate Tailwind, can’t see value on it and it feels like swimming against CSS (I know it’s kinda contradictory to recommend CSS-in-JS while saying this but whatever)",
                    "score": -7,
                    "upvotes": -7,
                    "downvotes": 0,
                    "created_utc": 1731389335.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpgg46/"
                },
                {
                    "id": "lwovawi",
                    "author": "Outrageous_Ad_7941",
                    "body": "shadcn due to many reasons :)",
                    "score": -7,
                    "upvotes": -7,
                    "downvotes": 0,
                    "created_utc": 1731380218.0,
                    "parent_id": "t3_1gpaj3b",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwovawi/"
                },
                {
                    "id": "lwp4zxv",
                    "author": "Horror-Back-3210",
                    "body": "I tried shadcn but switched to mantine because shadcn lacked some basic components, for example a text input with an icon inside. I mean sure, you can implement it yourself (which is pretty hacky; google it to see common implementations) but that pretty much defeats the purpose of using a UI lib in the first place.",
                    "score": 40,
                    "upvotes": 40,
                    "downvotes": 0,
                    "created_utc": 1731384016.0,
                    "parent_id": "t1_lwoxm16",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwp4zxv/"
                },
                {
                    "id": "lwpmfhb",
                    "author": "HelicopterSignal2366",
                    "body": "Ok thanks.. I wanted to know about any tips and tricks or your go to code or component",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731392628.0,
                    "parent_id": "t1_lwpf1l3",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpmfhb/"
                },
                {
                    "id": "lwps3d8",
                    "author": "yardeni",
                    "body": "Also stylex lets you write the styles separately, but type safe",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731396062.0,
                    "parent_id": "t1_lwp4si2",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwps3d8/"
                },
                {
                    "id": "lwuxplf",
                    "author": "HelicopterSignal2366",
                    "body": "Any 3 advantages of it over others.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731467035.0,
                    "parent_id": "t1_lwuo3ew",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuxplf/"
                },
                {
                    "id": "lwuxssx",
                    "author": "HelicopterSignal2366",
                    "body": "Ok, FlowBite is something new for me. Could you go little deep in it. Why??",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731467068.0,
                    "parent_id": "t1_lwptmwn",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuxssx/"
                },
                {
                    "id": "lwuxfnj",
                    "author": "HelicopterSignal2366",
                    "body": "LOL, I am using B3 then B4 n now B5 and I love it. I made 50+ websites. and recently I move to pure css only.   \nBut now we have React, Next.js and whenever I see anything it's only TailwindCSS. I am freelancer I dont work. So I don't know is it happening in company also. But now bcz of Taiwlind Shadcn, DaisyUI, Mantine etc.. are all gaining popularity.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731466936.0,
                    "parent_id": "t1_lwteelz",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuxfnj/"
                },
                {
                    "id": "lwuxma6",
                    "author": "HelicopterSignal2366",
                    "body": "Thanks, But Why???? I am asking here bcz I will get the genuine answers else I can online myself.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731467002.0,
                    "parent_id": "t1_lwtx51u",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuxma6/"
                },
                {
                    "id": "lwuwpaa",
                    "author": "HelicopterSignal2366",
                    "body": "Everyone is like Mantine Mantine.. May I know something more about it. Why Mantine in ur own words. Like is there something which is like ur daily go to code type.. Like what u hav find after using a lot which makes it better then others.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731466676.0,
                    "parent_id": "t1_lwq5c03",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuwpaa/"
                },
                {
                    "id": "lwuwzmv",
                    "author": "HelicopterSignal2366",
                    "body": "what about responsiveness and also I find that many components are still not there. Like a repsonsive Navbar which is basics. I knw using Tailwind css we can do it. But if it's alternative of Bootstrap then it should have responsive code.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731466778.0,
                    "parent_id": "t1_lwqdpp6",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuwzmv/"
                },
                {
                    "id": "lwp24h7",
                    "author": "udbasil",
                    "body": "Why and what does it lack?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731382837.0,
                    "parent_id": "t1_lwou4s0",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwp24h7/"
                },
                {
                    "id": "lwpm6og",
                    "author": "HelicopterSignal2366",
                    "body": "could you share the few of them and also why Shadcn. I want few tips and tricks too or your go to code.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731392487.0,
                    "parent_id": "t1_lwou4s0",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpm6og/"
                },
                {
                    "id": "lwpjkg3",
                    "author": "daftv4der",
                    "body": "I also miss CSS-in-JS. I felt faster with that than any other solution I've tried. Tailwind class names are not intuitive so I still keep having to check the docs, cos they'll shorten one class name, but then not do the same for others.\n\nSo you have to learn them off by heart before you can feel like you're moving at a good velocity, in which case I'd rather just use the CSS properties that I already know. \n\nI'm scared to try MUI again after how bad support for it was in Next JS 13. \n\nDo you use Emotion, due to its use in MUI? Or something else?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731391013.0,
                    "parent_id": "t1_lwpgg46",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpjkg3/"
                },
                {
                    "id": "lwpm9rk",
                    "author": "HelicopterSignal2366",
                    "body": "Ok Nice, But if you don't mind. Could you share only top 5 reasons. It will be helpful for many others and me..",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731392536.0,
                    "parent_id": "t1_lwovawi",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpm9rk/"
                },
                {
                    "id": "lwpbgo4",
                    "author": "parcelcraft",
                    "body": "\\^Upvote for Mantine.  I did extensive research on UI components. I found the best mix was tailwind with Mantine.  Mantine for the basics, tailwind for all the customizations.    \n  \nDaisy UI is not quite baked yet.  Just look at their badges component.  The default colors (Black text on Dark Blue!?) are illegible.",
                    "score": 20,
                    "upvotes": 20,
                    "downvotes": 0,
                    "created_utc": 1731386882.0,
                    "parent_id": "t1_lwp4zxv",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpbgo4/"
                },
                {
                    "id": "lwpmt1r",
                    "author": "Gishan",
                    "body": "+1 for Mantine  \n\nThe only minor/medium annoyance is that the Select/Combobox can't deal with numeric ids or even better whole Objects as entries. Everything in my datamodel has numeric ids and so I always have to convert to/from String when I want to use a Select.  \n\nBut otherwise love the core and all the optional controls they offer.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731392850.0,
                    "parent_id": "t1_lwp4zxv",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpmt1r/"
                },
                {
                    "id": "lwpwqo9",
                    "author": "Javier1234559",
                    "body": "I want to try mantie too but i have affair that it will be hard to customize it wirh tailwindcss",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731399107.0,
                    "parent_id": "t1_lwp4zxv",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpwqo9/"
                },
                {
                    "id": "lwpn401",
                    "author": "ORCANZ",
                    "body": "It’s the exact point of shadcn. You get atoms to compose your own molecules/entities.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731393028.0,
                    "parent_id": "t1_lwp4zxv",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpn401/"
                },
                {
                    "id": "lwqg5i5",
                    "author": "k_pizzle",
                    "body": "I’d have to disagree that implementing it yourself is “hacky”",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731411812.0,
                    "parent_id": "t1_lwp4zxv",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwqg5i5/"
                },
                {
                    "id": "lwpncj7",
                    "author": "nader-eloshaiker",
                    "body": "That’s a little tough to answer. I found with Daisy UI that I had to build out a lot of typical functionality in a component that’s not available in a standard HTML elements. I also had to then write lots of tests for that functionality. In the end it started to annoy me. I really liked its integration with tailwind as Daisy UI is really just tail wind classes. I found myself leaning more towards Radix UI because I could then use a more enhance feature set of component libraries rather than build out feature sets. There is some simple theming you can apply if you’re prepared to deal with vanilla styling. But I did find myself spending a bit of time adding variance to all the components. At the end of the day I still preferred doing that then building up functionality. It was just easier.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731393170.0,
                    "parent_id": "t1_lwpmfhb",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpncj7/"
                },
                {
                    "id": "lwuz4q9",
                    "author": "kiwiboy94",
                    "body": "For me I only tried a couple of component libraries so far and if I like it I stick with it. I like the design and also how it can be further customise with taiwind.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731467564.0,
                    "parent_id": "t1_lwuxssx",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwuz4q9/"
                },
                {
                    "id": "lwvwq3r",
                    "author": "Formal-Language7032",
                    "body": "To be honest, I think companies just go with whatever new influx of devs are using. And since these major JS/CSS frameworks are currently highly popular this is what is used for new projects. Personally I like to cherry pick only what will make my work actually better and faster, not just now, but also in the long run in maintenance.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731484231.0,
                    "parent_id": "t1_lwuxfnj",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwvwq3r/"
                },
                {
                    "id": "lwv3vl1",
                    "author": "Holiday-Temporary507",
                    "body": "I use Tailwindcss with both and works well. I like some components in DaisUI and the other components in shadcn like badges. \n\nAlso DaisyUI works with ‘className’ where as in Shadcn, you import the components. \n\nSo it doesnt really collide. I use Shadcn to find things rhat i like. If I dont find one then I use DaisyUI or Tailwindcss :)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731469407.0,
                    "parent_id": "t1_lwuxma6",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwv3vl1/"
                },
                {
                    "id": "lwvu641",
                    "author": "cprecius",
                    "body": "Because it feels like the most completed UI Library at all. Hooks are life savers. Customization is just like others. If not Shadcn, then Mantine definitely.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731482589.0,
                    "parent_id": "t1_lwuwpaa",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwvu641/"
                },
                {
                    "id": "lwp2i0z",
                    "author": "abhijitht007",
                    "body": "Variants of different components, missing basic things like some sort of feedback indicator on buttons etc.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731382987.0,
                    "parent_id": "t1_lwp24h7",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwp2i0z/"
                },
                {
                    "id": "lwpolx3",
                    "author": "No_Shame_8895",
                    "body": "I like the control of shadcn, some find minimal of daisy ui great....",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731393916.0,
                    "parent_id": "t1_lwpm6og",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpolx3/"
                },
                {
                    "id": "lwpoh5w",
                    "author": "No_Shame_8895",
                    "body": "🙂 man you need to try and you got to understand tips and tricks for yourself is created by you only, try before ask , if you got stuck then ask",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731393839.0,
                    "parent_id": "t1_lwpm6og",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpoh5w/"
                },
                {
                    "id": "lwppl3n",
                    "author": "8isnothing",
                    "body": "I think it still doesn’t work well with NextJS. Recently I’ve been using only the `sx` prop to be honest 🙈\n\n\nAbout NextJS:\n\nDisclaimer: I mostly work with private web apps nowadays (meaning SEO and PageSpeed Insights and Google metrics doesn’t affect my tech stack choices.)\n\n\nI don’t use nor like NextJS.\nI created a website with it when it was v12 and the experience was okayish.\n\nStudied a lot of v13 and found out I don’t like it and also don’t like Vercel.\nIdk what the heck they did to get Facebook to officially recommend them.\n\nIMO their premise is just broken, as well as their tech stack and their deliveries. Not trying to make this a hate post but here are my points against it (based on the last time I checked):\n\n- NextJS defaults to ES5 and commonJS, which makes your bundles enormous and less performant than it could/should be.\n\n- They use unreleased APIs from React.\n\n- They sell you the idea that “servers are super fast while client is super slow”. Like, come on, this is 2024. How would a single threaded serverless function running a stripped version of Node with almost no RAM be faster than a basic PC/smartphone, that nowadays have at least 2 cores and 4gb of RAM? That without talking about the constant startup times of these functions. And the absurdly increased and unpredictable costs. It’s really a shameless lie to sell you their product.\n\n- What’s the value of blurring the barrier between front and backend? Coupling both seems like a bad idea from all angles (performance, security and architecture wise).\n\n- They deliver features that they know are broken.\n\n- The toolchain they are building sucks in comparison to competitors (turborepo, Turbopack).\n\n- They sell hydration as a good thing when it only makes matters worse, performance, DX and UX wise (compared to client side).\n\n- They didn’t think twice before polyfilling browser APIs.\n\n- They didn’t think twice before breaking a lot of React libs compatibility (styled-components being one of them)\n\n\n\nSo yeah, I’m not concerned with NextJS. I mostly build SPAs and if I eventually need to build a public facing website I’d go for Astro or NextJS (would need to research in advance) with CSS modules.\n\n\nIMO as far as you can get from vendor lock in and bullshitting marketing, the best.\n\n\nPS. CSS modules are PAINFUL. But, they are better than pure CSS and it’s the closer I could get to CSS-in-JS without a crazy toolchain and broken stuff getting in the way",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731394501.0,
                    "parent_id": "t1_lwpjkg3",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwppl3n/"
                },
                {
                    "id": "lwpmgwn",
                    "author": "HelicopterSignal2366",
                    "body": "May I knw more about Mantine.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731392651.0,
                    "parent_id": "t1_lwpbgo4",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpmgwn/"
                },
                {
                    "id": "lwpub72",
                    "author": "jhirn",
                    "body": "I know for sure it can handle objects. I was passing a nested GraphQL result set straight in there and returning an association’s ID in one of my use cases. Can’t recall off the top of mind but I can look it up in the morning. This was Mantine 7.0",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731397505.0,
                    "parent_id": "t1_lwpmt1r",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpub72/"
                },
                {
                    "id": "lwpyljq",
                    "author": "Horror-Back-3210",
                    "body": "I had the exact same issue up until this morning until I finally figured it out lol. Basically what you have to do is set @layer {@tailwind base} in your globals.css\nThis will help override mantine styling. And more often than not, mantine components consist of nested elements, so make sure you check the styles api for the components and use the classnames prop to add tailwind styling as deep as you need. It works great now, and I'm really enjoying it",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731400375.0,
                    "parent_id": "t1_lwpwqo9",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpyljq/"
                },
                {
                    "id": "lwppag5",
                    "author": "Horror-Back-3210",
                    "body": "I definitely agree with that approach (which is why I picked shadcn to start out with) but shadcn can and does get in the way of customization at times. Try modifying the Input component to add a clickable element on the side (e.g a search button in a searchbar) and see how much you need to rewrite. I feel like if you have to rewrite a major portion of a component you are better off not using that component at all.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731394325.0,
                    "parent_id": "t1_lwpn401",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwppag5/"
                },
                {
                    "id": "lwrqces",
                    "author": "Horror-Back-3210",
                    "body": "```\nimport * as React from \"react\";\n\nimport { cn } from \"@ui/lib/utils\";\nimport { LucideIcon } from \"lucide-react\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  startIcon?: LucideIcon;\n  endIcon?: LucideIcon;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, startIcon, endIcon, ...props }, ref) => {\n    const StartIcon = startIcon;\n    const EndIcon = endIcon;\n\n    return (\n      <div className=\"w-full relative\">\n        {StartIcon && (\n          <div className=\"absolute left-1.5 top-1/2 transform -translate-y-1/2\">\n            <StartIcon size={18} className=\"text-muted-foreground\" />\n          </div>\n        )}\n        <input\n          type={type}\n          className={cn(\n            \"flex h-10 w-full rounded-md border border-input bg-background py-2 px-4 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-0 disabled:cursor-not-allowed disabled:opacity-50\",\n            startIcon ? \"pl-8\" : \"\",\n            endIcon ? \"pr-8\" : \"\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        />\n        {EndIcon && (\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            <EndIcon className=\"text-muted-foreground\" size={18} />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n```",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731429270.0,
                    "parent_id": "t1_lwqg5i5",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwrqces/"
                },
                {
                    "id": "lwpql8h",
                    "author": "daftv4der",
                    "body": "Thanks for clarifying!\n\nI don't disagree with you, at least with most of your points. I do believe in a server first approach to UI, but I don't like how easy it is to merge the two in Next. If you're a junior Dev, you're not going to know how to prevent CSRF, as in your mind it is just a function. That boundary between client and server is less clear.\n\nI'm also looking to move away from Next for the same reasons, likely to Astro or something like InertiaJS or HTMX. It's hard though as my boss is one of those who believes in stuff blindly if it's popular. So I have to keep using it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731395115.0,
                    "parent_id": "t1_lwppl3n",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpql8h/"
                },
                {
                    "id": "lwpq5oq",
                    "author": "parcelcraft",
                    "body": "As a developer who's worked on creating bespoke custom components for a large banking company, I first thing I evaluate are their form elements. These types of elements are hard to make. Due to their many states, interactivity, and styling requirements, form elements are densely complex and extremely hard to get right. I have spent months of my life working on complex button components that had to work in a variety of conditions, and I could have spent months more.\n\nLet's take a look specifically at Mantine's Select element:  \n[https://mantine.dev/core/select/](https://mantine.dev/core/select/)\n\n\\- Need to have icons in your dropdown options?\n\n\\- Need to have a search bar to find a specific country in your dropdown?\n\n\\- Need to handle large, paginated data sets?\n\n\\- Need to handle animations?\n\n\\- Need to group your options?\n\n\\- Control size, shadow, border radius, color?\n\n\\- Need error states, accessibility, or, need to make it completely different with unique customizations?\n\nMantine has you covered in all of these cases.\n\nThe select element's documentation is PAGES long.  It is excellent.  It covers just about any use case, and this is just one component.\n\nManine also has templates for your overall application interface, hamburger collapsing menus, etc, really I could go on and on, but IMHO it's the new Bootstrap:  It's really easy to use, the code is clean, it's customizable, and you're not locked into it. You could use Mantine for just a few of your components; you can still mix in some Shadcn UI, and you're not locked in their ecosystem.  It's just a great tool to have in the toolbox to make complex things a lot easier to manage.",
                    "score": 27,
                    "upvotes": 27,
                    "downvotes": 0,
                    "created_utc": 1731394847.0,
                    "parent_id": "t1_lwpmgwn",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpq5oq/"
                },
                {
                    "id": "lwpwmdd",
                    "author": "Gishan",
                    "body": "I've tried it over the past weekend and couldn't find a way to pass an object for select entries. Would be grateful if you could share your way of doing it.  \n\nTo be clear: I'm speaking about the property \"data\". For example: I have a Mantine formular where I want to use a Select to choose one of many IngredientTypes. The Id of these IngredientTypes are numbers.  \n\nSince Select.data uses ComboboxData it only supports  \n\n    { value: string, label: string}\n\nBest case scenario would be to be able to use the entire array of IngredientType as data (and setting keys for value/label).  \n\nOr - the only way I've found so far: Convert the number to and from string on multiple occasions:  \n\nWhen setting the Select's data property:  \n\n    data={ingredientTypes.map(t => ({ value: t.id.toString(), label: t.name }))}  \n\nOn form.submit:  \n\n    typeId: parseInt(form.values.typeId),\n\nAnd when setting the form's inital values: \n\n    initialValues: {\n                typeId: props.editIngredient?.typeId.toString() || \"\",\n    }\n\nLike I said - this is not a huge deal breaker for me.\nBut if there is another way I'm always keen to learn something new :)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731399026.0,
                    "parent_id": "t1_lwpub72",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpwmdd/"
                },
                {
                    "id": "lxcp6kp",
                    "author": "Maleficent_Passage_3",
                    "body": "That tailwind needs to be like, compiled to css and removed from the screen 🙈",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731714835.0,
                    "parent_id": "t1_lwrqces",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lxcp6kp/"
                },
                {
                    "id": "lwrusd1",
                    "author": "k_pizzle",
                    "body": "Looks good to me! Thats exactly how shadcn does it in one of their examples, the only difference is they dont wrap the icon in another div, just put the absolute position directly on the icon. IMO its not hacky, MUI seems awesome with all their built-ins until you need to make some visual customizations and then positions get all wonky.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731430629.0,
                    "parent_id": "t1_lwrqces",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwrusd1/"
                },
                {
                    "id": "lwpr4rc",
                    "author": "8isnothing",
                    "body": "Totally! In the end of the day, we use what our bosses wants hahahaha\n\nThat’s always the right decision!\n\nBut for personal projects…",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731395452.0,
                    "parent_id": "t1_lwpql8h",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpr4rc/"
                },
                {
                    "id": "lwptn0s",
                    "author": "Horror-Back-3210",
                    "body": "great analysis",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731397068.0,
                    "parent_id": "t1_lwpq5oq",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwptn0s/"
                },
                {
                    "id": "lwpxn3v",
                    "author": "Any-Government-8387",
                    "body": "I also start with form elements, especially with the date range picker implementation. It can be a tough cookie to crack.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731399713.0,
                    "parent_id": "t1_lwpq5oq",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwpxn3v/"
                },
                {
                    "id": "lwy93mf",
                    "author": "warmbowski",
                    "body": "The useForm hook is great for the dev experience. As good as or better than using react-form-hook or other form libs",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731520522.0,
                    "parent_id": "t1_lwpq5oq",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwy93mf/"
                },
                {
                    "id": "lwrwqlo",
                    "author": "Horror-Back-3210",
                    "body": "Each to their own",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731431235.0,
                    "parent_id": "t1_lwrusd1",
                    "link_id": "t3_1gpaj3b",
                    "permalink": "/r/reactjs/comments/1gpaj3b/daisy_ui_vs_shadcn_ui_which_one_to_choose_in_2025/lwrwqlo/"
                }
            ]
        },
        {
            "id": "1gp8exv",
            "title": "Separated admin and casual user frontends with shared code",
            "author": "pAntalon01",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731372782.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/",
            "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/",
            "selftext": "Hello,\n\nSo, I need to make application, using react, vite, tanstack router and tanstack react query. This application will have 2 frontend, one for casual user that will use it, and another is admin panel, intended for application admins.\n\n*UPD: Casual application is actually mobile application wrapped in capacitor.js, and admin panel is website.*\n\nAnd I need a solution that will help me avoid code duplication, such as TypeScript types\\*,\\* api routes and etc. I’d like to know what you can suggest. I’ve described my solution below.\n\nMy solution to create two `vite.config` files. As a result, the routing for the user frontend will be in the `routes` folder, and the routing for the admin panel will be in the `adminRoutes` folder.\n\n*P.S. I also tried using workspaces in another project, but it seemed excessive, and I couldn't properly configure the use of the same dependencies across projects. And I’m not sure if workspaces are available in npm. (My current project uses npm, not Yarn.)*\n\nMy folder structure is:\n\n    project-root/\n    ├── dist-admin/\n    ├── dist-client/\n    ├── node_modules/\n    ├── public/\n    ├── src/\n    │   ├── api/\n    │   ├── assets/\n    |   |   └── images\n    │   │   └── styles\n    │   ├── providers/\n    │   │   ├── i18n.ts\n    │   │   └── rtk.ts\n    │   ├── types/\n    │   ├── adminRoutes/\n    │   ├── routes/\n    │   ├── index.css\n    │   ├── main-admin.tsx\n    │   ├── main.tsx\n    │   ├── adminRouteTree.gen.ts\n    │   └── routeTree.gen.ts\n    ├── index.html\n    ├── package.json\n    ├── tsconfig.json\n    ├── vite.admin.config.ts\n    └── vite.config.ts\n\nVite configs:\n\n    #vite.config.ts\n    import path, {resolve} from 'path';\n    import {defineConfig} from 'vite';\n    import svgr from 'vite-plugin-svgr';\n    import {createHtmlPlugin} from 'vite-plugin-html';\n    import \n    react \n    from '@vitejs/plugin-react';\n    import {TanStackRouterVite} from '@tanstack/router-plugin/vite';\n    \n    const main = '/src/main.tsx';\n    \n    export default defineConfig(({mode}) => {\n      return {\n        plugins: [\n          TanStackRouterVite(),\n          \n    react\n    (),\n          svgr(),\n          createHtmlPlugin({\n            inject: {\n              data: {\n                injectScript: `<script type=\"module\" src=\"${main}\"></script>`,\n              },\n            }\n          }),\n        ],\n        resolve: {\n          alias: {'@': path.resolve(__dirname, \"./src/\"),}\n        },\n        build: {\n          rollupOptions: {\n            input: {client: resolve(__dirname, 'index.html')},\n            output: {dir: 'dist-client'},\n          }\n        }\n      }\n    })\n\nAnd vite config for admin panel:\n\n    #vite.admin.config.ts\n    import path, {resolve} from 'path';\n    import {defineConfig} from 'vite';\n    import svgr from 'vite-plugin-svgr';\n    import {createHtmlPlugin} from 'vite-plugin-html';\n    import \n    react \n    from '@vitejs/plugin-react';\n    import {TanStackRouterVite} from '@tanstack/router-plugin/vite';\n    \n    const main = '/src/main-admin.tsx';\n    \n    export default defineConfig(({mode}) => {\n      return {\n        plugins: [\n          TanStackRouterVite({\n            routesDirectory: 'src/adminRoutes',\n            generatedRouteTree: 'src/adminRouteTree.gen.ts',\n          }),\n          \n    react\n    (),\n          svgr(),\n          createHtmlPlugin({\n            inject: {\n              data: {\n                injectScript: `<script type=\"module\" src=\"${main}\"></script>`,\n              },\n            }\n          })\n        ],\n        resolve: {\n          alias: {'@': path.resolve(__dirname, \"./src/\"),}\n        },\n        build: {\n          rollupOptions: {\n            input: {admin: resolve(__dirname, 'index.html')},\n            output: { dir: 'dist-admin'},\n          }\n        }\n      }\n    })\n\nindex.html for vite\n\n    #index.html\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Vite + React + TS</title>\n      </head>\n      <body>\n        <div id=\"root\"></div>\n        <%- injectScript %>\n      </body>\n    </html>",
            "comments": [
                {
                    "id": "lwodneg",
                    "author": "BigFattyOne",
                    "body": "Do you have an actual proof that the regular website will overlap enough with the admin site to justify this?\n\nAnd if so, what is the chance that it will remain true in the future?\n\nGenerally I try not to optimize too much at the start of a project.  I create common libraries only when I have a very good reason to do so (as in if I don’t do it now it’ll become very painful, this won’t scale in the future, etc)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731373868.0,
                    "parent_id": "t3_1gp8exv",
                    "link_id": "t3_1gp8exv",
                    "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/lwodneg/"
                },
                {
                    "id": "lwoe15t",
                    "author": "shauntmw2",
                    "body": "This solution is feasible. Looks okay to me.\n\nA few things you can further improve:\n\n- If you wish, you can further separate the 2 into their own src folders, and define the input src in the build config. So that they have their own components, and different builds won't contain unused components from the other.\n\n- The 2 configs have many things in common, you can refactor them into a common config, and then make 2 configs that extend the common config and only overwrite the differences.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731374003.0,
                    "parent_id": "t3_1gp8exv",
                    "link_id": "t3_1gp8exv",
                    "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/lwoe15t/"
                },
                {
                    "id": "lwoqz1f",
                    "author": "mnemonikerific",
                    "body": "FWIW I’ve used git sub modules to pull in my shared code libs. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731378628.0,
                    "parent_id": "t3_1gp8exv",
                    "link_id": "t3_1gp8exv",
                    "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/lwoqz1f/"
                },
                {
                    "id": "lwr9v05",
                    "author": "simplescalar",
                    "body": "Did you try nx.dev for a monorepo solution?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731423985.0,
                    "parent_id": "t3_1gp8exv",
                    "link_id": "t3_1gp8exv",
                    "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/lwr9v05/"
                },
                {
                    "id": "lwof1ot",
                    "author": "pAntalon01",
                    "body": "I added more info to this post about my application. Actually, it will be mobile application wrapped in capacitor.js. So, it will 2 visually different frontends. But I wanna use some shared code for them (types, some assets, dependencies, and other). The most painful I think, is same dependencies.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731374365.0,
                    "parent_id": "t1_lwodneg",
                    "link_id": "t3_1gp8exv",
                    "permalink": "/r/reactjs/comments/1gp8exv/separated_admin_and_casual_user_frontends_with/lwof1ot/"
                }
            ]
        },
        {
            "id": "1gp7gkm",
            "title": "Local machine PDF generation with react-pdf.",
            "author": "zimage",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731370097.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/",
            "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/",
            "selftext": "I found a really nice looking library to [programmatically generate PDF files using react](https://react-pdf.org). I have never used node or typescript before so this entire ecosystem is frankly quite overwhelming. What I'm hoping to do is have a YAML file that defines the values for a bunch of data (eventually this data will be in a database) and then use react-pdf to generate nice documents using the data fields. \n\nI can put the following code in an \"index.js\" file, use npm to install \"@react-pdf/renderer\", \"react\", and \"react-dom\" and run \"node index.js\" to get the output.\n\n    import React from 'react';\n    import { jsx } from 'react/jsx-runtime';\n    import { Document, Page, Text, render } from '@react-pdf/renderer';\n    \n    const MyDocument = () =>\n      jsx(Document, {\n        children: jsx(Page, {\n          size: 'A4',\n          children: jsx(Text, {\n            children: 'Hello world',\n          }),\n        }),\n      });\n    \n    render(jsx(MyDocument, {}), `example.pdf`);\n\nThose jsx functions are pretty difficult to work though when writing to code and it seems like there should be a way to write the code like the following instead.\n\n    import React from 'react';\n    import { jsx } from 'react/jsx-runtime';\n    import { Document, Page, Text, render } from '@react-pdf/renderer';\n    const MyDocument = () => (\n      <Document>\n        <Page size=\"A4\">\n          <Text>Hello world</Text>\n        </Page>\n      </Document>\n    )\n    \n    render(<MyDocument />, `example.pdf`);\n\nbut running that gives an error.\n\n    file:///Users/foobar/src/react-pdf-tests/test1/index.js:20\n      <Document>\n      ^\n    \n    SyntaxError: Unexpected token '<'\n        at compileSourceTextModule (node:internal/modules/esm/utils:339:16)\n        at ModuleLoader.moduleStrategy (node:internal/modules/esm/translators:168:18)\n        at callTranslator (node:internal/modules/esm/loader:428:14)\n        at ModuleLoader.moduleProvider (node:internal/modules/esm/loader:434:30)\n        at async link (node:internal/modules/esm/module_job:87:21)\n\nI tried following the tips on [this site](https://hexmen.com/blog/run-jsx-from-command-line/) but I still get the same errors. Does anyone have any tips? Am I just barking up the wrong tree and should ditch react/node and use python instead?\n\n  \n",
            "comments": [
                {
                    "id": "lwq5ycw",
                    "author": "yksvaan",
                    "body": "I would just use puppeteer. Then how do you actually build the page(s) doesn't matter.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731405484.0,
                    "parent_id": "t3_1gp7gkm",
                    "link_id": "t3_1gp7gkm",
                    "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/lwq5ycw/"
                },
                {
                    "id": "lwooqa2",
                    "author": "ConstructionNext3430",
                    "body": "I’m using a different library, jsPDF for exporting a page into a pdf the user can download and it’s working fine for me \n\nYou can see the code here; \nhttps://github.com/MenaHealth/MedFlow/blob/main/components/PatientViewModels/Medications/rx/RxOrderDrawerViewModel.ts",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731377806.0,
                    "parent_id": "t3_1gp7gkm",
                    "link_id": "t3_1gp7gkm",
                    "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/lwooqa2/"
                },
                {
                    "id": "lwphcxu",
                    "author": "Infamous_Chapter",
                    "body": "Pdf make, is good for building pdfs. It is a higher level abstraction that the raw pdf libraries. You just define the elements like table, text, image",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731389813.0,
                    "parent_id": "t3_1gp7gkm",
                    "link_id": "t3_1gp7gkm",
                    "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/lwphcxu/"
                },
                {
                    "id": "lwoqmk6",
                    "author": "zimage",
                    "body": "I’m trying to do something like a local CLI utility. Maybe node and react are the wrong tool for that.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731378500.0,
                    "parent_id": "t1_lwooqa2",
                    "link_id": "t3_1gp7gkm",
                    "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/lwoqmk6/"
                },
                {
                    "id": "lwrczxm",
                    "author": "TheRealBeakerboy",
                    "body": "If it’s a CLI, use python.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731425029.0,
                    "parent_id": "t1_lwoqmk6",
                    "link_id": "t3_1gp7gkm",
                    "permalink": "/r/reactjs/comments/1gp7gkm/local_machine_pdf_generation_with_reactpdf/lwrczxm/"
                }
            ]
        },
        {
            "id": "1gp4829",
            "title": "Thinking of starting a project using Vite SSR. Am I underestimating how hard it'll be?",
            "author": "eepieh",
            "score": 14,
            "upvotes": 14,
            "downvotes": 0,
            "num_comments": 30,
            "created_utc": 1731361701.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/",
            "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/",
            "selftext": "Hey!\n\nI've been pondering about starting a new project using React and was hoping to get some advice on how much trouble I'd be getting myself into.\n\n**Project Overview:**\n\n* Not *very* interactive, but some parts of the system will need real-time updates.\n* Planning to use React as a view layer/templating engine primarily.\n* Is public facing. SEO is very important.\n* Would like for CSR to take over after the initial SSR.\n* Will need a backend.\n\nMy problem is that I don't really feel like going down the Next or Remix route. That's primarily because it all just feels too chaotic and I'd rather stay in control of every piece of the stack.\n\n**Potential Stack:**\n\n* Vite with SSR\n* React Router\n* React Query - for hydrating data from server to the client\n* Express - for the backend\n* TRPC/Telefunc - for the API\n\nThe stack sounds good in theory, but I've heard that rolling your own SSR setup can get complex. How realistic is this setup? Am I in for a headache, or is it manageable?",
            "comments": [
                {
                    "id": "lwnlbnl",
                    "author": "aust1nz",
                    "body": "You may as well just use Remix, honestly.\n\nRemix *is* React Router on Vite, with loaders (GET requests) and actions (PUT/POST requests) corresponding to each route. Remix then bundles everything up into a lightweight Express app by default, but you can also use other adapters like Fastify or vendor-specific tools.\n\nYou'll have to do *so much more work* to get Vite/React Router/SSR/Express working on your own, and that's going to come at the cost of building whatever your actual app is.",
                    "score": 27,
                    "upvotes": 27,
                    "downvotes": 0,
                    "created_utc": 1731364072.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnlbnl/"
                },
                {
                    "id": "lwnleu7",
                    "author": "qcAKDa7G52cmEdHHX9vg",
                    "body": "fwiw modern remix is just a vite plugin. i'd really recommend remix if you're already planning to use react-router. remix is react-router with vite and runs just fine on express. it's basically the stack you're describing already.",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731364102.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnleu7/"
                },
                {
                    "id": "lwneof5",
                    "author": "Actual-Plantain845",
                    "body": "I would say Tanstack Start, however I don’t think it’s in beta just yet, and doesn’t have much learning resources either. \n\nPersonally I would still lean towards Remix since it’s quite mature, sticks to web fundamentals and does provide control when you need it in my experience.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731361969.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwneof5/"
                },
                {
                    "id": "lwno00q",
                    "author": "Queasy-Big5523",
                    "body": "I'd suggest going with Remix. It's quite easy to get started, as it basically initialized into a fully working app and you can start writing code right away.\n\nFrom my experience, all I can advice you is to avoid making this more complex than it has to be. Go with bare minimum, you will expand as needed. The last thing you want is to be held back by complexity.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731364944.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwno00q/"
                },
                {
                    "id": "lwpik1l",
                    "author": "UsernameINotRegret",
                    "body": "Remix/React Router 7 is very minimal already. Check out the underkill stack to see what I mean, https://github.com/jacobparis/underkill-stack.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731390455.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpik1l/"
                },
                {
                    "id": "lwnhqp1",
                    "author": "drewbe121212",
                    "body": "My current project is vite + vike + vike-react-query + tanstack react-query, and its awesomesauce. \n\nvike-react-query makes vike automatically run the tanstack queries on the server side and hydrates them to the front end without any extra work on your end. SSR enabled by vike itself. \n\nMy only real gripe at the moment is the page routing + layouts leaves a little bit to be desired, but there are work arounds until the updates are in place.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731362925.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnhqp1/"
                },
                {
                    "id": "lwnu95t",
                    "author": "Different-Housing544",
                    "body": "Look into NestJS for backend..it's basically a wrapper for express that includes some nice additions like query validation, auth guards, dep injection, etc",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731367049.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnu95t/"
                },
                {
                    "id": "lwqeuhe",
                    "author": "tymzap",
                    "body": "I have one commercial project with SSR support written from scratch but I dropped this approach. Why: All that time that I used to make the basics of the project to work, on Next.js project I already had basic features of working MVP. Yes, I have less control over how it works, but at the same time I can make use of all the best practcies incorporated in the framework.\n\nOf course the choice is up to you. I'm just saying that time for me is very valuable in my projects so I prefer not to create SSR implementations from scratch.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731411095.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwqeuhe/"
                },
                {
                    "id": "lwrzek1",
                    "author": "Flukslip",
                    "body": "To do SSR with React, I use AdonisJS and their InertiaJS implementation. Love it 😊",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731432060.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwrzek1/"
                },
                {
                    "id": "lwpfy5j",
                    "author": "syahrizalfauzi",
                    "body": "react query & TRPC? why not go for T3 app altogether?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731389079.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpfy5j/"
                },
                {
                    "id": "lwoop2l",
                    "author": "Zeevo",
                    "body": "You should be using React with a framework like next.js or remix. It is what the docs recommend.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731377795.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwoop2l/"
                },
                {
                    "id": "lwpozgj",
                    "author": "FilmWeasle",
                    "body": "Vike is not a whole lot different from Remix. If I'm not mistaken, Vike already handles routing and hydration.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731394140.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpozgj/"
                },
                {
                    "id": "lwq74xm",
                    "author": "Fanfan_la_Tulip",
                    "body": "Use vike",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731406283.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwq74xm/"
                },
                {
                    "id": "lwoq4vg",
                    "author": "dafcode",
                    "body": "Just use Next.js",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731378320.0,
                    "parent_id": "t3_1gp4829",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwoq4vg/"
                },
                {
                    "id": "lwoj09k",
                    "author": "pugnae",
                    "body": "Is it worth doing once for learning though? Or should I just use something else, because it is too much work anyway? I have a small project to make, non-commercial, so nothing serious.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731375769.0,
                    "parent_id": "t1_lwnlbnl",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwoj09k/"
                },
                {
                    "id": "lx2nrfq",
                    "author": "zdzarsky",
                    "body": "JS veteran here - just used remix for my last project. Will stay with it for longer.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731585268.0,
                    "parent_id": "t1_lwnlbnl",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lx2nrfq/"
                },
                {
                    "id": "lwnjrqv",
                    "author": "eepieh",
                    "body": "I think out of all the frameworks, I'd definitely be leaning towards Remix. It feels like it's got the right balance between abstracting away complexity and giving you control.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731363574.0,
                    "parent_id": "t1_lwneof5",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnjrqv/"
                },
                {
                    "id": "lwpzqvd",
                    "author": "eepieh",
                    "body": "I love how lean this is! Looks like it might really fit what I’m looking for.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731401171.0,
                    "parent_id": "t1_lwpik1l",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpzqvd/"
                },
                {
                    "id": "lwp5ynt",
                    "author": "Curry--Rice",
                    "body": "I'm fucking done with js framework environment. Your first line was too much for me. Fuck this shit I'm going to plant carrots and become a farmer",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731384422.0,
                    "parent_id": "t1_lwnhqp1",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwp5ynt/"
                },
                {
                    "id": "lwnjdyp",
                    "author": "eepieh",
                    "body": "What would you say is the setup lacking when it comes to page routing and layouts?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731363450.0,
                    "parent_id": "t1_lwnhqp1",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnjdyp/"
                },
                {
                    "id": "lwqf4vq",
                    "author": "tymzap",
                    "body": "NestJS is awesome but for me it will require really big project to justify it's usage. I tried it several times for my smallers projects and I noticed that all I needed to do is 5-10 simple endpoints. I might as well use express for this.\n\nBut if I will have a giant API to implement - yeah, I would go with NestJS for sure.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731411254.0,
                    "parent_id": "t1_lwnu95t",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwqf4vq/"
                },
                {
                    "id": "lwnuo4r",
                    "author": "eepieh",
                    "body": "I’m aware of Nest, but it just doesn’t click with me. I’d rather keep things simple.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731367191.0,
                    "parent_id": "t1_lwnu95t",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwnuo4r/"
                },
                {
                    "id": "lwpztgm",
                    "author": "eepieh",
                    "body": "Isn’t that Next.js?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731401221.0,
                    "parent_id": "t1_lwpfy5j",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpztgm/"
                },
                {
                    "id": "lwoucrt",
                    "author": "aust1nz",
                    "body": "I assume you mean: \"is it worth wiring up a SSR React framework myself, for learning, instead of using a framework that's already done that legwork like Remix or Next?\"\n\nI think it depends on your priorities. If you're trying to build a website or web app, then no, probably not. I'm not an expert in SSR or hydration in React, but it's fairly complex stuff and not exactly the same skill set you'd need to build the React app itself, so you're not saving yourself any time. On the other hand, if you want to know the ecosystem really well and are interested in contributing to open source, then yeah, it's probably worth understanding how the frameworks are built.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731379871.0,
                    "parent_id": "t1_lwoj09k",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwoucrt/"
                },
                {
                    "id": "lwobkhe",
                    "author": "Suspicious-Visit8634",
                    "body": "I’m using remix for an online marketplace, a social media app, and at work at a major tech company. \n\nVery happy with it",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731373129.0,
                    "parent_id": "t1_lwnjrqv",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwobkhe/"
                },
                {
                    "id": "lwq1bxh",
                    "author": "UsernameINotRegret",
                    "body": "Just be aware that the stack is using the prerelease of everything, React v19, React Router v7 & Tailwind v4. So you'd have to adapt from Remix realtime examples like https://github.com/remix-run/examples/tree/main/_official-realtime-app but mostly just the imports change to \"react-router\" so it's not too bad.\n\nOr see here for the non-prerelease Remix version: https://github.com/jacobparis/underkill-stack/tree/beb302f2bc996cd0976e948ad247e0cf9c988148",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731402280.0,
                    "parent_id": "t1_lwpzqvd",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwq1bxh/"
                },
                {
                    "id": "lwno8ih",
                    "author": "drewbe121212",
                    "body": "It is file routing - and the layouts, if you set them, inherit from each directory parent layout. That is all fine and we'll, except when you have a page that doesn't need the inherited layout. There isn't really a way currently to turn off the inheritance so to speak. \n\n\nYou can organize your files/directories cleverly to avoid it, but, to me it seems like a work around.\n\n\nFor me, I just created one layout that will render different layouts based on the current route (so some if/then/else conditions in the layout. Ideally I would have separate layouts that can inherit or not based off of configuration.  But other than that, it's been great.  \n\n\nHere is more info: \n\n\n  https://vike.dev/Layout",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731365022.0,
                    "parent_id": "t1_lwnjdyp",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwno8ih/"
                },
                {
                    "id": "lwock0g",
                    "author": "ArtisticSell",
                    "body": "I'm curious what makes NestJS does not click with you? I am a front end for 3 years, and straight up trying NestJS and I would say it is easier to learn (besides database/system design obviously), it is easier to learn than React lol",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731373478.0,
                    "parent_id": "t1_lwnuo4r",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwock0g/"
                },
                {
                    "id": "lwpz0g5",
                    "author": "eepieh",
                    "body": "It’s not that it’s difficult to learn, just personally am not a huge fan of it, or rather don’t feel the need for it.\n\nI might get lynched for this opinion, but I really like the fact that you can just build your own stack by installing a bunch of libraries in JS. It gives me a lot of freedom and control over what I’m doing and allows me to keep things lean and simple.\n\nI’ve spent a long time working with Nest-like frameworks in other languages. Nothing against Nest, but if I wanted something of that caliber, I’d just go with something else.\n\nIt’s like the cathedral and the bazaar. I’m really happy to be at the bazaar, and if I wanted a cathedral, I think there are nicer ones out there.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731400659.0,
                    "parent_id": "t1_lwock0g",
                    "link_id": "t3_1gp4829",
                    "permalink": "/r/reactjs/comments/1gp4829/thinking_of_starting_a_project_using_vite_ssr_am/lwpz0g5/"
                }
            ]
        },
        {
            "id": "1gp1ynk",
            "title": "Looking for an Easy Way to Convert React Code to HTML for User Testing",
            "author": "UltimateSearchUser",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 13,
            "created_utc": 1731356222.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/",
            "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/",
            "selftext": "Hi all,\n\nWe're in the process of redeveloping our SaaS app, which is currently built in PHP and HTML, into a more modern stack using Node.js and React. We've built out some new features in React and would like to have our current users (on the old platform) test them before we fully migrate.\n\nHowever, we're looking for an easy way to convert our React code into a static HTML format so we can integrate it with the legacy system (which is PHP/HTML-based) for user testing purposes. We're not looking to deploy a full React app at this stage—just want to provide users with a preview of the new features.\n\n**Some details:**\n\n* We're using **React** for the frontend, and the current platform is built using **PHP and HTML**.\n* The goal is to create a static version (HTML) of our React components for testing, without needing to run a full React app on the current platform.\n\nIs there an easy way or any tools that would help us convert or export our React components as static HTML files?\n\nThanks for any suggestions!",
            "comments": [
                {
                    "id": "lwmzui3",
                    "author": "fixrich",
                    "body": "Would [renderToStaticMarkup](https://react.dev/reference/react-dom/server/renderToStaticMarkup) work for you?",
                    "score": 15,
                    "upvotes": 15,
                    "downvotes": 0,
                    "created_utc": 1731357450.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwmzui3/"
                },
                {
                    "id": "lwndqqc",
                    "author": "stacktrac3",
                    "body": "I think testing pages written in React is probably easier than individual components, but what you could do is form your React app, export a bunch of global variables to render your component.  For example:\n\n    const AccountMenu = props => /* ... */\n    \n    window.renderAccountMenu = container => {\n      const root = createRoot(container);\n      root.render(<AccountMenu />);\n    };\n\nYou might want to put all of these `render*` functions in your React app's entrypoint to make sure all of the code gets included.\n\nThen, in your app, import your React bundle. Whenever you want to replace one of your stock components with a React component, call `window.renderAccountMenu(container).`\n\nSharing state and things like that is tricky because each component becomes its own React app.\n\nI'm not sure I'd do exactly this, but there might be a solution in here somewhere...",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731361682.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwndqqc/"
                },
                {
                    "id": "lwomolf",
                    "author": "TheRealSeeThruHead",
                    "body": "It converts into html when you run it. That’s kind of the point.\n\nWhy not render some react components into your old app?\n\nOr let users interact with a demo build deployed somewhere. Even a deployed storybook.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731377078.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwomolf/"
                },
                {
                    "id": "lwnc3h7",
                    "author": "turntherecord-over",
                    "body": "Would something like Storybook help out? This ties your components to models that you can predefine and/or allow testers to edit in the browser, and renders them all in a nice little web app outside your main app.\n\nEx. You demo a hero banner component, define several variations of a supporting model (with image, with text, different layout) and the testers could click around each variation",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731361180.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwnc3h7/"
                },
                {
                    "id": "lwoim8j",
                    "author": "ItsAllInYourHead",
                    "body": "> The goal is to create a static version (HTML) of our React components for testing, without needing to run a full React app on the current platform.\n\nAre any of your component interactive? Because if they are, this will not work. If they aren't, then you can just `renderToStaticMarkup` as /u/fixrich mentioned.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731375632.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwoim8j/"
                },
                {
                    "id": "lwmwxtp",
                    "author": "mrtcarson",
                    "body": "reweb does it the other way...makes a static front end into react code...Build at the speed of no-code. Export a Next.js, Tailwind and Shadcn UI app. Customize without limits.  Maybe that will help...good developers too.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731356556.0,
                    "parent_id": "t3_1gp1ynk",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwmwxtp/"
                },
                {
                    "id": "lwqcjaq",
                    "author": "UltimateSearchUser",
                    "body": "not sure, because we have a lot of interactive components.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731409734.0,
                    "parent_id": "t1_lwmzui3",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwqcjaq/"
                },
                {
                    "id": "lwqceqv",
                    "author": "UltimateSearchUser",
                    "body": "this is helpful. since the React components are interactive (like menus, forms, etc.), how do we handle things like re-renders or lifecycle methods when they’re embedded in the PHP app?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731409657.0,
                    "parent_id": "t1_lwndqqc",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwqceqv/"
                },
                {
                    "id": "lwqbjbz",
                    "author": "UltimateSearchUser",
                    "body": "I assume this means React renders HTML dynamically in the browser. Could you clarify if this process is the same as server-side rendering, or if there's a simpler way to generate static HTML for specific components ahead of time for integration into a legacy PHP app?\n\n  \nWould we just render React components inside specific divs using `ReactDOM.render()`, or do we need a more complex setup for this to work smoothly?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731409118.0,
                    "parent_id": "t1_lwomolf",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwqbjbz/"
                },
                {
                    "id": "lwqbody",
                    "author": "UltimateSearchUser",
                    "body": "Yes, many of our components are interactive",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731409205.0,
                    "parent_id": "t1_lwoim8j",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwqbody/"
                },
                {
                    "id": "lwqi1kt",
                    "author": "TheRealSeeThruHead",
                    "body": "I’m really wondering why you need static markup at all. It’s not a requirement for any kind of testing. Especially not user testing. \n\nCan you explain your use case better? \n\nAs for mounting into your old app. \n\nYou can use separate reactdom calls or use portals.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731412800.0,
                    "parent_id": "t1_lwqbjbz",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwqi1kt/"
                },
                {
                    "id": "lwr7ynz",
                    "author": "ItsAllInYourHead",
                    "body": "Well if that's the case you'll lose any interactivity unless you [rehydrate your components](https://react.dev/reference/react-dom/client/hydrateRoot) once they are rendered on the client. Which involves - as you call it - \"run[ing] a full React app\".",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731423335.0,
                    "parent_id": "t1_lwqbody",
                    "link_id": "t3_1gp1ynk",
                    "permalink": "/r/reactjs/comments/1gp1ynk/looking_for_an_easy_way_to_convert_react_code_to/lwr7ynz/"
                }
            ]
        },
        {
            "id": "1gp0exj",
            "title": "Looking for an up-to-date stack with SSR and bundle splitting - what are we missing?",
            "author": "foucdeg",
            "score": 8,
            "upvotes": 8,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731352461.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/",
            "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/",
            "selftext": "I'm working on a 7 year old React codebase with hundreds of component files. Runtime dependencies are relatively up to date (e.g. React 18) but the build stack is still Webpack 4, and we're starting to see some hard limitations with that stack.\n\nWe currently use [Loadable](https://loadable-components.com/) to bridge the gap between bundle splitting and SSR. Essentialy, using a Babel and Webpack plugin, a server-side runtime utility, and a client-side runtime utility, Loadable collects the JS modules that were called during the server render and lists the associated bundle files, and we then add script tags to these bundles to the rendered HTML to make it coherent with what would have been rendered by the browser.\n\nIn order to upgrade our stack, we've considered the following options:\n\n- Upgrading to webpack 5 : initial assessment concluded that we might as well directly switch to a faster stack like vite, the amount of work needed seemed to be equivalent\n- Upgrading to vite : vite doesn't seem to have the equivalent of Loadable built-in - it supports SSR, it does bundle splitting, but not both together. \n- Porting Loadable to Vite : probably converting their Webpack plugin to a Vite / Rollup plugin, assuming the I/Os of plugins are equivalent. I've gone down that rabbit hole for dozens of hours and haven't figured it out.\n- Converting to Next: Next seems to be a framework in the sense that it imposes the organization of code files around the concept of pages or routes, which would mean massive refactoring for us, assuming our current URL structure is compatible with Next.\n\nAny of the above findings might be wrong. What feels the most wrong, however, is the conclusion I'm reaching, that no modern stack is doing what we need besides Next. What alternatives did we miss?",
            "comments": [
                {
                    "id": "lwmm1zd",
                    "author": "tobimori_",
                    "body": "You are most likely using React Router then? Thanks to Remix, React Router supports SSR very well and should work out of the box with Vite bundle splitting.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731353230.0,
                    "parent_id": "t3_1gp0exj",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwmm1zd/"
                },
                {
                    "id": "lwmohqy",
                    "author": "biinjo",
                    "body": "Go with Remix/React Router v7\n\nChecks all your boxes.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731353976.0,
                    "parent_id": "t3_1gp0exj",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwmohqy/"
                },
                {
                    "id": "lwq1x1z",
                    "author": "UsernameINotRegret",
                    "body": "Wait a month for React Router v7 or try the prerelease for now, then incrementally move functionality to it. Advantage is you can migrate slowly without a big rewrite, much less stressful.\n\nhttps://github.com/remix-run/react-router/blob/dev/docs/upgrading/v6.md\n\nhttps://github.com/remix-run/react-router/blob/dev/docs/upgrading/vite-component-routes.md",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731402689.0,
                    "parent_id": "t3_1gp0exj",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwq1x1z/"
                },
                {
                    "id": "lwn3chk",
                    "author": "fantastiskelars",
                    "body": "Just use Next?",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731358511.0,
                    "parent_id": "t3_1gp0exj",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwn3chk/"
                },
                {
                    "id": "lwr60o3",
                    "author": "foucdeg",
                    "body": "Thanks, we'll probably get to work now on the v7 flags.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731422659.0,
                    "parent_id": "t1_lwq1x1z",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwr60o3/"
                },
                {
                    "id": "lwr4m96",
                    "author": "foucdeg",
                    "body": "Next forces us to reorganize our whole codebase and test all our URLs against regressions, we'd rather not make such a big move.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731422160.0,
                    "parent_id": "t1_lwn3chk",
                    "link_id": "t3_1gp0exj",
                    "permalink": "/r/reactjs/comments/1gp0exj/looking_for_an_uptodate_stack_with_ssr_and_bundle/lwr4m96/"
                }
            ]
        },
        {
            "id": "1goyuqa",
            "title": "Jet-Schema: a simple, alternative approach to schema-validation",
            "author": "TheWebDever",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731348730.0,
            "url": "https://levelup.gitconnected.com/jet-schema-a-simple-alternative-approach-to-schema-validation-6815bca16056",
            "permalink": "/r/reactjs/comments/1goyuqa/jetschema_a_simple_alternative_approach_to/",
            "selftext": "",
            "comments": []
        },
        {
            "id": "1goyaxt",
            "title": "Any down side to use self-executing function on component prop?",
            "author": "hamitaksln1",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 20,
            "created_utc": 1731347439.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/",
            "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/",
            "selftext": "I generally don't like ternary when the conditions are more than one. It reduces readability. So other option is early returns on function which I really like but for simple things I don't want to have seperate function on component body. So I'm wondering self-executing function on component prop would be bad idea?\n\n    <NumberInput\n      error={(() => {\n        if (!isValidInput && inputValue > MAX_LIMIT) {\n          return `Amount exceeds maximum limit of ${MAX_LIMIT} units`\n        }\n        if (isValidInput && userLimit && inputValue > userLimit) {\n          return `Amount exceeds your personal limit of ${userLimit} units`\n        }\n        return null\n      })()}\n      {...field}\n      label=\"Amount\"\n    />",
            "comments": [
                {
                    "id": "lwm767d",
                    "author": "projexion_reflexion",
                    "body": "Functionally, it works, but people will think you made an odd choice. That is way more disruptive to your JSX than a ternary expression. Just move the logic above the return statement.\n\n`const numberError = validateNumberInput();`\n\n`return ( ...`\n\n`<NumberInput error={numberError} {...field} label=\"Amount\" />...`",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731348704.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm767d/"
                },
                {
                    "id": "lwm7zl3",
                    "author": "lp_kalubec",
                    "body": "It’s okay, but it’s no different from having the same code outside the template - it would execute anyway.\n\nPersonally, I preferred keeping the template as simple and as logic-free as possible, treating the function body more like a model and the template as a view.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731348953.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm7zl3/"
                },
                {
                    "id": "lwm4z5o",
                    "author": "_hijnx",
                    "body": "I didn't see any technical issue with it but personally I would put this function at the very bottom of the file outside of the component. That way it cleans up your component code but is still handy. It makes refactoring it into a shared helper a lot easier as you have already removed it from the closure",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731348035.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm4z5o/"
                },
                {
                    "id": "lwmxmtz",
                    "author": "lowtoker",
                    "body": "You think that's more readable than a ternary?!",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731356771.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwmxmtz/"
                },
                {
                    "id": "lwm7z81",
                    "author": "bluebird355",
                    "body": "I hate it, it's messy, extract the damn logic don't write IIFE",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731348950.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm7z81/"
                },
                {
                    "id": "lwm5k3q",
                    "author": "ferrybig",
                    "body": "Note that this construct is supported if you use [the new react compiler](https://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAKgmDgBQCURwAOsUQPTOkAWeYRcEAtnwSYcRAO54ANhKIBDCZCIAjBERgI+EAG4IAJgDpGRQ6oQ5YxADwA5KH2UwAkpgAOUHMaJEEMGBBgBeYEoaIn8APjoPTyI8NCJKAEIuADU5PB0nVxEAMmyYlzdUiSgVCIBZAEEADQB9ABkHMocSWgYmaOi1MxhiAAMKjSwRBAAPRF1uPhkRvD5bIglZvBEIOIASYErahqaSAF8iLGWwXqjPPbOYuMoUtIyCnLyoMG86pcf8rKKSogjn1-erUuni65iI-UGwi8YwQEyIAE9oDAiM5vJBMHIFu8iKsiBt-jA3nxlgcjjgTpcLu1OqYwZgoFIontqDQqR0JDJlBJ-PQQANoMJecZmGFGHsQHsgA), it is able to properly rewrite the code without producing any wasted slots in the memo cache",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731348212.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm5k3q/"
                },
                {
                    "id": "lwmdtgk",
                    "author": "Nervous-Project7107",
                    "body": "If you’re using vite/rollup, you can probably write a plugin to transform the code during build or they probably have an option for that already",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731350722.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwmdtgk/"
                },
                {
                    "id": "lwnu6xy",
                    "author": "brzzzah",
                    "body": "As others have said, doing this inline is not a great practice. I’d also suggested wrapping it with useMemo rather than using an IIFE",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731367027.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwnu6xy/"
                },
                {
                    "id": "lwm4a0s",
                    "author": "teg4n_",
                    "body": "It’s fine to do that. People typically call those IIFE (immediately invoked function expression) https://developer.mozilla.org/en-US/docs/Glossary/IIFE",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731347827.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm4a0s/"
                },
                {
                    "id": "lwn2fgy",
                    "author": "gojukebox",
                    "body": "IIFE: immediately invoked function expression",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731358235.0,
                    "parent_id": "t3_1goyaxt",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwn2fgy/"
                },
                {
                    "id": "lwn3jcx",
                    "author": "TheOnceAndFutureDoug",
                    "body": "Agreed, it's functional but I'd reject a PR if I saw this for maintainability reasons. as much logic as possible should be before the return.\n\nThough in this case I have no idea why you're making custom errors for a feature literally built into all browsers. So that's two reasons I'd reject this PR.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731358569.0,
                    "parent_id": "t1_lwm767d",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwn3jcx/"
                },
                {
                    "id": "lwo0erb",
                    "author": "nikki969696",
                    "body": "I agree with this one because also your validation might change and if it’s independent then you can have unit tests for it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731369209.0,
                    "parent_id": "t1_lwm767d",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwo0erb/"
                },
                {
                    "id": "lwms122",
                    "author": "aviemet",
                    "body": "My basic rule is that anything passed to a prop with more than 2 or 3 lines should probably be extracted to its own function. It really hurts readability to see full on logic in the template code.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731355053.0,
                    "parent_id": "t1_lwm7zl3",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwms122/"
                },
                {
                    "id": "lwm5g96",
                    "author": "hamitaksln1",
                    "body": "But putting it outside of the component needs passing those values to function which makes things more complicated I think.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731348179.0,
                    "parent_id": "t1_lwm4z5o",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm5g96/"
                },
                {
                    "id": "lwm5upk",
                    "author": "hamitaksln1",
                    "body": "That's cool",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731348302.0,
                    "parent_id": "t1_lwm5k3q",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm5upk/"
                },
                {
                    "id": "lwzi0sb",
                    "author": "dabrox02",
                    "body": "I'm sorry, I'm new to this, what is the purpose of this type of compilers and what are all those features that appear in the new react compiler for?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731534127.0,
                    "parent_id": "t1_lwm5k3q",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwzi0sb/"
                },
                {
                    "id": "lwm6nz1",
                    "author": "_hijnx",
                    "body": "Sure, but if readability is your top priority here I think it's worth considering. Like I said, there's nothing wrong with doing it how you have, it just makes the JSX a little more verbose. It's up to you.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731348550.0,
                    "parent_id": "t1_lwm5g96",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm6nz1/"
                },
                {
                    "id": "lwzl2gn",
                    "author": "ferrybig",
                    "body": "The react compiler grabs your code, then rewrites it to memoize everything, which makes it more performant without requiring the user to add lots of extra code. The advantage is that the code is readable and performant.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731535062.0,
                    "parent_id": "t1_lwzi0sb",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwzl2gn/"
                },
                {
                    "id": "lwm6wly",
                    "author": "hamitaksln1",
                    "body": "Thanks for your answer",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731348624.0,
                    "parent_id": "t1_lwm6nz1",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwm6wly/"
                },
                {
                    "id": "lwodzo5",
                    "author": "lightfarming",
                    "body": "keeping it outside the component can make it a little more complex, but you also get the benefit that the function code doesn’t get recreated every render.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731373988.0,
                    "parent_id": "t1_lwm6wly",
                    "link_id": "t3_1goyaxt",
                    "permalink": "/r/reactjs/comments/1goyaxt/any_down_side_to_use_selfexecuting_function_on/lwodzo5/"
                }
            ]
        },
        {
            "id": "1goxod1",
            "title": "Should we mock UI library components in our tests!?",
            "author": "hadibikey",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 8,
            "created_utc": 1731345935.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/",
            "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/",
            "selftext": "Hi. We have a ui library which contains our UI components and they can have tests for their own. \n\nWe use those components & create views, components, etc. in target projects. \n\nThe issue: when writing tests for our views/components, should we mock those imported components from the UI library or kinda integrate test and test their behavior too!?\n\nWhat are the best practices, should we depend on them & write integration tests or completely mock them & test the functionality of the target component?",
            "comments": [
                {
                    "id": "lwm7uow",
                    "author": "Whisky-Toad",
                    "body": "Don’t mock it at all, if your testing functionality using it then great, if you’re not then you shouldn’t break it by not mocking it anyway",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731348912.0,
                    "parent_id": "t3_1goxod1",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwm7uow/"
                },
                {
                    "id": "lwm6n93",
                    "author": "max_mou",
                    "body": "Depends, if you want to interact with the UI component, don’t mock it. If you don’t care about the UI component, then mock it.\n\nHowever, I don’t understand why would you want to mock a UI component. Speed? State? DOM tree size? Just because?",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731348544.0,
                    "parent_id": "t3_1goxod1",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwm6n93/"
                },
                {
                    "id": "lwn312e",
                    "author": "MetaSemaphore",
                    "body": "Don't mock them. Do integration-style testing that treats the page as a whole. That means that you don't have to test the internal logic of your UI components in your app (that should be done in the UI library), but you should, e.g., if you import a button UI component, actually click the button in your tests.\n\n\n\n\nThe problem with mocking is that every time you do it, you are introducing another thing in your tests that behaves differently from the code in your actual app. Therefore, you end up with less confidence that the app and the test are accurate reflections of one another.\n\n\n\n\nIntegration tests also help you catch component API changes. Maybe your button's prop changes from 'loading' to 'isLoading'. That is a small change and a reasonable one. But if you mocked the component, then it is very possible your app will have full coverage, pass all its tests, and the component will have full, passing coverage, but your app will not behave as desired.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731358416.0,
                    "parent_id": "t3_1goxod1",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwn312e/"
                },
                {
                    "id": "lwp8hfi",
                    "author": "xmontc",
                    "body": "What does “unit tests” means? If the ui components are already being tested then theres no need to let them render. You should mock them.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731385518.0,
                    "parent_id": "t3_1goxod1",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwp8hfi/"
                },
                {
                    "id": "lwm9520",
                    "author": "True-Environment-237",
                    "body": "Speed.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731349306.0,
                    "parent_id": "t1_lwm6n93",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwm9520/"
                },
                {
                    "id": "lwmdslk",
                    "author": "hadibikey",
                    "body": "Thanks. Well, to not integrate with the actual component and to be able to test the parent’s logic?\n\nTo clarify, they’re not pure UI, some of them have logic.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731350715.0,
                    "parent_id": "t1_lwm6n93",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwmdslk/"
                },
                {
                    "id": "lwn5wwi",
                    "author": "Asura24",
                    "body": "Doing integration tests with unit tests I don’t think is the way to go most of the time.\nThere are tools for that.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731359294.0,
                    "parent_id": "t1_lwn312e",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwn5wwi/"
                },
                {
                    "id": "lwmi0v7",
                    "author": "Asura24",
                    "body": "How we used to do it at my company is, to only test relevant logic.\nSo if you are testing the parent component and the child component doesn’t need to be there to test that you can mock.\nDon’t over complicate your unit tests, if you are already testing the logic in the component you don’t need to test it again, that would be integration testing and you probably should want to use something like playwright for that",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731352005.0,
                    "parent_id": "t1_lwmdslk",
                    "link_id": "t3_1goxod1",
                    "permalink": "/r/reactjs/comments/1goxod1/should_we_mock_ui_library_components_in_our_tests/lwmi0v7/"
                }
            ]
        },
        {
            "id": "1gowotc",
            "title": "When working with REST APIs Frontend engineers get the short end of the stick. I've built a React-based app to make things easier.",
            "author": "memo_mar",
            "score": 20,
            "upvotes": 20,
            "downvotes": 0,
            "num_comments": 14,
            "created_utc": 1731343620.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/",
            "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/",
            "selftext": "This is just my personal, biased (because I built a tool) experience, so take this with a grain of salt ...\n\nMany frontend engineers have accepted the current state of affairs when it comes to working with REST APIs. I mean the way most projects start, middle, and finish!\n\nMost projects start by collaboratively defining Jira/Linear/Github tickets that outline new or changed API endpoints. This often isn't more than a rough sketch in some custom format (rarely it's OpenAPI, TypeSpec, etc.).\n\nAfter this, you either wait until the backend is done or create some basic mock API - so you can work in parallel. Both aren't ideal. If you wait and realize that you need additional backend changes, you wait again.\n\nOn the other hand, building good mock APIs with realistic data, errors, etc. is a tedious, lengthy task. It's hard to justify spending a lot of time building elaborate mocks. Also, even if you build mocks, you have to manually mirror changes to the API definition that come up during implementation. You're stuck being reactive.\n\nEither way, since frontend engineers often have little control over the API implementation/specification, they usually end up with the short end of the stick IMO making it harder to write robust code & leading to worse results.\n\nGoing API-First is much better.\n\nInstead of creating a ticket, you create a full OpenAPI file during planning. On the frontend you can take the spec to auto-generate a client and a mock server. This is a lot faster on the frontend (just implementation code) because there is a common source of truth.\n\nBut - of course - going API-First is not free either. It often requires more tools, and forces teams that generate OpenAPI specs from code (code-first approach) to change.\n\nI personally think API-first produces better results on both front- and backend. So, I [built an app to create, branch, and merge contracts](https://api-fiddle.com). I may even add mocking capabilities soon.\n\nSome users and I are still experimenting with good workflows around API-First but I'd love to hear your thoughts.",
            "comments": [
                {
                    "id": "lwn4br5",
                    "author": "straightouttaireland",
                    "body": "If you're going to mock use MSW. Also look at \n\nhttps://mswjs.io/blog/introducing-source/",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731358810.0,
                    "parent_id": "t3_1gowotc",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwn4br5/"
                },
                {
                    "id": "lwpll76",
                    "author": "OkStory1854",
                    "body": "Our team uses Redux Toolkit, and the API slice they provide with createApi makes it amazingly easy to use mocks that the rest of the app is completely unaware of. That’s the workflow that we’re using. Once the frontend is complete and signed off by the stakeholders, we use the JSON mocks as the data contract for the backend and then plug the finished APIs in seamlessly. We can even simulate error and validation responses. \n\nThis approach does mean that some people need to be re-tasked for a while, but once the first round of work is done on the frontend, the backend team can start while the frontend team works ahead on the next section. So, this may not work for every team.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731392144.0,
                    "parent_id": "t3_1gowotc",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpll76/"
                },
                {
                    "id": "lwpunk5",
                    "author": "nader-eloshaiker",
                    "body": "As a lead frontend dev (and some backend dev), I have implemented this on all my projects. We have a 1 point card for crafting the api spec of the feature and then parallel frontend and backend feat development based on the contract. On typescript backends we use Orval.io as the client code can generate react-query calls and the backend team can generate backend server using the same tool. We use a Turbo repo where the backend and frontend and spec all are sub projects of the mono repo. In the 1 point card, we not only craft the endpoint and data models, but also the example responses. These example responses that be used by Orval to produces stubs to feed into MockService worker. Using mock service worker means you don’t have to stub the fetch calls in unit tests, you just let the service work intercept the calls and route the endpoint to the generated stubs. Mock service worker can run in both, a node environment and a browser environment so it can serve tests in jest, the server mock for the backend and also the frontend. \nTake a look at this example app I built as an example if you are interested https://github.com/nader-eloshaiker/screen-geometry-app",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731397727.0,
                    "parent_id": "t3_1gowotc",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpunk5/"
                },
                {
                    "id": "lwpy8d4",
                    "author": "jordanddisch",
                    "body": "Just did this with a Java BE and had to learn Java on the side to get developing. I think this is really just a problem of FE devs not taking the responsibility into their own hands to learn BE frameworks and create their own APIs. I come from a FE background but really appreciated the learning I did in Java. Sure I’m no  true BE engineer but it was very rewarding once you can get your hands dirty in the BE. Also on that note things like Next or Remix solve this problem by moving those responsibilities to “FE” devs as now it’s all in JS. On top of that we have things like HTMX which give you that same SPA like power but for more traditional MVC frameworks. I’m starting to see the flaws in separating developers into FE and BE. Sure you might have more depth in one or the other but you should really strive to do both. Which is my long winded answer to yes api first, but FE devs should be involved in building the APIs as well.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731400119.0,
                    "parent_id": "t3_1gowotc",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpy8d4/"
                },
                {
                    "id": "lwputs2",
                    "author": "nader-eloshaiker",
                    "body": "I’ve used RTK and API slice, I found it to be akin to using spring and using the term spring magic when I try to debug. There’s a great deal of obfuscation with that toolkit which makes it a pain to debug.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731397838.0,
                    "parent_id": "t1_lwpll76",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwputs2/"
                },
                {
                    "id": "lwpuyt3",
                    "author": "memo_mar",
                    "body": "That’s really cool! orval(.dev), right?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731397930.0,
                    "parent_id": "t1_lwpunk5",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpuyt3/"
                },
                {
                    "id": "lwpyemh",
                    "author": "memo_mar",
                    "body": "I tried finding a bit more about 1 point cards (I never heard the term). Do you mind explaining it or sending me a reference?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731400240.0,
                    "parent_id": "t1_lwpunk5",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpyemh/"
                },
                {
                    "id": "lwq0lp6",
                    "author": "nader-eloshaiker",
                    "body": "Yeah the reality is that you should be able to do some development in the backend. This is not the same as architecting the backend, just being able to use existing patterns in the app to add a new api is sufficient. However, you need the backend tech lead to set the patterns for the frontend developers.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731401767.0,
                    "parent_id": "t1_lwpy8d4",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwq0lp6/"
                },
                {
                    "id": "lwpv2tf",
                    "author": "nader-eloshaiker",
                    "body": "Yeah sorry they changed the domain",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731398005.0,
                    "parent_id": "t1_lwpuyt3",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpv2tf/"
                },
                {
                    "id": "lwpymou",
                    "author": "nader-eloshaiker",
                    "body": "Oh when I said 1 point cards, I was referring to agile where we have a backend/frontend feature in the sprint. We will create a dependency card and give it an estimate of 1 point. We’ll call that the contract feature and do our hand crafting of the spec in it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731400397.0,
                    "parent_id": "t1_lwpyemh",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpymou/"
                },
                {
                    "id": "lwpyw7u",
                    "author": "memo_mar",
                    "body": "Ah, that makes a lot of sense. Do you find it easy to hand-craft the specs? Usually there’s a bit of a learning curve (which can be a good thing since you’re forced to think deeply about things).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731400579.0,
                    "parent_id": "t1_lwpymou",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpyw7u/"
                },
                {
                    "id": "lwpyzv4",
                    "author": "nader-eloshaiker",
                    "body": "The backend and frontend devs will get together craft it out and then raise a PR for review. Sometimes we’ll have a specific job in the pipeline for this type of merge that generates all the code and makes a subsequent commit in the merge process. We typically use trunk based releasing and which unfortunately means another commit in main post merge.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731400648.0,
                    "parent_id": "t1_lwpymou",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpyzv4/"
                },
                {
                    "id": "lwpzy7r",
                    "author": "nader-eloshaiker",
                    "body": "It’s actually not as bad as it looks. The backend guys typically inject all the header requirements and authentication requirements and so you don’t get involved in that part, you just need to k ow what headers to include. I typically have ownership of what data I need based on the wireframes from the designers. I have had arguments about orchestration of api calls as I believe the frontend should NOT need to dictate backend Behavior but when dealing with plenty of micro-services and lambdas, sometimes it happens.  Every now and then, we have some disagreements about returning an array of objects vs an individual object. From their perspective, they would prefer me to make a call and get an array to show a list of objects and then when a user clicks on one, it uses the existing list to show details of that specific one on a seperate page. It’s fast and efficient but it useless when the url to the details page is shared. If you land on the details page, without that list cached, you have to send them back to the list page where you can hydrate the cache. Thats just one example where there can be conflict but at least you get to have the conversation and know what to expect vs being handed the api spec post development and told to consume it.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731401313.0,
                    "parent_id": "t1_lwpyw7u",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwpzy7r/"
                },
                {
                    "id": "lwq21e4",
                    "author": "nader-eloshaiker",
                    "body": "Take a look at the OpenAPI spec in my repo I posted earlier. It shows you the minimum you need to make a functional endpoint. It’s actually straight forward",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731402775.0,
                    "parent_id": "t1_lwpyw7u",
                    "link_id": "t3_1gowotc",
                    "permalink": "/r/reactjs/comments/1gowotc/when_working_with_rest_apis_frontend_engineers/lwq21e4/"
                }
            ]
        },
        {
            "id": "1gow6ol",
            "title": "Whats a Reducer and Slice for?",
            "author": "Inmortia",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 26,
            "created_utc": 1731342372.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/",
            "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/",
            "selftext": "**EDIT:** *Thank you all! I had a bit of a mess in my head with this and reading all this definitions and examples helped me a lot and I could do a little reducer/slice dummy. If you are reading this and have the same question, just read comments!*\n\nHello!\n\nI'm trying to add Redux to a project I started a couple months ago. I've been reading around and I think Redux will make my life easier with a couple things but I'm a bit obsesive with structure and order and im having issues to understand whats a Reducer for and whats a Slice for and therefore I don't know how to manage it and where.\n\nEverything I find says \"Reducer manages actions and Slice manages Reducers\" but, you know, thats not a very clear answer (or maybe I'm missing something). That's an answer to somebody that already understood the thing. I've been working (as hobby) with PHP for 10 years and I think my head is stuck with that. I code for fun, nobody explained anything so its hard for me to move from one tech to another.\n\nAs far as I think I understood it, Reducers manage user inputs (actions?), then the results of that are sent to Slices to manage the final state and communicate with the server?\n\nSorry if this question looks stupid but you know its better to look stupid than to be stupid :)\n\nThanks!",
            "comments": [
                {
                    "id": "lwlouip",
                    "author": "AnxiouslyConvolved",
                    "body": "The reducer is where your state gets updated when an action occurs. A slice is a set of actions, combined with a reducer and an initial state which is responsible for a specific partition of your state. They’re separated from the main store to make the state functionality more “modular” A slice is in-essence a “mini-store” which can be combined with other slices to provide separable features to your state machine.",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731343098.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlouip/"
                },
                {
                    "id": "lwqofan",
                    "author": "phryneas",
                    "body": "Redux is based on `Reducer(State, Action) => NewState` where `State` and `NewState` exist inside Redux, not in a specific file.\n\nIn the past, people had a folder for action creators, a folder for reducers etc., which was confusing and annoying.\n\nThen someone said \"let's put it in the same file\" and called that \"Ducks pattern\".\n\nThen /u/acemarke said \"our action creators almost always look like `payload => ({ type: \"something\", payload )` and created slices.\n\nA slice is a data structure that contains a reducer and action creators, but to define it you only write a bunch of \"sub-reducers\" that get turned into one big reducer and auto-generated action creators.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731415817.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwqofan/"
                },
                {
                    "id": "lwlr1do",
                    "author": "jamesremuscat",
                    "body": "I'm not sure I can explain it better than the excellent [RTK documentation](https://redux-toolkit.js.org/introduction/getting-started), which I wholeheartedly recommend to you; but in a very compressed nutshell:\n\nA _slice_ is what it sounds like: a slice, or portion, of your application's state management. This includes the state itself; a bunch of different _actions_ that can cause the state to change; and _reducers_ that make changes to the state in response to actions.\n\nIn a typical application, you'd define a bunch of different slices representing functional areas of your application - so, inventing a personal organiser type application, you might have a \"calendar\" slice, a \"todo\" slice, a \"contacts\" slice, etc. - each defining how that bit of your application's state behaves.\n\nTaking this further: your \"todo\" slice (why is \"todo\" always the go-to example for these things?) might have a \"list of todo items\" as its state; actions of \"add item\", \"mark item as done\", \"delete item\", and reducers like \"when I see an 'add item' action, take the item attached to it and put it into the state\".\n\n(Ninja edit having re-read your question) All of this is _internal_ to your application, and nothing about it is talking to a server or even expecting that a server exists. There are special tools if you're wanting to do data fetching/sending to some API ([RTK Query](https://redux-toolkit.js.org/rtk-query/overview) amongst others) but nothing in core Redux relates to or requires it.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731343772.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlr1do/"
                },
                {
                    "id": "lwosxfv",
                    "author": "Cannabat",
                    "body": "As described in the RTK docs, it’s probably best to think of redux as an event-driven state mgmt solution. \n\nYou have your state (an object), actions (something that happens in the app ie an event), and reducers (functions that are called when actions occur and which change the state). \n\nFor example, you have a counter state (just a number), events incrementCounter and decrementCounter (which you dispatch), and reducers for each event (which do what you’d expect for an increment or decrement event).\n\nWhen the user clicks the increment button, you dispatch the incrementCounter event. A reducer sees that event and responds by adding 1 to the counter state. \n\nA slice is a logical collection of state, action and reducer. You don’t have to structured it this way but it generally makes sense. ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731379348.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwosxfv/"
                },
                {
                    "id": "lwr5fyj",
                    "author": "a_reply_to_a_post",
                    "body": "the concept of global state, not just redux, is having access to an object outside of the render tree\n\nreact context does this with the cost of rerendering every child element\n\nsay your global state contains 2 elements\n\n```\n{\n user,\n items\n}\n```\nif you use react context for this, if you update user or items, everything in that context updates with the new values generally\n\nwith redux, the user is a slice of state, and items are a slice of state...there will be a user reducer and an items reducer, and if you update user, only the elements that consume user will rerender, or if you update items, only the components that consume items will rerender\n\nthis is a overly simplified generalization though",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731422457.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwr5fyj/"
                },
                {
                    "id": "lwn4kus",
                    "author": "arpan4",
                    "body": "I read the post but couldn't understand the exact difference between reducers and actions.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731358887.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwn4kus/"
                },
                {
                    "id": "lwlqtsh",
                    "author": "IncontestableGrey",
                    "body": "I recommend Zustand instead of Redux  [https://github.com/pmndrs/zustand](https://github.com/pmndrs/zustand) especially if you don't need complex state management.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731343706.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlqtsh/"
                },
                {
                    "id": "lwories",
                    "author": "Agile-Ad5489",
                    "body": "I hate the NIH naming of JS\n\n  \nStore: rather like a database\n\nSlice: rather like a table in the DB\n\nReducer: like stored procedure to update the table\n\nThere’s also triggers - set where/when you use the slice: you tell it if x dependants change, trigger the reducer/stored procedure to update the slice/table in the store/database",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731378828.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwories/"
                },
                {
                    "id": "lwlzckw",
                    "author": "ShinyMercenary",
                    "body": "For reducing and slicing",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731346330.0,
                    "parent_id": "t3_1gow6ol",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlzckw/"
                },
                {
                    "id": "lwlw2j3",
                    "author": "Inmortia",
                    "body": "I see, a Slice its like small parts of a Reducer which makes sense looking at his name, your info is way more clearer now with james reply! i'll start working and see if I can make it work\n\nThanks :)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731345321.0,
                    "parent_id": "t1_lwlouip",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlw2j3/"
                },
                {
                    "id": "lwro8s3",
                    "author": "acemarke",
                    "body": "Also worth noting that I created the term \"slice reducer\" all the way back in late 2016, long before we even thought of creating RTK :)\n\nI wrote this \"reducer terms\" page in summer 2016, and it specifically uses the term \"slice reducer\"\n\n- https://redux.js.org/usage/structuring-reducers/splitting-reducer-logic",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731428611.0,
                    "parent_id": "t1_lwqofan",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwro8s3/"
                },
                {
                    "id": "lwlu65w",
                    "author": "Inmortia",
                    "body": "Oh, I think I had everything mixed up. Slices are actually the logic for actions and Reducers just react to those changes made by Slices and update the state? I'm not sure why Redux is being harder for me to understand, I'm losing capabilities.\n\n  \nJust to make an example myself, a blog app would a \"posts\" slice with create, delete, update actions in it doing its own logic and the Reducer would just take those changes and update the state, right?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731344738.0,
                    "parent_id": "t1_lwlr1do",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlu65w/"
                },
                {
                    "id": "lwq6vx3",
                    "author": "jamesremuscat",
                    "body": "An _action_ is a statement of what you would like to happen: \"Add this todo-list entry to the list\".\n\nA _reducer_ is the code that, on seeing that action get _dispatched_, actually makes the changes to the state and adds the todo-list entry to the list. (I think the name comes from the same place as `Array.reduce` - it takes an initial state and sequence of actions and reduces it to a final state.)",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731406116.0,
                    "parent_id": "t1_lwn4kus",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwq6vx3/"
                },
                {
                    "id": "lwrohjh",
                    "author": "acemarke",
                    "body": "An action is an object that describes \"a thing that happened in the app\":\n\n    const action = {type: \"todos/todoAdded\", payload: \"Buy milk\"}\n\nA reducer is a function that looks at the current `state` value, and the incoming `action`, decides _if_ a new state should be calculated, and if so, returns the new state:\n\n- https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731428688.0,
                    "parent_id": "t1_lwn4kus",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwrohjh/"
                },
                {
                    "id": "lwlvhjm",
                    "author": "Inmortia",
                    "body": "I took a look too, I saw Zustand is easier and faster (i think) but I read its meant to be used for small projects and Redux is better for mid-large projects and I dont know how big my project will be since im just permanentely working on it and I have a huge list of features to work, some of them complex (gonna have fun with them) so to avoid having to move from Zustand to Redux I just choose Redux 😅 I'm just playing it safe tbh, I'm probably overkilling but I'm already suffering having to add Redux when I already started the project and I don't want to add new tech again (at least not short-term).\n\nBut thanks tho :) I will probably use Zustand on a different project just to learn it!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731345142.0,
                    "parent_id": "t1_lwlqtsh",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlvhjm/"
                },
                {
                    "id": "lwruab2",
                    "author": "phryneas",
                    "body": "A slice doesn't store anything, so a database table doesn't seem like a good comparison.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731430475.0,
                    "parent_id": "t1_lwories",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwruab2/"
                },
                {
                    "id": "lwmqa0l",
                    "author": "FoozleGenerator",
                    "body": "Not really. A slice is a slice of state, to manage that slice you need a reducer, along with actions. It isn't a redux term per sé.\n\nA slice is usually a group of logically related modules of your project. For example: Pets, Owners, Dashboard, etc. A redux slice, is a dedicated portion of your state to a certain feature and you group its related reducer and actions: petsReducer.js, petsActions.js, ownersReducer.js, ownersAction.js. Each set of modules handles its portion of state which in redux is an object with a property per feature { pets, owners }. Each portion along with its related modules is the slice.\n\nIn redux toolkit, this is simplified with the createSlice function, which defines its portion of state and its related actions + reducers, while also given pretty awesome type safety.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731354519.0,
                    "parent_id": "t1_lwlw2j3",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwmqa0l/"
                },
                {
                    "id": "lwlvepd",
                    "author": "musical_bear",
                    "body": "No, still off a bit. Maybe this will make it easier to understand; slices did not exist until relatively recently as a concept. They are part of an _optional_ (albeit highly recommended) library written by the redux team that sits on top of redux, and are just a way to write redux patterns in a pleasant way.\n\nSlices contain reducers. Slices define actions. As of recently slices can even define selectors. A slice is just a (successful) modernization that happened to redux to abstract away some of the pain points and also create a set of opinionated conventions.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731345118.0,
                    "parent_id": "t1_lwlu65w",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwlvepd/"
                },
                {
                    "id": "lwylla8",
                    "author": "arpan4",
                    "body": "So basically action is a concept... Rather than a piece of code unlike reducer?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731524278.0,
                    "parent_id": "t1_lwq6vx3",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwylla8/"
                },
                {
                    "id": "lwmx9nv",
                    "author": "Phate1989",
                    "body": "That's FUD unless your planning on having 500+ components zustland is fine",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731356657.0,
                    "parent_id": "t1_lwlvhjm",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwmx9nv/"
                },
                {
                    "id": "lwtwo04",
                    "author": "Agile-Ad5489",
                    "body": "A (materialised) view then?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731453913.0,
                    "parent_id": "t1_lwruab2",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwtwo04/"
                },
                {
                    "id": "lwtwrtc",
                    "author": "Agile-Ad5489",
                    "body": "Or DDL?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731453951.0,
                    "parent_id": "t1_lwruab2",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwtwrtc/"
                },
                {
                    "id": "lx2eg61",
                    "author": "jamesremuscat",
                    "body": "Now we're getting a bit philosophical ;) But yes - an action is a piece of data, not algorithmic code.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731579800.0,
                    "parent_id": "t1_lwylla8",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lx2eg61/"
                },
                {
                    "id": "lwpwo47",
                    "author": "Inmortia",
                    "body": "Yeah, maybe it is but I don't know how big it will be, it depends on my motivation to keep working on it tbh, its a game-like project so it may have 500+ components. I don't really know and I want to learn Redux anyway",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731399059.0,
                    "parent_id": "t1_lwmx9nv",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwpwo47/"
                },
                {
                    "id": "lwtxd4r",
                    "author": "phryneas",
                    "body": "No, a slice as created by `createSlice` is only a convenient object with a reducer and actions - and for those, you wouldn't use database analogies, but event sourcing analogies. Or, with `reducer`, you'd just stay with the name, since it's a name used by JavaScript itself.\n\nIf you mean the other meaning of \"slice\", a subtree of your state, that's just a JavaScript object property. Also no real need to go to databases for an analogy.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731454157.0,
                    "parent_id": "t1_lwtwo04",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwtxd4r/"
                },
                {
                    "id": "lwtynv7",
                    "author": "phryneas",
                    "body": "Also, if you want to stay in that analogy, a view would be a selector and a materialized view would probably be a memoized selector.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731454622.0,
                    "parent_id": "t1_lwtxd4r",
                    "link_id": "t3_1gow6ol",
                    "permalink": "/r/reactjs/comments/1gow6ol/whats_a_reducer_and_slice_for/lwtynv7/"
                }
            ]
        },
        {
            "id": "1gow082",
            "title": "Jest testing React app",
            "author": "Affectionate_Bet_957",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731341928.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gow082/jest_testing_react_app/",
            "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/",
            "selftext": "Hello guys, basically i'm a freelancer, i have good experience with React and Nextjs, recently i got this really good freelancing project, but the lead developer required that we do unit testing using Jest.js for our react application, maybe at the end add End to end testing. I have never done testing only heard of it LOL. how hard can it be ? and how long it should take to learn it and quickly apply ? and where can i learn it ? please help. Thanks!",
            "comments": [
                {
                    "id": "lwwc16z",
                    "author": "Tahirmans",
                    "body": "Testing itself isn’t that hard like you could follow up with documentation and start right away, the problem i face is knowing the things that i have to test in the front end, like what should i be testing.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731494551.0,
                    "parent_id": "t3_1gow082",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lwwc16z/"
                },
                {
                    "id": "lx6c5v0",
                    "author": "azangru",
                    "body": ">  but the lead developer required\n\nYou have a lead developer. Talk to him. Ask him to teach you.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731628933.0,
                    "parent_id": "t3_1gow082",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lx6c5v0/"
                },
                {
                    "id": "lwwea7p",
                    "author": "Affectionate_Bet_957",
                    "body": "idk, i have never testing before but i'll try to use chatgpt a lot alongside copilot",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731495926.0,
                    "parent_id": "t1_lwwc16z",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lwwea7p/"
                },
                {
                    "id": "lwwif6d",
                    "author": "Tahirmans",
                    "body": "Don’t worry about it, im sure your going to find it easy. Let me know when you know like the things were suppose to test as front end developers! Like should we test the things that are rendered or should we test the functionalities in the components. And I’ll let you know as soon as i know.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731498278.0,
                    "parent_id": "t1_lwwea7p",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lwwif6d/"
                },
                {
                    "id": "lwwoj86",
                    "author": "Affectionate_Bet_957",
                    "body": "Yeah im working on a very serious project, let's hope i don't mess up!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731501273.0,
                    "parent_id": "t1_lwwif6d",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lwwoj86/"
                },
                {
                    "id": "lwwonji",
                    "author": "Tahirmans",
                    "body": "Dm me if you need help with anything",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731501328.0,
                    "parent_id": "t1_lwwoj86",
                    "link_id": "t3_1gow082",
                    "permalink": "/r/reactjs/comments/1gow082/jest_testing_react_app/lwwonji/"
                }
            ]
        },
        {
            "id": "1govzsl",
            "title": "tanstack query + memo",
            "author": "jisuo",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731341897.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1govzsl/tanstack_query_memo/",
            "permalink": "/r/reactjs/comments/1govzsl/tanstack_query_memo/",
            "selftext": "I was reading the docs and saw this part:\n\n>The top level object returned from useQuery, useInfiniteQuery, useMutation and the Array returned from useQueries is **not referentially stable**. It will be a new reference on every render. However, the data properties returned from these hooks will be as stable as possible.\n\n  \nSo I wonder if these are two options have performance differences. Would ComponentB with ChildB memoed be faster in theory or does it not matter because the data prop from useQuery is \"stable\"?\n\n    import {memo} from 'react'\n    import {useQuery} from '@tanstack/react-query'\n    \n    type Data = {id: number}\n    type Props = {data: Data}\n    \n    const data: Data[] = [\n      {id: 1},\n      {id: 2},\n      {id: 3},\n      // Etc...\n      {id: 1000},\n    ] \n    \n    async function getData() {\n      return data\n    }\n    \n    export function ComponentA() {\n      const { data } = useQuery({\n        queryKey: ['Data'],\n        queryFn: () => getData, \n      })\n      \n      return (\n        <>\n          {data.map((d) => (<ChildA key={d.id} data={d} />))}\n        </>\n      )\n    }\n    \n    export function ChildA({ data }: Props) {\n      return <>{data.id}</>\n    }\n    \n    export function ComponentB() {\n      const { data } = useQuery({\n        queryKey: ['Data'],\n        queryFn: () => getData, \n      })\n      \n      return (\n        <>\n          {data.map((d) => (<ChildB key={d.id} data={d} />))}\n        </>\n      )\n    }\n    \n    function ChildBFn({ data }: Props) {\n      return <>{data.id}</>\n    }\n    \n    export const ChildB = memo(ChildBFn, areEqual)\n    \n    function areEqual(prev: Props, next: Props) {\n      return prev.id === next.id\n    }",
            "comments": [
                {
                    "id": "lwn56kl",
                    "author": "octocode",
                    "body": "smells like overengineering unless you actually have a measurable performance problem",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731359073.0,
                    "parent_id": "t3_1govzsl",
                    "link_id": "t3_1govzsl",
                    "permalink": "/r/reactjs/comments/1govzsl/tanstack_query_memo/lwn56kl/"
                },
                {
                    "id": "lwlx938",
                    "author": "kryptogalaxy",
                    "body": "Given the size of the components, memoization would be slower. If the child component had a longer time to render and the parent component was updating a lot, memo might help a little.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731345687.0,
                    "parent_id": "t3_1govzsl",
                    "link_id": "t3_1govzsl",
                    "permalink": "/r/reactjs/comments/1govzsl/tanstack_query_memo/lwlx938/"
                }
            ]
        },
        {
            "id": "1govtkn",
            "title": "Getting index.html as response, instead of API data",
            "author": "Adventurous_Plant232",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731341461.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/",
            "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/",
            "selftext": ">import React, { useEffect } from 'react'  \nimport {YOUTUBE\\_API\\_URL} from \"../utils/constants\"  \nconst VideoContainer = () => {  \nconst getVideos = async ()=>{  \nconst p = await fetch(YOUTUBE\\_API\\_URL);  \nconsole.log(p);  \nconst json = await p.text();  \nconsole.log(json);  \n}  \nuseEffect(()=>{  \ngetVideos();  \n},\\[\\])  \nreturn (\n\n><div>  \n\n\n>hi\n\n></div>  \n\n\n>)  \n}\n\n>export default VideoContainerimport React, { useEffect } from 'react'\n\nThis is the code. Instead of API data, I am getting this as response-\n\n><!DOCTYPE html>\n\n\n><html lang=\"en\">\n\n\n><head>\n\n\n><meta charset=\"utf-8\" />\n\n\n><link rel=\"icon\" href=\"/favicon.ico\" />\n\n\n><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n\n><meta name=\"theme-color\" content=\"#000000\" />\n\n\n><meta\n\n>name=\"description\"\n\n>content=\"Web site created using create-react-app\"\n\n>/>\n\n><link rel=\"apple-touch-icon\" href=\"/logo192.png\" />\n\n\n><link rel=\"manifest\" href=\"/manifest.json\" />\n\n\n><title>React App</title>\n\n\n><script defer src=\"/static/js/bundle.js\"></script></head>\n\n\n><body>\n\n\n><noscript>You need to enable JavaScript to run this app.</noscript>\n\n><div id=\"root\"></div>\n\n\n></body>\n\n\n></html>\n\n\nThe YOUTUBE\\_API\\_URL works fine on browser.\n\nEdit:\n\n>const YOUTUBE\\_API\\_URL = \"https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&regionCode=US&key=\" + GOOGLE\\_API\\_KEY;\n\nEdit 2:\n\nI resolved the issue. Actually, I just forgot to export the YOUTUBE\\_API\\_URL.",
            "comments": [
                {
                    "id": "lwlne90",
                    "author": "Cool-Escape2986",
                    "body": "I think you should use the full url syntax, somthing like [`https://www.domain.com/api/v1`](https://www.domain.com/api/v1) and not just a pathname, could you show us the youtube api url (without the api key ofc)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731342646.0,
                    "parent_id": "t3_1govtkn",
                    "link_id": "t3_1govtkn",
                    "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/lwlne90/"
                },
                {
                    "id": "lwlmxpp",
                    "author": "ClydeFrog04",
                    "body": "what is your utils/constans/YOUTUBE\\_API\\_URL defined as?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731342504.0,
                    "parent_id": "t3_1govtkn",
                    "link_id": "t3_1govtkn",
                    "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/lwlmxpp/"
                },
                {
                    "id": "lwlp0rb",
                    "author": "Deltaisfordeath2",
                    "body": "Do you have client side routing in your project? If so you need to make sure to proxy your API calls.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731343150.0,
                    "parent_id": "t3_1govtkn",
                    "link_id": "t3_1govtkn",
                    "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/lwlp0rb/"
                },
                {
                    "id": "lwlt8z9",
                    "author": "No-Method-8158",
                    "body": "Why don't you add this all in gist and send here",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731344448.0,
                    "parent_id": "t3_1govtkn",
                    "link_id": "t3_1govtkn",
                    "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/lwlt8z9/"
                },
                {
                    "id": "lwlqkzw",
                    "author": "Adventurous_Plant232",
                    "body": "const YOUTUBE\\_API\\_URL = \"[https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&regionCode=US&key=](https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&regionCode=US&key=)\" + GOOGLE\\_API\\_KEY;",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731343631.0,
                    "parent_id": "t1_lwlmxpp",
                    "link_id": "t3_1govtkn",
                    "permalink": "/r/reactjs/comments/1govtkn/getting_indexhtml_as_response_instead_of_api_data/lwlqkzw/"
                }
            ]
        },
        {
            "id": "1goua8i",
            "title": "Drag and Drop interface Builder",
            "author": "pkrakesh",
            "score": 14,
            "upvotes": 14,
            "downvotes": 0,
            "num_comments": 7,
            "created_utc": 1731337592.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/",
            "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/",
            "selftext": "How to create a web application which allows users to build UI drag and drop like Wix? What are the best libraries for this?",
            "comments": [
                {
                    "id": "lwlax0y",
                    "author": "pottaargh",
                    "body": "[Puck](https://puckeditor.com)",
                    "score": 14,
                    "upvotes": 14,
                    "downvotes": 0,
                    "created_utc": 1731338686.0,
                    "parent_id": "t3_1goua8i",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwlax0y/"
                },
                {
                    "id": "lwlcuuz",
                    "author": "AccessiBuddy",
                    "body": "Could try\n\nhttps://craft.js.org or https://grapesjs.com",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731339320.0,
                    "parent_id": "t3_1goua8i",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwlcuuz/"
                },
                {
                    "id": "lwly9bz",
                    "author": "IncontestableGrey",
                    "body": "[https://dndkit.com/](https://dndkit.com/) or [https://swapy.tahazsh.com/](https://swapy.tahazsh.com/)",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731345995.0,
                    "parent_id": "t3_1goua8i",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwly9bz/"
                },
                {
                    "id": "lwl95e7",
                    "author": "ConstructionNext3430",
                    "body": "I’d imagine wix made a custom library built off components similar to those in shadcn, radix, metlUI, etc. there’s no prebuilt component library out there for building website builder’s i 🍩 think",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731338106.0,
                    "parent_id": "t3_1goua8i",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwl95e7/"
                },
                {
                    "id": "lwle8bf",
                    "author": "b_redditer",
                    "body": "Damn\nYou made this?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731339765.0,
                    "parent_id": "t1_lwlax0y",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwle8bf/"
                },
                {
                    "id": "lwlef36",
                    "author": "pottaargh",
                    "body": "Ha, no I’m not that smart",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731339825.0,
                    "parent_id": "t1_lwle8bf",
                    "link_id": "t3_1goua8i",
                    "permalink": "/r/reactjs/comments/1goua8i/drag_and_drop_interface_builder/lwlef36/"
                }
            ]
        },
        {
            "id": "1gotghn",
            "title": "How to fetch data from API before components render in React (without Next.js)?",
            "author": "sina-gst",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 4,
            "created_utc": 1731335394.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/",
            "permalink": "/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/",
            "selftext": "I followed these steps to create a React project using SSR (thanks to Vite):  \n`npm create vite`  \n`Select a framework: Others`  \n`Select a variant: create-vite-extra`  \n`Select a template: ssr-react`  \n`Select a variant: Streaming`  \n`Select a variant: JavaScript`\n\nIf I fetch data inside `useEffect` (client-side), it'll display the data with a delay. What I want to achieve is to fetch data server side, but I don't really know what to do, as I'm new to React! Any idea?",
            "comments": [
                {
                    "id": "lwp8s23",
                    "author": "SuccessfulStrength29",
                    "body": "In vite setup, it's a foundation for SSR not a full fledged framework, you cannot fetch data in a clean way like in next. Anyway, in server.js file you need to check the url path where req is coming from and based on that fetch data and embed in html template (content won't load without JS). But remember if you use Link component of any router like react router. The data fetching won't work.\n\nI don't know your requirements but if you want to specially learn these aspects with vite check out [Kyrix](https://kyrix.evolveasdev.com).\n\n**If you just want to build something then just use Remix, it uses vite now.**",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731385650.0,
                    "parent_id": "t3_1gotghn",
                    "link_id": "t3_1gotghn",
                    "permalink": "/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/lwp8s23/"
                },
                {
                    "id": "lwlnsog",
                    "author": "jessepence",
                    "body": "You need to fetch the data on your server and then send it along with the page somewhere that React can read it while hydrating the page. Usually, this is achieved by sending along an extra script that simply sets some variables on the window object. With classic SSR in Next.js, it uses window.__Next_Data__. Now, it uses RSCs to stream in the data, but that's beside the point (and it still uses extra script tags on the page). \n\n\n[Here's a good tutorial I found.](https://thenewstack.io/how-to-build-a-server-side-react-app-using-vite-and-express/).",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731342771.0,
                    "parent_id": "t3_1gotghn",
                    "link_id": "t3_1gotghn",
                    "permalink": "/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/lwlnsog/"
                },
                {
                    "id": "lwn6s07",
                    "author": "dannytaki",
                    "body": "Use Tanstack react query\nhttps://tanstack.com/query/latest/docs/framework/react/overview",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731359559.0,
                    "parent_id": "t3_1gotghn",
                    "link_id": "t3_1gotghn",
                    "permalink": "/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/lwn6s07/"
                },
                {
                    "id": "lwmcusx",
                    "author": "Dualblade20",
                    "body": "Components in Next are server by default. As long as its not been imported by a client component or use client APIs like hooks, if you just fetch directly in the body of the component, that will happen on the server.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731350435.0,
                    "parent_id": "t3_1gotghn",
                    "link_id": "t3_1gotghn",
                    "permalink": "/r/reactjs/comments/1gotghn/how_to_fetch_data_from_api_before_components/lwmcusx/"
                }
            ]
        },
        {
            "id": "1gorf2d",
            "title": "Infinite loop when dispatching redux action",
            "author": "moocowmaniak",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 8,
            "created_utc": 1731329369.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/",
            "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/",
            "selftext": "Hey, I'm currently experiencing an issue in a useEffect of my hook. \n\nFirst off, I call the hook in a page like this:\n\nPaymentSummaryPage.component.tsx\n\n      useEffect(() => {    \n        // run health check manually, as it's disabled for payment related pages\n        (async () => {\n          await fetchHealthCheck();\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\nBelow is the method for fetchHealthCheck:\n\n  \nuseHealthCheck.ts:\n\n      const fetchHealthCheck = async () => {\n        const diagnosticsResult = (await dispatch(fetchDiagnosticsAction()))\n          .payload as {\n          diagnosticItems: AdminDiagnosticItem[];\n          response: AdminDiagnosticsResponse;\n        };\n    \n        const healthCheckResult = (await dispatch(fetchHealthCheckAction()))\n          .payload as HardwareStatuses;\n    \n        if (!diagnosticsResult || !healthCheckResult) return;\n    \n        const statusMetric: DeviceStatusMetric = {\n          hardwareId: diagnosticsResult.response.deviceId,\n          metricName: \"Device Status\",\n          status: \"Okay\",\n          value: \"Device in service.\",\n        };\n    \n        let issue: string | null = null;\n    \n        if (!healthCheckResult.api)\n          issue = \"Cannot connect to API.\";\n        if (kioskManuallyClosed) issue = \"Device has been manually closed.\";\n    \n        if (issue) {\n          statusMetric.status = \"Issue\";\n          statusMetric.value = issue;\n        }\n    \n        await dispatch(postDeviceStatusMetric(statusMetric));\n      };\n    \n\nRemoving the line dispatch(postDeviceStatusMetric) completely stops this issue, but obviously the device status metric never gets sent.\n\n  \nInterestingly, I don't rely on the device status metric anywhere in my hook or component - so I don't know why this would be triggering a constant re-render of my component. I've been stumped on this particular issue for days now and have tried many different ways of refactoring and fixing this, all resulting in the same exact result.\n\n  \nAlso worth noting: There's nothing in the postDeviceStatus action which alters the health check status. All this action does is POST data to an API.\n\n  \nI'm aware my use of Redux isn't great, so please bare with me - but I'm pulling hairs out at the minute and I'm asking for advice as a last resort. Any help would be massively appreciated - thanks!",
            "comments": [
                {
                    "id": "lwkn6fy",
                    "author": "adarshsingh87",
                    "body": "Are you using \\`postDeviceStatusMetric\\` in parent of \\`PaymentSummaryPage.component.tsx\\` if so the dispatch action re-renders the whole component resulting in the useEffect being triggered again. I'd suggest using the React components extension and use the \"highlight when re-render\" option.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731329784.0,
                    "parent_id": "t3_1gorf2d",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwkn6fy/"
                },
                {
                    "id": "lwkmv4a",
                    "author": "moocowmaniak",
                    "body": "Apologies if this is the wrong sub to ask in, hope someone can point me in the right direction if not!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731329644.0,
                    "parent_id": "t3_1gorf2d",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwkmv4a/"
                },
                {
                    "id": "lwkqenu",
                    "author": "justjooshing",
                    "body": "Something is causing the useEffect to run again, but nothing here indicates that. What does the parent component look like?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731331165.0,
                    "parent_id": "t3_1gorf2d",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwkqenu/"
                },
                {
                    "id": "lwkni8e",
                    "author": "moocowmaniak",
                    "body": "No, this is the only call to that action in the whole app. Strangely, this code executes perfectly elsewhere on the app where health checks are ran in the background. This page is the only one with issues, and it's also the only page where we manually call health check when the page initially loads.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731329929.0,
                    "parent_id": "t1_lwkn6fy",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwkni8e/"
                },
                {
                    "id": "lwlaalq",
                    "author": "moocowmaniak",
                    "body": "It's a rather large component, but I've triple checked and found nothing in that component that causes the infinite re-rendering. In fact, the infinite re-rendering disappears completely when I remove the dispatch from the hook method.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731338481.0,
                    "parent_id": "t1_lwkqenu",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwlaalq/"
                },
                {
                    "id": "lwlatzk",
                    "author": "bluebird355",
                    "body": "Because your dispatch changes something and that something is probably triggering a rerender and that rerender is triggering that function again  \nYou have to find that something, what is that dispatch updating exactly?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731338658.0,
                    "parent_id": "t1_lwlaalq",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwlatzk/"
                },
                {
                    "id": "lwlcq1k",
                    "author": "moocowmaniak",
                    "body": "This was my first thought, but I can't seem to find anything that updates state in the dispatch.\n\nFrom the device status module:\n\n    export const deviceStatusMetrics = createSlice({\n      name: \"deviceStatusMetrics\",\n      initialState,\n      reducers: {\n        setPendingStatusAction: function (\n          state,\n          action: PayloadAction<DeviceStatusMetric | null>\n        ) {\n          state.pendingStatus = action.payload;\n        },\n      },\n    });\n    \n    // eslint-disable-next-line u/typescript-eslint/no-explicit-any\n    export const postDeviceStatusMetric = createAsyncThunk<any, DeviceStatusMetric>(\n      \"deviceStatusMetrics/postDeviceStatusMetric\",\n      async (deviceStatusMetric: DeviceStatusMetric) => {\n        const { data } = await deviceStatusAPI.postDeviceStatus(deviceStatusMetric);\n        return data;\n      }\n    );\n\nAnd from the device status API:\n\n    import { commonAPI } from \"../config/commonConfig\";\n    import { DeviceStatusMetric } from \"../types/deviceStatus\";\n    \n    export const deviceStatusAPI = {\n      postDeviceStatus: async (deviceStatusMetric: DeviceStatusMetric) => {\n        return await commonAPI.post(\"/metrics/device-status\", {\n          ...deviceStatusMetric,\n        });\n      },\n    };\n\nAs you can imagine I'm a bit stumped, there's no state changes being triggered as far as I can see. But that dispatch line, when removed, completely stops the infinite looping. Haven't seen this before.\n\n  \nAlso, PaymentSummaryPage does not use any state from the device status module so if anything was updated that component shouldn't re-render anyway as far as I'm aware",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731339276.0,
                    "parent_id": "t1_lwlatzk",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwlcq1k/"
                },
                {
                    "id": "lwm7fx4",
                    "author": "bluebird355",
                    "body": "What about PaymentSummaryPage.component.tsx parent? Is there any call of that slice data?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731348787.0,
                    "parent_id": "t1_lwlcq1k",
                    "link_id": "t3_1gorf2d",
                    "permalink": "/r/reactjs/comments/1gorf2d/infinite_loop_when_dispatching_redux_action/lwm7fx4/"
                }
            ]
        },
        {
            "id": "1gorb8y",
            "title": "React Multi-Pane Stock Charts using Subcharts",
            "author": "Character_Line_7813",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731329027.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gorb8y/react_multipane_stock_charts_using_subcharts/",
            "permalink": "/r/reactjs/comments/1gorb8y/react_multipane_stock_charts_using_subcharts/",
            "selftext": "Can I create Multi-pane stock graph in React using recharts library or any other library. I wanted to create something like this.",
            "comments": []
        },
        {
            "id": "1goqfex",
            "title": "handling sidebar responsiveness in react",
            "author": "Single_Brilliant1693",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731325882.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1goqfex/handling_sidebar_responsiveness_in_react/",
            "permalink": "/r/reactjs/comments/1goqfex/handling_sidebar_responsiveness_in_react/",
            "selftext": "    import React, { useState, useEffect } from \"react\";\n    import logo from \"../assets/logo.png\";\n    import { ChevronFirst, ChevronLast, Menu, MoreVertical } from \"lucide-react\";\n    import boy from \"../assets/boy.png\";\n    import useNavToggle from \"../store/store\";\n    import { redirect, useNavigate } from \"react-router-dom\";\n    import { useCallback } from \"react\";\n    import useStore from \"../store/store\";\n    import { FaHamburger } from \"react-icons/fa\";\n    \n    const Sidebar = ({ children }) => {\n    \n    const navigate=useNavigate()\n    \n      const { setUser } = useStore();\n      const { value, user } = useNavToggle();\n      const [isOpen, setIsOpen] = useState(false);\n      const [isSmallScreen, setIsSmallScreen] = useState(null);\n      const [openDropMenu, setOpenDropMenu] = useState(false)\n      const toggleSidebar = () => {\n        setIsOpen(!isOpen);\n      };\n      const toggleVal = () => {\n        toggle();\n      };\n      useEffect(() => {\n        const handleResize = () => {\n          setIsSmallScreen(window.innerWidth < 768);\n          setOpenDropMenu(false)\n        };\n    \n        window.addEventListener(\"resize\", handleResize);\n    \n        return () => {\n          window.removeEventListener(\"resize\", handleResize);\n        };\n      }, []);\n      const handelChange = () => {\n        setIsOpen((prev) => !prev);\n      };\n    \n    \n      const handelLogOut = () => {\n        console.log(\"loging out\")\n        localStorage.clear(\"id\")\n        localStorage.clear(\"token\")\n        setUser(null)\n        navigate(\"/user-logout\")\n    \n      }\n      return (\n        <>\n          <aside\n            className={`h-screen transition-transform duration-300 ease-in-out w-64 top-0 z-50 pb-3 ${isSmallScreen ? (isOpen ? \"block w-16 fixed\" : \"hidden\") : \"block\"\n              }`}\n          >\n            <nav\n              className={`h-full flex flex-col shadow-sm border-r bg-white  ${isSmallScreen ? \"absolute transition ease-in-out\" : \"flex\"\n                }  `}\n            >\n              <div\n                className={\n                  \"p-4 pb-2 flex items-center   overflow-hidden transition-all  justify-between\"\n                }\n              >\n                <img src={logo} alt=\"logo\" className=\"w-32\" />\n                {/* {!isSmallScreen && (\n                  <button\n                    onClick={toggleVal}\n                    className=\"p-1.5  rounded-xl bg-gray-50 hover:bg-gray-100\"\n                  >\n                    {value ? <ChevronFirst /> : <ChevronLast />}\n                  </button>\n                )} */}\n              </div>\n    \n              <ul className=\"flex-1 px-3\">{children}</ul>\n              <div className=\"border-t flex p-3 relative\">\n                <img src={boy} alt=\"boy\" className=\"w-10 h-10 \" />\n                <div className=\"flex justify-between items-center overflow-hidden w-44 ml-4   transition-all\">\n    \n                  <div className=\"leading-4\">\n                    <h4 className=\"font-semibold\">{user?.firstName}{user?.lastName}</h4>\n                    <span className=\"text-xs text-gray-600\">\n                      {user?.email}\n                    </span>\n                  </div>\n    \n                  <MoreVertical size={20} onClick={() => setOpenDropMenu(!openDropMenu)} />\n                </div>\n                {\n                  openDropMenu &&\n                  <div className=\"absolute left-36 bottom-14 w-[90px] rounded-lg p-2 text-white bg-blue-400 \">\n    \n                    <button onClick={() => {\n                      handelLogOut();\n                    }} className=\" bg-blue-400\">Log out</button>\n                  </div>\n                }\n              </div>\n    \n            </nav>\n          </aside>\n          {isSmallScreen && (\n            <div\n              className=\"absolute right-2 top-4  \"\n    \n            >\n              <Menu  onClick={()=>handelChange()}/>\n            </div>\n          )}\n        </>\n      );\n    };\n    \n    export default Sidebar;\n    \n    export function Item({ icon, text, active }) {\n      const { setActive, activeitem } = useStore();\n      const navigate = useNavigate();\n      const handleNavigation = useCallback(() => {\n    \n        setActive(text);\n        navigate(text === \"Dashboard\" ? \"/dashboard\" : `${text}`);\n      }, [text]);\n      const isActive = activeitem === text;\n    \n      return (\n        <li\n          onClick={handleNavigation}\n          className={`relative flex items-center py-2 px-2 my-1 font-medium rounded-md cursor-pointer transition-colors group ${isActive\n            ? \"bg-gradient-to-tr from-indigo-200 to-indigo-100 text-indigo-800\"\n            : \"hover:bg-indigo-50 text-gray-600\"\n            }`}\n        >\n          {icon}\n          <span\n            className={`overflow-hidden transition-all w-52 ml-3`}\n          >\n            {text}\n          </span>\n        </li>\n      );\n    }\n    \n      \n    is this a better approach to handle side bar ? also for me even in  mobile view initally the sidebar shows, only if i resize the browser windows even by a inch size it automatically changes to mobile view",
            "comments": [
                {
                    "id": "lwkpsnt",
                    "author": "redbull_coffee",
                    "body": "This question would probably be better placed over at stackoverflow",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731330910.0,
                    "parent_id": "t3_1goqfex",
                    "link_id": "t3_1goqfex",
                    "permalink": "/r/reactjs/comments/1goqfex/handling_sidebar_responsiveness_in_react/lwkpsnt/"
                }
            ]
        },
        {
            "id": "1gont3i",
            "title": "React State and Memory Leaks",
            "author": "ilustruanonim",
            "score": 22,
            "upvotes": 22,
            "downvotes": 0,
            "num_comments": 18,
            "created_utc": 1731314682.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/",
            "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/",
            "selftext": "I'm having a look at this article\n\n  \n[https://medium.com/@abubakarmemon/memory-leaks-in-react-js-b611745c5f08](https://medium.com/@abubakarmemon/memory-leaks-in-react-js-b611745c5f08)\n\nAnd it says\n\n>Storing large data sets or unnecessary data in the component’s state can lead to memory leaks, especially if the data is not properly cleaned up when it’s no longer needed.\n\nIs it true, do you have to manually clean the data in the State, does it not get cleaned up automatically after component is no longer used? \n\nIs the answer the same for both Class and Functional components?\n\nIt's the first time I'm hearing about this.",
            "comments": [
                {
                    "id": "lwk137u",
                    "author": "True-Environment-237",
                    "body": " fetching in useEffect can cause a memory leak if the component unmounts before the fetch request completes so you should use an abort controller. Similar story with event listeners.",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731316801.0,
                    "parent_id": "t3_1gont3i",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwk137u/"
                },
                {
                    "id": "lwkjel7",
                    "author": "yksvaan",
                    "body": "Even if it doesn't usually matter, it's a good programming habit to handle closing of resources. So when you open/add/subscribe etc. something, at least consider how it will be destroyed. Or maybe you actually don't want it to be GC'd and keep it for reuse intentionally. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731328029.0,
                    "parent_id": "t3_1gont3i",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkjel7/"
                },
                {
                    "id": "lwk8jok",
                    "author": "AcidNoX",
                    "body": "I don’t believe this is true any more. See: https://github.com/facebook/react/pull/22114#issuecomment-929191048",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731321869.0,
                    "parent_id": "t1_lwk137u",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwk8jok/"
                },
                {
                    "id": "lwk26ou",
                    "author": "ilustruanonim",
                    "body": "Thanks, did not knew about abort controller. Can't find too much info about classes and fetching, but I suppose there's no harm in using Abort Controller in there as well?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731317568.0,
                    "parent_id": "t1_lwk137u",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwk26ou/"
                },
                {
                    "id": "lwkb107",
                    "author": "Internal_Outcome_182",
                    "body": "Can you explain it more ? What do u mean by memory leak ?\n\nIf some json payload will leak that's totally fine for me. If it's only one case browser will deal with it just fine, if it happens in every component that might sound dangerous. Most of time when i didn't clean properly browser just freezes and is unresponsive.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731323422.0,
                    "parent_id": "t1_lwk137u",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkb107/"
                },
                {
                    "id": "lwkrpyx",
                    "author": "ilustruanonim",
                    "body": "I agree with you it's good practice to handle closing of resources, but I'm interested to know specifically about State.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731331700.0,
                    "parent_id": "t1_lwkjel7",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkrpyx/"
                },
                {
                    "id": "lwlv0gy",
                    "author": "angryloser89",
                    "body": "That's not what their docs say 🤔\n\nhttps://react.dev/learn/synchronizing-with-effects#fetching-data",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731344997.0,
                    "parent_id": "t1_lwk8jok",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwlv0gy/"
                },
                {
                    "id": "lwkbwsv",
                    "author": "True-Environment-237",
                    "body": "Shouldn't risk it. :P",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731323956.0,
                    "parent_id": "t1_lwk8jok",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkbwsv/"
                },
                {
                    "id": "lwk2gpd",
                    "author": "True-Environment-237",
                    "body": "Yea it the same logic. The difference is that you will call the controller inside the componentWillUnmount function. Use chatgpt and it will generate a decent example on that case.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731317762.0,
                    "parent_id": "t1_lwk26ou",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwk2gpd/"
                },
                {
                    "id": "lwkbvdz",
                    "author": "True-Environment-237",
                    "body": "If you modify the state after the fetch and the components has unmounted it can cause a leak in the state. Most of the time the state is small so it is not noticable. If you fetch a huge array and force it to leak it will start getting noticable after some time.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731323932.0,
                    "parent_id": "t1_lwkb107",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkbvdz/"
                },
                {
                    "id": "lwkim20",
                    "author": "Rojeitor",
                    "body": "But you're wrong about the fetching part.  You're right about the event listeners tho.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731327634.0,
                    "parent_id": "t1_lwkbwsv",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkim20/"
                },
                {
                    "id": "lwkeuh8",
                    "author": "moremat_",
                    "body": "That's not true, state is bound to the component itself and calling setState on a component that no longer holds a reference in the tree will simply be ignored. You don't need to worry a reference is kept somewhere.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731325659.0,
                    "parent_id": "t1_lwkbvdz",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkeuh8/"
                },
                {
                    "id": "lwkco3f",
                    "author": "Internal_Outcome_182",
                    "body": "That's what i wrote",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731324406.0,
                    "parent_id": "t1_lwkbvdz",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkco3f/"
                },
                {
                    "id": "lwkg0gj",
                    "author": "True-Environment-237",
                    "body": "https://stackoverflow.com/a/71055662\nSomeone wrote above that react fixed this issue, but it is suggested that it's a good practice to cancel the requested.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731326294.0,
                    "parent_id": "t1_lwkeuh8",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkg0gj/"
                },
                {
                    "id": "lwkgqzh",
                    "author": "moremat_",
                    "body": "I would not suggest the link you posted, if you want to cancel the async request, you'd better look at AbortController. The SO post doesn't cancel anything, it merely keeps track if the effect flow (which'll break eventually when someone adds a dependency to the effect). Just don't do ref trickery to keep track of what React has to do next. :)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731326684.0,
                    "parent_id": "t1_lwkg0gj",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkgqzh/"
                },
                {
                    "id": "lwkgwwy",
                    "author": "True-Environment-237",
                    "body": "That's true. But it used to leak unless it's fixed in earlier versions.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731326769.0,
                    "parent_id": "t1_lwkgqzh",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkgwwy/"
                },
                {
                    "id": "lwkhdai",
                    "author": "moremat_",
                    "body": "Is there any other resource to having setState leak data besides the medium post? I'd like to challenge it a bit. As far as I know, state (or most low level hooks) is bound to the fiber (that's why the order of hooks matters as each hook is internally an index increase for the next one) and I was sure when there's no reference to the underlying fiber, it'd get garbage collected anyways. Sure you'd be allocating memory but aslong as no global reference is kept, GC will kick in.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731327004.0,
                    "parent_id": "t1_lwkgwwy",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkhdai/"
                },
                {
                    "id": "lwkstds",
                    "author": "ilustruanonim",
                    "body": ">Is there any other resource to having setState leak data besides the medium post?\n\nWould really like to find this out as well :)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731332143.0,
                    "parent_id": "t1_lwkhdai",
                    "link_id": "t3_1gont3i",
                    "permalink": "/r/reactjs/comments/1gont3i/react_state_and_memory_leaks/lwkstds/"
                }
            ]
        },
        {
            "id": "1gon61u",
            "title": "Scalable ReactJS Frontend Architecture for a desktop app?",
            "author": "g10z3r",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 7,
            "created_utc": 1731311775.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/",
            "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/",
            "selftext": "Hello everyone,\n\nI’m seeking advice on frontend architecture for a large desktop application being developed in React, with Tauri handling the backend. (ofc, I understand that React wasn’t originally designed for desktop application development.)\n\nOur team consists only of backend developers, so we don’t yet have deep expertise in React. However, we need to design a scalable and well-tested frontend architecture, and here are the key aspects we need to address:\n\n**How to properly organize the business logic layer...?**\n\n\\- Using services through *React Context* doesn’t seem like the most scalable solution. I’d prefer not to put all services into a single context, and creating separate contexts results in tight coupling, where component A must always be nested within the component providing context B.\n\n\\- Relying on *hooks* everywhere also doesn’t seem ideal, given the overall complexity of the project. (Though I could be mistaken in this assumption.)\n\n\\- Since the application is large and complex, we need **lazy initialization** of services and modules.\n\nIn frameworks like Angular, I see clear concepts of services and separation of logic between views, storage, and services. (But I prefer React with its functional components, and Angular is quite resource-intensive.)\n\nIf any of you have experience with large-scale applications or know of open-source examples that could serve as inspiration, I’d greatly appreciate it! How did you design the architecture and manage layer separation in your projects?\n\nThank you in advance for any advice!",
            "comments": [
                {
                    "id": "lwk8tqn",
                    "author": "o1s_man",
                    "body": "what is a \"scalable\" frontend?",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731322049.0,
                    "parent_id": "t3_1gon61u",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lwk8tqn/"
                },
                {
                    "id": "lwkt4zm",
                    "author": "voldemort_thebroken",
                    "body": "I’m gonna go against the popular opinion and recommend redux for breaking the business logic from the view. Yes, it is going to be boilerplate heavy, but structuring/testing business logic separately from the view becomes a breeze with redux. \n\nIf you want less boilerplate, zustand is another state management library which is very un-opinionated about how you structure business logic and you can structure it the way you want to in terms of services and storage. Zustand can basically act as the glue layer between react and your business logic.\n\nAbout a year ago, I wanted to structure my application in MV* fashion where react is only the view layer. All of my research basically pointed to the fact that react wasn’t designed to be this way and the direction of the framework is to be used in a meta framework like Next.js where it is very tightly coupled to the data source and can benefit from edge rendering and streaming. That said, you can still use it as a client side library and architect your application as per your requirement.\n\nP.S I went with zustand and found it to be very workable in separating business logic from the UI components.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731332271.0,
                    "parent_id": "t3_1gon61u",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lwkt4zm/"
                },
                {
                    "id": "lwof0dz",
                    "author": "StoryArcIV",
                    "body": "We built Zedux for managing business logic of complex desktop apps. Switched to it from Redux a few years ago and our apps are much faster and more maintainable.\n\nWe open-sourced it last year, and it sounds like it might be a good fit for you. Some reasons:\n\n- Lazy by default. State is initialized when you use it and destroyed when you stop. You can control this granularly and globally\n- Specifically designed for desktop apps (multi-window support, intuitive side effects model designed for streaming and inter-process communication)\n- Performance. Zedux uses an algorithm similar to SolidJS's signals for raw speed\n- Separation of concerns. It encourages separating business logic from the view layer\n- DI and other architectural similarities to Angular, while staying functional and React-y",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731374353.0,
                    "parent_id": "t3_1gon61u",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lwof0dz/"
                },
                {
                    "id": "lws7fqf",
                    "author": "Brahminmeat",
                    "body": "react-router-dom\n\nTypescript\n\nEslint to save arguments and headaches\n\nStart early with translations via react-i18n\n\nOrganize code in folders for features, not layers\n\nShared components go into a libs folder\n\nVite or webpack are fine, don’t bother with federation unless absolutely necessary",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731434506.0,
                    "parent_id": "t3_1gon61u",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lws7fqf/"
                },
                {
                    "id": "lwkc4bl",
                    "author": "g10z3r",
                    "body": "The word \"scalable\" may not be the best choice here. What I mean is an architecture where the project is structured to make it easy to add new features and modules without complicating navigation or degrading code quality",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731324081.0,
                    "parent_id": "t1_lwk8tqn",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lwkc4bl/"
                },
                {
                    "id": "lwpu43t",
                    "author": "g10z3r",
                    "body": "I've also heard a lot of positive feedback about Zustand. However, from my experience using it, I've noticed that it provides more flexibility in how you design an application, which brings up two challenges:\n\n* Over time, the code's consistency and uniformity can start to degrade.\n* It raises the learning curve for new developers, as they'll need more time to understand your code. In contrast, Redux enforces a strict structure and coding conventions, which makes it easier for developers to follow a consistent architecture.\n\nDid you not encounter these issues?\n\n(I mean, in the context of large applications with many developers working on them)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731397378.0,
                    "parent_id": "t1_lwkt4zm",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lwpu43t/"
                },
                {
                    "id": "lws7phs",
                    "author": "Brahminmeat",
                    "body": "And sorry for business logic use zustand or some other state that is useExternalStore under the hood\n\nThat way you get the portability of hooks while having a single source of stateful truth without any redux boilerplate or mental overhead of the reducer pattern",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731434590.0,
                    "parent_id": "t1_lws7fqf",
                    "link_id": "t3_1gon61u",
                    "permalink": "/r/reactjs/comments/1gon61u/scalable_reactjs_frontend_architecture_for_a/lws7phs/"
                }
            ]
        },
        {
            "id": "1gomz7v",
            "title": "Help me select a hosting for a website made on Next Js! ",
            "author": "Inevitable_Gift8082",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731310908.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/",
            "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/",
            "selftext": "Our website will have 100-150 pages, mainly focused on content and SEO. It's a consulting website. I have been reading reviews and pricing for the option:\n\nVercel, AWS, Digital Ocean, Hostinger, and Heruko. \n\nVercel seems super pricy after some time; AWS has a complex structure. Digital Ocean reviews on Reddit and Trustpilot are not good, and the developer said not to go for Hostonger and Heruko. \n\nI am confused and also non-techy. Please help me select the best option that is also cost-effective and doesn't have hidden costs after purchase. ",
            "comments": [
                {
                    "id": "lwjt05h",
                    "author": "hezarfenbaykus",
                    "body": "Take a look at render.com",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731311343.0,
                    "parent_id": "t3_1gomz7v",
                    "link_id": "t3_1gomz7v",
                    "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/lwjt05h/"
                },
                {
                    "id": "lwkpqc4",
                    "author": "oliphant428",
                    "body": "What about Vercel seemed pricy? How much traffic are you anticipating? Is the site SSG or SSR/ISR? If SSG, you can go with the absolute basics like uploading to an S3 bucket and serving that through Cloudfront. Or Render.com.\n\nIf you need you SSR/ISR, Vercel and Render make it very easy.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731330883.0,
                    "parent_id": "t3_1gomz7v",
                    "link_id": "t3_1gomz7v",
                    "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/lwkpqc4/"
                },
                {
                    "id": "lx1g7ja",
                    "author": "SuccessfulStrength29",
                    "body": "I'm personally using digital ocean vps for self hosting, never had any issues but yeah support response takes time. I don't know your requirements but if it's mostly a static site try deploying in cloudflare pages.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731559301.0,
                    "parent_id": "t3_1gomz7v",
                    "link_id": "t3_1gomz7v",
                    "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/lx1g7ja/"
                },
                {
                    "id": "lwkdf96",
                    "author": "MyVoiceIsElevating",
                    "body": "I’m fond of Firebase. Gives you 1gb of free daily traffic before you’re charged. Does not require any payment to launch a site.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731324852.0,
                    "parent_id": "t3_1gomz7v",
                    "link_id": "t3_1gomz7v",
                    "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/lwkdf96/"
                },
                {
                    "id": "lww0hp1",
                    "author": "Inevitable_Gift8082",
                    "body": "We are anticipating 1000-10,000 visitors a month in a year or so",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486738.0,
                    "parent_id": "t1_lwkpqc4",
                    "link_id": "t3_1gomz7v",
                    "permalink": "/r/reactjs/comments/1gomz7v/help_me_select_a_hosting_for_a_website_made_on/lww0hp1/"
                }
            ]
        },
        {
            "id": "1gofjtp",
            "title": "best practice when testing routing in a header",
            "author": "hnrpla",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731285334.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gofjtp/best_practice_when_testing_routing_in_a_header/",
            "permalink": "/r/reactjs/comments/1gofjtp/best_practice_when_testing_routing_in_a_header/",
            "selftext": "I'm new to both testing in React and using React Router for routing.\n\nI am building an e-commerce site using Vite, have built a <Header /> component that has links to 3 pages, and one that wraps around a button that takes the user to their shopping cart page. This is the current JSX:\n\n    // Header.jsx\n    \n    import { Link, NavLink } from \"react-router-dom\";\n    import { ShoppingBag } from \"lucide-react\";\n    import PageLink from \"./PageLink\";\n    import brandingImage from \"../../assets/images/branding.svg\";\n    import styles from \"./header.module.css\";\n    \n    const Header = () => (\n      <header className={styles.header}>\n        <Link to=\"/\" aria-label=\"Go to home page\">\n          <img\n            className={styles.branding}\n            src={brandingImage}\n            alt=\"Le Vesinet branding\"\n          />\n        </Link>\n    \n        <nav className={styles.pageLinks}>\n          <PageLink text=\"Home\" />\n          <PageLink text=\"Products\" path=\"/products\" />\n          <PageLink text=\"About Us\" path=\"/about-us\" />\n        </nav>\n    \n        <NavLink\n          to=\"/cart\"\n          className={styles.cartLink}\n          aria-label=\"Go to my shopping cart\"\n        >\n          <button type=\"button\" className={styles.cartButton}>\n            <ShoppingBag />\n          </button>\n        </NavLink>\n      </header>\n    );\n    \n    export default Header;\n\nhere is an example of my test for one of the links (very similar for the <button> as well) using React Testing Library (RTL) and Vitest. To keep this post brief, I haven't included the test for whether the links have been rendered, but those tests have passed. However, none of the PageLinks nor the cart button actually passes the expected path name (i.e. although I expect the window.location.pathname to be \"/products\" when you click the \"Products\" nav link, it actually just stays at \"/\"):\n\n    //header.test.jsx\n     \n    it(\"navigates to products page after product link is clicked\", async () => {\n       const user = userEvent.setup();\n       render(\n         <MemoryRouter>\n           <Header />\n         </MemoryRouter>\n       );\n    \n       await user.click(screen.getByText(\"Products\"));\n       expect(window.location.pathname).toBe(\"/products\");\n     });\n\nwhat am I missing? \n\nthank you guys for your help, I've been wrestling with this for the past 2 hours with a lot of conflicting information on StackOverflow.",
            "comments": [
                {
                    "id": "lwieh1g",
                    "author": "ordnannce",
                    "body": "A couple points.\n\n1. You're using a MemoryRouter, which I don't think will interact with window.location at all, so it will never change. There is \\_some state\\_ you can assert will change, but it will be in a router context somewhere, you'll have to look at the docs.\n2. Depending on what you're up to with testing, like if you're using JSDOM or whatever, you'll still not have some stuff related to window, I'm not sure about location or pathname. So lets say you changed from a memory router to a browser router, I think you also need to do some jsdom setup to let things like links work.\n\nGood ole Kent C Dodds should have some articles or blogs or tweets or whatever about this. Like, the Epic Stack is based in Remix, he'll be using his own testing framework lib in that, and previous to that I'm assuming he was mainly on the react-router buzz. Some code will be around to steal. Here's some stuff: [https://testing-library.com/docs/example-react-router/](https://testing-library.com/docs/example-react-router/)\n\nMore thoughts: Do you need to test it actually \\_goes somewhere\\_? Like, you don't need to test an \\`a\\` tag actually does what an \\`a\\` tag should do in a web browser. Could you instead test the properties of the resulting rendered link? e.g it has a particular href (\\`/products\\`), it has a particular title, active class, etc, etc. Then you'd get around all this nonsense.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731288809.0,
                    "parent_id": "t3_1gofjtp",
                    "link_id": "t3_1gofjtp",
                    "permalink": "/r/reactjs/comments/1gofjtp/best_practice_when_testing_routing_in_a_header/lwieh1g/"
                }
            ]
        },
        {
            "id": "1gof9yt",
            "title": "How do I start building the backend for my React Native app (similar to eBay)?",
            "author": "Tricky_Hotel6456",
            "score": 10,
            "upvotes": 10,
            "downvotes": 0,
            "num_comments": 8,
            "created_utc": 1731284519.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/",
            "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/",
            "selftext": "Hi all! I recently finished the frontend for my React Native app, which is somewhat similar to eBay in functionality—it has listings, user accounts, messaging, and search features. Now I'm ready to dive into the backend, but I’m a bit lost on where to start and which tech stack to choose.\n\n# Here are some of the key features the backend needs to support:\n\n* User authentication and accounts\n* Posting and viewing product listings\n* Messaging between users\n* A search and filtering system for products\n* Payment integration (planning to add this eventually)\n\n# A few questions:\n\n1. **Tech Stack:** What tech stack would you recommend for this type of project? I’ve looked into Node.js + Express with MongoDB, but I’m not sure if that's the best fit.\n2. **Hosting/Database:** What are good hosting options for a project like this? I’m looking for something that’s scalable but also affordable to start with.\n3. **Authentication:** Is it better to handle user authentication in-house (e.g., JWT) or use a service like Firebase/Auth0?\n4. **Any Tips for Structuring the Backend:** Are there best practices for structuring my API routes and organizing code for a marketplace app?\n\nAny guidance, resources, or examples would be super helpful! Thanks in advance 😊",
            "comments": [
                {
                    "id": "lwi75dr",
                    "author": "r3d0c_",
                    "body": "this is the reactjs sub but i'll answer this anyways\n\nim going to assume this is your first backend server app?\n\n\\* stick with nodejs & express, zod for validation  \n\\* use a free service like supabase or firebase, they also have built in authentication, learn sql  \n\\* other route is to use a nosql service (mongodb) and use either of those 2  \n\\* use a cheap vps provider for a few dollars to start out; digital ocean, ovhcloud, contabo, vultr, one of those hosts\n\nif this is your first backend app then you shouldn't be thinking about scaling or cost or anything about marketplace apps; you should get the basics of making a basic rest app, sql, & authentication down\n\nactually getting to the scale of ebay needs years of experience & teams of people since it's much more than a simple rest api app, past a certain scale you have to build your own infrastructure that specifically caters to the needs of the platform and this is all just the technical stuff, the economics is its own thing; not trying to discourage you since everyone has to start somewhere but you gotta pace yourself",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731286157.0,
                    "parent_id": "t3_1gof9yt",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwi75dr/"
                },
                {
                    "id": "lwi9ikt",
                    "author": "Dartamus",
                    "body": "Honestly I’d look at supabase if it was me. You will be able to do what you’re looking for. The docs are good and they make it very easy to do user authentication and account management.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731287010.0,
                    "parent_id": "t3_1gof9yt",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwi9ikt/"
                },
                {
                    "id": "lwip6om",
                    "author": "wwww4all",
                    "body": "There's no right or wrong answer.  \n\nIf you need to deliver, then build using whatever tech stack you know/have used the most.\n\nThe point is to build, not go on endless debates about tech stacks.\n\nIf this is just hobby project, then pick the most popular tech stack and build.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731292638.0,
                    "parent_id": "t3_1gof9yt",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwip6om/"
                },
                {
                    "id": "lwlkxhv",
                    "author": "naaste",
                    "body": "If you're just getting started with backend for a project like this, going with Node.js and Express is a solid choice. Pairing it with MongoDB can be a good fit too, especially if you need flexibility with your data structure. For authentication, check out Firebase or Supabase; they come with built-in auth that’s straightforward to set up. I’d say don’t worry about scaling just yet. Focus on building a basic REST API with user accounts and listings, and as your project grows, you can start thinking about more advanced infrastructure. Start small and build up gradually 😉",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731341877.0,
                    "parent_id": "t3_1gof9yt",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwlkxhv/"
                },
                {
                    "id": "lwitp3i",
                    "author": "Patzer26",
                    "body": "\"Past a certain point you have to build your own infrastructure\". Can you explain this more? Infra as in hardware wise?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731294277.0,
                    "parent_id": "t1_lwi75dr",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwitp3i/"
                },
                {
                    "id": "lwjnn4d",
                    "author": "trcrtps",
                    "body": "I haven't used either for a few years while learning webdev, but I really liked supabase since it was postgres and introduced me to SQL and gave me a playground to learn in.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731307997.0,
                    "parent_id": "t1_lwi75dr",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwjnn4d/"
                },
                {
                    "id": "lwiz6pl",
                    "author": "MatthewMob",
                    "body": "If you ever reach very large scale you'll have to implement tailor-made infrastructure to fit your application needs - eg, switching to AWS/Azure/GCP or yes, doing your own on-premises hardware - rather than just throwing your code onto a single VPS instance and calling it a day.\n\nBut honestly, most people operate at a scale not even a tenth of the size of where you'd actually need to start looking at a custom-built cloud solution. As they said, it's good to start simple.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731296324.0,
                    "parent_id": "t1_lwitp3i",
                    "link_id": "t3_1gof9yt",
                    "permalink": "/r/reactjs/comments/1gof9yt/how_do_i_start_building_the_backend_for_my_react/lwiz6pl/"
                }
            ]
        },
        {
            "id": "1gobq9l",
            "title": "Issues with React Context",
            "author": "BigSteak4959",
            "score": 7,
            "upvotes": 7,
            "downvotes": 0,
            "num_comments": 31,
            "created_utc": 1731274854.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gobq9l/issues_with_react_context/",
            "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/",
            "selftext": "I have been using React Context for keeping track of global state in my app, it is simple to work with and doesn't need more dependencies. I have a big file with currently over 200+ contexts. However, recently I am experiencing an issue that randomly happens whenever I build the app which is that it might crash with the error \"RangeError: Maximum call stack size exceeded\". \n\nDid I screw something up somewhere, or is context not suitable for this purpose? I am looking at some other alternatives for global state management like redux, but I am a bit reluctant since it is way more verbose and will need a significant rewrite. Should I be migrating to redux at this point..? ",
            "comments": [
                {
                    "id": "lwhbfxg",
                    "author": "IllResponsibility671",
                    "body": "200+ contexts! I promise you a lot of that state can be localized into the components that use them.",
                    "score": 36,
                    "upvotes": 36,
                    "downvotes": 0,
                    "created_utc": 1731275440.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhbfxg/"
                },
                {
                    "id": "lwhslol",
                    "author": "balderDasher23",
                    "body": "- Something I didn’t realize until I’d already been using context for a while was that whenever some state in the context provider changes, every consumer of that context rerenders.\n- I wouldn’t be surprised if you were to find an infinite loop somewhere in your component rendering as a result of this. \n- Like others have said 200 is a LOT of contexts. Almost certainly way too many. There could also be a problem in your component hierarchy if you have those providers nested at different points in the tree.\n\nJust some thoughts\n\nJust some ideas",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731281064.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhslol/"
                },
                {
                    "id": "lwi08v3",
                    "author": "straightouttaireland",
                    "body": "Just when I thought maybe people are not abusing React Context as much as before, then I see this.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731283722.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwi08v3/"
                },
                {
                    "id": "lwhe0c2",
                    "author": "fantastiskelars",
                    "body": "How do you even get to a point of 200+ contexts?",
                    "score": 20,
                    "upvotes": 20,
                    "downvotes": 0,
                    "created_utc": 1731276255.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhe0c2/"
                },
                {
                    "id": "lwhl7o8",
                    "author": "demontrout",
                    "body": "“Experiencing an issue that randomly happens…” \n\nWhat specific change did you make that made it go from working to crashing randomly? It sounds as though you are setting state in an effect that’s set to trigger whenever that state changes (directly or indirectly), creating an infinite loop. \n\nNeeding 200+ contexts is inconceivable to me! What is your app doing that requires so many different contexts?",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731278557.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhl7o8/"
                },
                {
                    "id": "lwjx7ld",
                    "author": "arnorhs",
                    "body": "Lots of comments on the number of contexts... Sure, it sounds like a lot but let's not jump to conclusions and let's not conflate two separate issues. \n\nIt is likely that your maximum call stack size error has got nothing to do with your use of context at all. \n\nIf you look at your stack trace you will likely see the same function or the same component show up over and over in the stack trace. This is where you should be looking",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731314135.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjx7ld/"
                },
                {
                    "id": "lwjr2e0",
                    "author": "West-Chemist-9219",
                    "body": "Every day there is a post about someone abusing Context as a state management tool, but this should be pinned to the top of the subreddit as an everliving example why it’s a terrible idea.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731310099.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjr2e0/"
                },
                {
                    "id": "lwi4wmq",
                    "author": "r3d0c_",
                    "body": "jc, learning zustand isn't that hard, or even redux toolkit tbh.... it's much easier than maintaining 200 contexts.. also.. why do you have 200 contexts?! some major code smell, which leads to maintenance nightmares like this",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731285360.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwi4wmq/"
                },
                {
                    "id": "lwijvpa",
                    "author": "Important-Ostrich69",
                    "body": "200 contexts is wayyyy too many. You should either use Redux or think about having your state be synced with the database using something like Tanstack Query",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731290725.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwijvpa/"
                },
                {
                    "id": "lwhc3h6",
                    "author": "TheShiningDark1",
                    "body": "I think you just have too many contexts. There's no good way to handle 200+ contexts. You should look into reducing your reliance on global state.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731275647.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhc3h6/"
                },
                {
                    "id": "lwhf14z",
                    "author": "satya164",
                    "body": "Why do you think this is because of having contexts? 200+ sounds excessive for contexts, but still, context only exposes values to children. It doesn't cause re-renders by itself that'll result in such issues. What exactly is the stack trace of this error? Which function is being called and why?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731276580.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhf14z/"
                },
                {
                    "id": "lwhw41m",
                    "author": "Snoo_42690",
                    "body": "It's already fuckd up.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731282286.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhw41m/"
                },
                {
                    "id": "lwipphh",
                    "author": "Due-Dragonfruit2984",
                    "body": "200+ contexts is too many, something is very wrong with your component design here.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731292827.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwipphh/"
                },
                {
                    "id": "lwk9tbi",
                    "author": "phiger78",
                    "body": "200! react context was designed for static values like themes. personally think it should have never been an api as it's often abused. Look at redux or zustand which won't cause re renders",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731322669.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwk9tbi/"
                },
                {
                    "id": "lwkhx7x",
                    "author": "Whole_Play_6157",
                    "body": "just use zustand in that case it will optimize and make your app faster!!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731327284.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwkhx7x/"
                },
                {
                    "id": "lwm4hz8",
                    "author": "youakeem",
                    "body": "I wonder what kind of global state need 200 providers. I bet most if not all can be moved to local component state and the URL.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731347892.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwm4hz8/"
                },
                {
                    "id": "lwjhu76",
                    "author": "Dear-Illustrator1284",
                    "body": "Funny, i was asked on what occasions I wouldn’t use react context during an interview. This is one of them.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731304674.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjhu76/"
                },
                {
                    "id": "lwjrh6g",
                    "author": "Thommasc",
                    "body": "Thanks for proving using context is a broken solution at scale.\n\n\nI think it's a good tool for avoiding prop drilling.\n\n\nBut as a state management system it's obvious it's going to run into issues compared to redux.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731310358.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjrh6g/"
                },
                {
                    "id": "lwhtj3d",
                    "author": "MonkeyDlurker",
                    "body": "Is that an esling error ur getting?",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731281385.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhtj3d/"
                },
                {
                    "id": "lwjl7xa",
                    "author": "yksvaan",
                    "body": "At that point you probably should rm -rf the whole app and rebuild it from scratch. The data handling is just fundamentally cooked.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731306577.0,
                    "parent_id": "t3_1gobq9l",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjl7xa/"
                },
                {
                    "id": "lwhblye",
                    "author": "IllResponsibility671",
                    "body": "Also - Redux Toolkit is no more verbose than Context API.",
                    "score": 14,
                    "upvotes": 14,
                    "downvotes": 0,
                    "created_utc": 1731275493.0,
                    "parent_id": "t1_lwhbfxg",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwhblye/"
                },
                {
                    "id": "lwiyw6s",
                    "author": "acemarke",
                    "body": "Yeah, a lot of people don't realize that React _renders recursively by default_, and updating a context value requires setting state in the parent component which causes a render:\n\n- https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#state-updates-context-and-re-renders",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731296214.0,
                    "parent_id": "t1_lwhslol",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwiyw6s/"
                },
                {
                    "id": "lwk5o31",
                    "author": "codeepic",
                    "body": "This statement in React docs: 'whenever some state in the context provider changes, every consumer of that context rerenders.' makes context not suitable as a global state management solution. We had serious performance issues due to state updating and triggering multiple rerender cycles.\n\nThe OP should consider using Redux-Observable or similar solution for state management.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731319948.0,
                    "parent_id": "t1_lwhslol",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwk5o31/"
                },
                {
                    "id": "lwjb63u",
                    "author": "BigSteak4959",
                    "body": "> It sounds as though you are setting state in an effect that’s set to trigger whenever that state changes\n\nMaybe, I probably screwed one of them up somewhere and the problem isn't how many there are, but the error is so vague that it will be a pita to figure out which one is causing the issue\n\n> What is your app doing that requires so many different contexts?\n\nLots of dialog boxes, I am triggering them all using context (multiple components that are deep in the tree may trigger the same dialog)",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731301300.0,
                    "parent_id": "t1_lwhl7o8",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjb63u/"
                },
                {
                    "id": "lwk39ib",
                    "author": "IdleMuse4",
                    "body": "This is the actual answer. Max call stack errors are really hard to trigger without infinite loops. 200 context providers might make it harder to reason about where this is occurring and why, but, it's not the root cause.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731318315.0,
                    "parent_id": "t1_lwjx7ld",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwk39ib/"
                },
                {
                    "id": "lwilz7y",
                    "author": "n0nc0nfrontati0nal",
                    "body": "Less so id argue",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731291479.0,
                    "parent_id": "t1_lwhblye",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwilz7y/"
                },
                {
                    "id": "lwlsj40",
                    "author": "balderDasher23",
                    "body": "I’m far from a pro with this, and I don’t know redux at all. But I don’t think by itself the issue is enough to justify saying context isn’t suitable for global state management. OP isn’t on the totally wrong track by having multiple contexts. That’s how you prevent the rerender issue. He just went way overboard with it (in likelihood) and didn’t group his state into an efficient collection of contexts",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731344226.0,
                    "parent_id": "t1_lwk5o31",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwlsj40/"
                },
                {
                    "id": "lwjs63k",
                    "author": "West-Chemist-9219",
                    "body": "You could write this in one zustand store with 10 lines of code.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731310801.0,
                    "parent_id": "t1_lwjb63u",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwjs63k/"
                },
                {
                    "id": "lwll6dm",
                    "author": "arnorhs",
                    "body": "Exactly",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731341954.0,
                    "parent_id": "t1_lwk39ib",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwll6dm/"
                },
                {
                    "id": "lwkil1a",
                    "author": "EskiMojo14thefirst",
                    "body": "at the point where you have 200+ contexts, definitely",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731327620.0,
                    "parent_id": "t1_lwilz7y",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwkil1a/"
                },
                {
                    "id": "lwmsh1m",
                    "author": "codeepic",
                    "body": "In the older React docs it literally said that context was not meant to handle global state. Having multiple contexts, each one having specific slice of state is better ( if you don't go too crazy like OP) but even if you have a manageable number, you will end up having to combine together multiple contexts in some components. And then more and ot will start getting unwieldy pretty quickly. Suddenly you  wish you had more state in less contexts but then every context value update will trigger a large component tree to rerender. Because once a parent rerenders, all of its children rerender too. That's why state management using Redux-Observable, Zustand, Jotai, some other options, needs to be planned earlier (unless you are really 100% sure that your app will not be large).",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731355189.0,
                    "parent_id": "t1_lwlsj40",
                    "link_id": "t3_1gobq9l",
                    "permalink": "/r/reactjs/comments/1gobq9l/issues_with_react_context/lwmsh1m/"
                }
            ]
        },
        {
            "id": "1go8e8m",
            "title": "Google Analytics",
            "author": "Any-Blacksmith-2054",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731266249.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1go8e8m/google_analytics/",
            "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/",
            "selftext": "Hi guys, what is a proper way to integrate Google Analytics into React? I was always using react-ga4 but recently noticed my brpwser log is polluted with\n\n  \n**Chrome is moving towards a new experience that allows users to choose to browse without third-party cookies.**\n\n\n\nCan I fix it somehow?        \n\n",
            "comments": [
                {
                    "id": "lwh42d7",
                    "author": "xXxdethl0rdxXx",
                    "body": "The trick is to do it on route transitions at the root level, to ensure you aren't double-firing on re-renders. Without knowing more about your setup (especially with SSR) it's difficult to really provide specific instructions.\n\n  \nRegarding the warning, you may be able to ignore it as it's outdated. [Google recently ditched it's plans to deprecate cookies](https://www.forrester.com/blogs/google-finally-scraps-its-cookie-deprecation-plans/).",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731273204.0,
                    "parent_id": "t3_1go8e8m",
                    "link_id": "t3_1go8e8m",
                    "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/lwh42d7/"
                },
                {
                    "id": "lwgkzip",
                    "author": "Any-Blacksmith-2054",
                    "body": "Also, page score in Lighthouse is so bad after adding ga4",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731267569.0,
                    "parent_id": "t3_1go8e8m",
                    "link_id": "t3_1go8e8m",
                    "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/lwgkzip/"
                },
                {
                    "id": "lwgu1wf",
                    "author": "nlvogel",
                    "body": "GA4 is bad for lighthouse, but as long as there’s no noticeable blocking you should be okay. If you don’t care too much about high accuracy, you don’t have to put it in the head. I think NextJS puts it in the footer or in the body only. \n\nI think the log pollution is again a GA4 thing rather than a you thing.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731270323.0,
                    "parent_id": "t1_lwgkzip",
                    "link_id": "t3_1go8e8m",
                    "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/lwgu1wf/"
                },
                {
                    "id": "lwh00pm",
                    "author": "Any-Blacksmith-2054",
                    "body": "Yes but both products (GA and Chrome) are from Google, why does it complain against itself?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731272046.0,
                    "parent_id": "t1_lwgu1wf",
                    "link_id": "t3_1go8e8m",
                    "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/lwh00pm/"
                },
                {
                    "id": "lwh0ds0",
                    "author": "nlvogel",
                    "body": "I wish I had a good answer to that, but I don’t.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731272146.0,
                    "parent_id": "t1_lwh00pm",
                    "link_id": "t3_1go8e8m",
                    "permalink": "/r/reactjs/comments/1go8e8m/google_analytics/lwh0ds0/"
                }
            ]
        },
        {
            "id": "1go7o4g",
            "title": "Uncontrolled or controlled: A matter of perspective",
            "author": "ryanto",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731264388.0,
            "url": "https://buildui.com/posts/uncontrolled-vs-controlled-a-matter-of-perspective",
            "permalink": "/r/reactjs/comments/1go7o4g/uncontrolled_or_controlled_a_matter_of_perspective/",
            "selftext": "",
            "comments": []
        },
        {
            "id": "1go5ei4",
            "title": "Next.js Weekly #66: Atomic CSS Devtools, Wordpress + Next.js, Next-Forge, Suspense Magic, TanStack Start VS Next.js",
            "author": "Bejitarian",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731258567.0,
            "url": "https://nextjsweekly.com/issues/66",
            "permalink": "/r/reactjs/comments/1go5ei4/nextjs_weekly_66_atomic_css_devtools_wordpress/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwfr01z",
                    "author": "Bejitarian",
                    "body": "## 🔥 Hot\n\n### next-forge\n\nA monorepo template equipped with everything you need to launch your new SaaS app quickly. Includes authentication, billing, analytics, SEO, database ORM, and more.\n\n> Hayden Bleasel\n> \n\n### Next.js Conf 2024: All Sessions\n\nAll sessions from this year’s Next.js Conf are now live! If you only have time for one, I highly recommend Aurora Scharff’s talk on how React Server Components can boost web app performance.\n\n> Next.js\n> \n\n___\n\n## 📙 Articles, Tutorials\n\n### How to Build and Deploy a Headless WordPress with Next.js?\n\nIn-depth guide on how to combine Next.js and Wordpress to get the best of both worlds: proven CMS capabilities with the dynamic, modern experience that React applications offer\n\n> Snehasish Konger\n> \n\n### How to (not) reset a form after a Server Action in React\n\nThe default behavior of a form using Server Actions in Next.js is to reset the form state after submission. While this is ideal for successful requests, it’s not what you want in case of an error. This article explains how to handle that.\n\n> Robin Wieruch\n> \n\n### Using Shadcn UI without a Tailwind Config File\n\nStep by step guide to using Shadcn UI with Tailwind CSS v4\n\n> Luis H. Ball Jr.\n> \n\n### Add an RSS Feed to a Next.js Blog\n\nExplains how to integrate the feed npm package to implement an RSS feed in your Next.js app.\n\n> Diana MacDonald\n> \n\n___\n\n## 📦 Projects / Packages / Tools\n\n### Atomic CSS Devtools\n\nA browser extension for the devtools panel that lets you debug Atomic CSS rules as if they were traditional CSS. Compatible with TailwindCSS, Panda CSS, StyleX, and more.\n\n> Alexandre Stahmer\n> \n\n### next-validate-link\n\nA tool that ensures all your Markdown links in your Next.js app are valid and up-to-date\n\n> Fuma Nama\n> \n\n### next-ui-full-calendar\n\nA flexible calendar component for React that allows you to create and manage events in day, week, or month views\n\n> Mina Melad\n> \n\n### @shipsecure/eslint-plugin-next\n\nAn ESLing plugin that identifies security pitfalls in your Next.js apps.\n\n> Simon Köck\n> \n\n___\n\n## 🌈 Related\n\n\n### ► The suspense quest Inside React's Magic\n\nHave you ever wondered what makes Suspense work its magic? How does it know to display a fallback when a query is about to happen in a component below? This talk uncovers the secrets behind it.\n\n> Charlotte Isambert\n> \n\n### ► How React Compiler Performs on Real Code\n\nThe React Compiler Beta was released not too long ago, and the stable version should be arriving (hopefully) soon. If you need a refresher on what it is, what it does, and most importantly, how it works, this 25-minute talk is definitely for you.\n\n> Nadia Makarevich\n> \n\n### Two ways to the two Reacts\n\nAn interesting read that explores React 19's shift toward a server-based model, while comparing Next.js's server-centric architecture with TanStack Start's client-centric approach.\n\n> Bobae Kang\n>",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731258578.0,
                    "parent_id": "t3_1go5ei4",
                    "link_id": "t3_1go5ei4",
                    "permalink": "/r/reactjs/comments/1go5ei4/nextjs_weekly_66_atomic_css_devtools_wordpress/lwfr01z/"
                }
            ]
        },
        {
            "id": "1go3w8t",
            "title": "For some reason the css file affects all the other page component",
            "author": "EffectiveCase3856",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 7,
            "created_utc": 1731254607.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/",
            "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/",
            "selftext": "Ok i have been working on a Login page component and finished it \n\nThis is the Login.jsx\n\n    import React from 'react';\n    import '../styles/Login.css';\n    import Header from '../components/Header';\n    \n    const Login = () => {\n      return (\n        <>\n            <Header />\n            <section className=\"login-section\">\n            {Array.from({ length: 160 }).map((_, index) => (\n                <span key={index}></span>\n            ))}\n    \n            {/* Sign In Form */}\n            <div className=\"signin\">\n                <div className=\"content\">\n                <h2>Sign In</h2>\n                <div className=\"form\">\n                    <div className=\"inputBox\">\n                    <input type=\"text\" required />\n                    <i>Username</i>\n                    </div>\n                    <div className=\"inputBox\">\n                    <input type=\"password\" required />\n                    <i>Password</i>\n                    </div>\n                    <div className=\"links\">\n                    <a href=\"#\">Forgot Password</a>\n                    <a href=\"#\">Signup</a>\n                    </div>\n                    <div className=\"inputBox\">\n                    <input type=\"submit\" value=\"Login\" />\n                    </div>\n                </div>\n                </div>\n            </div>\n            </section>\n        </>\n      );\n    };\n    \n    export default Login;\n    \n\nand this is Login.css\n\n    /* Font import */\n    @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');\n    \n    .login-section * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        font-family: 'Quicksand', sans-serif;\n    }\n    \n    /* Section styles */\n    .login-section {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 2px;\n        flex-wrap: wrap;\n        overflow: hidden;\n    }\n    \n    /* Animated gradient effect */\n    .login-section::before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(#000, #0f0, #000);\n        animation: animate 5s linear infinite;\n    }\n    \n    /* Animation keyframes */\n    @keyframes animate {\n        0% {\n            transform: translateY(-100%);\n        }\n        100% {\n            transform: translateY(100%);\n        }\n    }\n    \n    /* Styling for individual spans */\n    .login-section span {\n        position: relative;\n        display: block;\n        width: calc(6.25vw - 2px);\n        height: calc(6.25vw - 2px);\n        background: #181818;\n        z-index: 2;\n        transition: 1.5s;\n    }\n    \n    .login-section span:hover {\n        background: #0f0;\n        transition: 0s;\n    }\n    \n    /* Sign-in form styles */\n    .login-section .signin {\n        position: absolute;\n        width: 400px;\n        background: #222;\n        z-index: 1000;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 40px;\n        border-radius: 4px;\n        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.9);\n    }\n    \n    .login-section .signin .content {\n        position: relative;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        gap: 40px;\n    }\n    \n    .login-section .signin .content h2 {\n        font-size: 2em;\n        color: #0f0;\n        text-transform: uppercase;\n    }\n    \n    .login-section .signin .content .form {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        gap: 25px;\n    }\n    \n    .login-section .signin .content .form .inputBox {\n        position: relative;\n        width: 100%;\n    }\n    \n    .login-section .signin .content .form .inputBox input {\n        position: relative;\n        width: 100%;\n        background: #333;\n        border: none;\n        outline: none;\n        padding: 25px 10px 7.5px;\n        border-radius: 4px;\n        color: #fff;\n        font-weight: 500;\n        font-size: 1em;\n    }\n    \n    .login-section .signin .content .form .inputBox i {\n        position: absolute;\n        left: 0;\n        padding: 15px 10px;\n        font-style: normal;\n        color: #aaa;\n        transition: 0.5s;\n        pointer-events: none;\n    }\n    \n    .login-section .signin .content .form .inputBox input:focus ~ i,\n    .login-section .signin .content .form .inputBox input:valid ~ i {\n        transform: translateY(-7.5px);\n        font-size: 0.8em;\n        color: #fff;\n    }\n    \n    .login-section .signin .content .form .links {\n        position: relative;\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n    }\n    \n    .login-section .signin .content .form .links a {\n        color: #fff;\n        text-decoration: none;\n    }\n    \n    .login-section .signin .content .form .links a:nth-child(2) {\n        color: #0f0;\n        font-weight: 600;\n    }\n    \n    .login-section .signin .content .form .inputBox input[type=\"submit\"] {\n        padding: 10px;\n        background: #0f0;\n        color: #000;\n        font-weight: 600;\n        font-size: 1.35em;\n        letter-spacing: 0.05em;\n        cursor: pointer;\n    }\n    \n    input[type=\"submit\"]:active {\n        opacity: 0.6;\n    }\n    \n    /* Media queries for responsive design */\n    @media (max-width: 900px) {\n        .login-section span {\n            width: calc(10vw - 2px);\n            height: calc(10vw - 2px);\n        }\n    }\n    \n    @media (max-width: 600px) {\n        .login-section span {\n            width: calc(20vw - 2px);\n            height: calc(20vw - 2px);\n        }\n    }\n    \n\nbut for some reason this Login.css is affection all the other pages like the home page, register page can you help me fix this please if you have any queries comment i will provide more info. Sorry, if the post is not that good i am kinda new to this ",
            "comments": [
                {
                    "id": "lwfigtp",
                    "author": "IHopeTheyRememberMe",
                    "body": "Generally CSS is global. You need to scope it to your component if you don’t want it to be global. Read about CSS modules. Basically, change the name to Login.module.css, give it a named import like “loginStyles”, change all the hyphen-classes to camelCase, and use it like className=“loginStyles.loginSection”.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731255926.0,
                    "parent_id": "t3_1go3w8t",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwfigtp/"
                },
                {
                    "id": "lwfx1kp",
                    "author": "HomemadeBananas",
                    "body": "That’s how it works when you use normal CSS files. It’s just working the same as if you added that CSS file to your HTML with a link tag. So all those classes end up globally available to your whole app.\n\n Look into CSS modules. You rename the file to `.module.css` and then change it to `import styles from 'styles.module.css'`. Then instead of referring the to the class names with a string literal, you do something like `styles.signin`. \n\nBasically what it does, is auto generates unique class names that you can get through this imported styles object, just referring to them with your own name. That way if you have some other class called signin in another CSS file, the real name your browser sees is different so they don’t overwrite each other.\n\nIt will help to name your classes with camelCase when doing it this way.\n\nIf you are using Next, vite, etc it should just work. If you have some custom Webpack config you will need to make sure it’s configured for this.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731260440.0,
                    "parent_id": "t3_1go3w8t",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwfx1kp/"
                },
                {
                    "id": "lwfmrif",
                    "author": "Rexsum420",
                    "body": "Unless you used the class className login on all of your components it shouldn't be affecting anything else even if all the css files are bundled. I bet your problem is something else but I would need to see the rest of your project to determine what",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731257266.0,
                    "parent_id": "t3_1go3w8t",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwfmrif/"
                },
                {
                    "id": "lwfhyzw",
                    "author": "ezhikov",
                    "body": "Your issue is heavily depends on how you bundle things. If your bundler simply combines all the CSS from all the JS, you will have single CSS for all pages. Read documentation for your bundler and look how to split CSS per page. Although, it might be better to write common CSS for all pages, since it is often allows to reduce amount of styles for similar elements, relatively cheap for browser and will be cached for all pages once user downloaded it one time.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731255767.0,
                    "parent_id": "t3_1go3w8t",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwfhyzw/"
                },
                {
                    "id": "lwgc1of",
                    "author": "EffectiveCase3856",
                    "body": "Well the module.css I have tried it as said by chatgpt but it still didn't work, I am using the basic creat-react-app for react, andthere is not a global css but still this one css file is affecting the other pages",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731264899.0,
                    "parent_id": "t3_1go3w8t",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwgc1of/"
                },
                {
                    "id": "lwh3we2",
                    "author": "Rexsum420",
                    "body": "Put your project up on github and we'll be able to see the whole project and see what's going on with it",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731273153.0,
                    "parent_id": "t1_lwgc1of",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwh3we2/"
                },
                {
                    "id": "lwh4oa4",
                    "author": "sockx2",
                    "body": "Don't use chatgpt until you know what you're doing. Read the docs instead https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/ until you can tell when chatgpt is wrong it's not something you should rely on",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731273391.0,
                    "parent_id": "t1_lwgc1of",
                    "link_id": "t3_1go3w8t",
                    "permalink": "/r/reactjs/comments/1go3w8t/for_some_reason_the_css_file_affects_all_the/lwh4oa4/"
                }
            ]
        },
        {
            "id": "1go3nxs",
            "title": "Would anyone be able to help me figure out how I can correctly update state across local, redux and db?",
            "author": "RandomUserOfWebsite",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731254011.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/",
            "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/",
            "selftext": "Quick warning, this is a sea of spaghetti state management, and it hurts to try and make any sense of it. \n\nIn short, I open a modal representing a classroom, which displays a list of students within the class. Next to each student, there is a Remove button. When I press the remove button, the student is removed from the class. This Many to Many relationship is updated in the database correctly, and it is immediatelly updated in the modal --> [https://imgur.com/eQqrlld](https://imgur.com/eQqrlld)\n\n**The Problem:**\n\nWhen I close the modal and re-open it, the student is suddenly back in the classroom. However, if I refresh the page and re-open the modal, the student is no longer there, as it should be.\n\n\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\nI'm trying to figure out how to update the state, so that when I remove the student from the classroom, it is reflected permanently right away, and does not come back to the old state when I re-open the modal.\n\nHere is the order in which data is fetched to be displayed in the component:\n\nDB -> Redux store -> const studentsList -> let filteredStudents -> const selectedStudents\n\nI map over selectedStudents and display first\\_name and last\\_name for all student objects inside selectedStudents:\n\n    {selectedStudents.map((student) => (\n        <li key={student.id} className=\"flex justify-between items-center mb-2\">\n            <span>{`${student.first_name} ${student.last_name}`}</span>\n            <div>\n                <button\n                    onClick={() => removeStudent(student)}\n                    className=\"py-1 px-3 bg-red-500 text-white rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-700\"\n                >\n                    Remove\n                </button>\n            </div>\n        </li>\n    ))}\n\nonClick, I call a function that makes an API call to the backend, but which also dispatches an action so as to update state in redux:\n\n    const removeStudent = async (student) => {\n            try {\n                const response = await callAPI(\n                    '/api/students/user/',\n                    'DELETE',\n                    {student_id: student.id, classroom_id: classData.id},\n                    false,\n                    null,\n                    fetchStudentsStart,\n                    fetchSelectedStudentsSuccess,\n                    fetchSelectedStudentsFailure\n                )\n    \n                if (response.status === 200) {\n                    // Filter the student from the current selected students and global students list\n                    const updatedSelectedStudents = selectedStudents.filter(s => s.id !== student.id);\n                    setSelectedStudents(updatedSelectedStudents);\n                    \n                    // Update the classroom for the student in the global students list\n                    const updatedStudentsList = studentsList.map(s => \n                        s.id === student.id \n                            ? { ...s, classrooms: s.classrooms.filter(c => c.id !== classData.id) }\n                            : s\n                    );\n                    dispatch(fetchSelectedStudentsSuccess(updatedStudentsList));\n                }\n            } catch (error) {\n                console.error(\"Error unenrolling student:\", error)\n            }\n        };\n\nUpon response.status === 200, I refresh the state to reflect the change, and at the very end make a dispatch to Redux with the updatedStudentsList.\n\nHere is my slice --> [https://pastebin.com/qbaHcNgb](https://pastebin.com/qbaHcNgb)\n\nHere is the callAPI utility if needed --> [https://pastebin.com/X9EzajT5](https://pastebin.com/X9EzajT5)\n\nHere is the full modal component --> [https://pastebin.com/3xngvfDz](https://pastebin.com/3xngvfDz)\n\nHere is the full parent component if needed --> [https://pastebin.com/wSfcuMLJ](https://pastebin.com/wSfcuMLJ)\n\nCan anyone make any sense of this madness?",
            "comments": [
                {
                    "id": "lwff70i",
                    "author": "RandomUserOfWebsite",
                    "body": "I must comment for my submission to become visible to everyone.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731254874.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwff70i/"
                },
                {
                    "id": "lwgd1vr",
                    "author": "power78",
                    "body": "This is exactly what redux toolkit is for",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731265196.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwgd1vr/"
                },
                {
                    "id": "lwfsqx5",
                    "author": "yksvaan",
                    "body": "Wouldn't updating a class make more sense? You have 3 tables: students, classes and table linking students to specific classes. No need for any extra filtering.\n\n\nRemoving a student from simply means removing the linking entry. And on successful removal just remove the student from the app data as well, no need to requery or anything. ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731259115.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwfsqx5/"
                },
                {
                    "id": "lwgljip",
                    "author": "Cannabat",
                    "body": "You now have an intimate understanding of why the query libraries are so useful. You’re already using redux toolkit - use they query post off the library and enjoy how much easier this becomes!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731267737.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwgljip/"
                },
                {
                    "id": "lwikcov",
                    "author": "justjooshing",
                    "body": "I can only see that everywhere is referencing `studentList = state.students.students`, and yet you're updating with `state.selected_students = action.payload;`, so maybe you're not updating the right field?\n\nThis would explain why it's not there when the action is triggered (you're updating component state), but why it's there when remounting the modal (it's grabbing the not-updated `state.students.students`), and after refreshing the page (it's in sync with server state again)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731290895.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwikcov/"
                },
                {
                    "id": "lwizoa0",
                    "author": "acemarke",
                    "body": "> this is a sea of spaghetti state management, and it hurts to try and make any sense of it\n\nYeah :( This looks like a pretty significant misuse of Redux code in a few ways.\n\n- You're dispatching multiple actions in a row\n- The click handler is calculating the final new state values (via filtering and mapping)\n- You've got your own \"success/failure\" action handlers\n\nInstead, you should be:\n\n- [Dispatching _one_ action with the results](https://redux.js.org/style-guide/#avoid-dispatching-many-actions-sequentially)\n- Preferably via using [`createAsyncThunk`](https://redux.js.org/tutorials/essentials/part-5-async-logic) to define the success and failure actions\n- [Calculating all of the state updates in the reducer](https://redux.js.org/style-guide/#put-as-much-logic-as-possible-in-reducers)\n- Or even better, using [RTK Query to do all the data fetching and caching](https://redux.js.org/tutorials/essentials/part-7-rtk-query-basics) instead of writing any of that code yourself\n\nI'd really recommend going that that entire [\"Redux Essentials\" tutorial](https://redux.js.org/tutorials/essentials/part-1-overview-concepts) before you try to write any more app code so you understand how to use Redux correctly.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731296510.0,
                    "parent_id": "t3_1go3nxs",
                    "link_id": "t3_1go3nxs",
                    "permalink": "/r/reactjs/comments/1go3nxs/would_anyone_be_able_to_help_me_figure_out_how_i/lwizoa0/"
                }
            ]
        },
        {
            "id": "1go2aqk",
            "title": "Best library to render simple markdown without worrying about safety.",
            "author": "hadibikey",
            "score": 10,
            "upvotes": 10,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731250251.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/",
            "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/",
            "selftext": "Hi. I’ve been looking for a markdown library. I’m not sure about safety & I want it to be reliable.\nResponses are from gpt & does contain markdown.\nThanks in advance.",
            "comments": [
                {
                    "id": "lwf8yv2",
                    "author": "PixelsAreMyHobby",
                    "body": "Checkout Marked, I’ve had good experiences with it. \n\nhttps://www.npmjs.com/package/marked",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731252871.0,
                    "parent_id": "t3_1go2aqk",
                    "link_id": "t3_1go2aqk",
                    "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/lwf8yv2/"
                },
                {
                    "id": "lwkfopq",
                    "author": "Annual-Ad-5416",
                    "body": "Try react-markdown. It should cover simple markdown syntax.\n\nFor response from gpt in my project, I have used react-markdown and the remark-gfm plugin.  \n\nIn the npm page of react-markdown, you can find links to the full plugin list if you want to support additional notations.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731326119.0,
                    "parent_id": "t3_1go2aqk",
                    "link_id": "t3_1go2aqk",
                    "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/lwkfopq/"
                },
                {
                    "id": "lwj45pa",
                    "author": "ArunITTech",
                    "body": "You can try the Syncfusion [React Rich text editor.](https://www.syncfusion.com/react-components/react-wysiwyg-rich-text-editor?utm_medium=reddit&utm_source=backlinks&utm_campaign=react-wysiwyg-rich-text-editor-reddit-backlinks)\n\n* It is a feature-rich WYSIWYG HTML editor and WYSIWYG Markdown editor.\n* It supports working as both a text editor and a code editor.\n* It is widely used to create blogs, forum posts, notes sections, support tickets (incidents), comment sections, messaging applications, and more.\n\nSyncfusion offers a [free community license ](https://www.syncfusion.com/products/communitylicense?utm_medium=reddit&utm_source=backlinks&utm_campaign=react-wysiwyg-rich-text-editor-reddit-backlinks)to individual developers and small businesses.\n\nNote: I work for Syncfusion.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731298305.0,
                    "parent_id": "t3_1go2aqk",
                    "link_id": "t3_1go2aqk",
                    "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/lwj45pa/"
                },
                {
                    "id": "lwjpbyo",
                    "author": "condor2000",
                    "body": "Looks good\n\nI use https://markdown-it.github.io/\n\nThey seem to support the same features (eg. gfm support)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731309022.0,
                    "parent_id": "t1_lwf8yv2",
                    "link_id": "t3_1go2aqk",
                    "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/lwjpbyo/"
                },
                {
                    "id": "lwklj85",
                    "author": "hadibikey",
                    "body": "Thanks. I couldn’t decide between react-markdown & markdown-to-jsx. react-markdown has more stars, but markdown-to-jsx has way more weekly downloads. Both seem to be safe & no sanitize is needed.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731329045.0,
                    "parent_id": "t1_lwkfopq",
                    "link_id": "t3_1go2aqk",
                    "permalink": "/r/reactjs/comments/1go2aqk/best_library_to_render_simple_markdown_without/lwklj85/"
                }
            ]
        },
        {
            "id": "1go1qy3",
            "title": "How to show names of console log source files in devtools on firefox(zen) like it does on chrome? (NextJS, Turbopack)",
            "author": "r3d0c_",
            "score": 2,
            "upvotes": 2,
            "downvotes": 0,
            "num_comments": 1,
            "created_utc": 1731248627.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1go1qy3/how_to_show_names_of_console_log_source_files_in/",
            "permalink": "/r/reactjs/comments/1go1qy3/how_to_show_names_of_console_log_source_files_in/",
            "selftext": "Whenever i console log on chrome (before a hot reload) i can see what the source of the log is in my relative nextjs directory but i can't see the same in firefox\n\nany help would be greatly appreciated (images attached)\n\n[Chrome](https://i.postimg.cc/8cFTwSy3/Screenshot-20241108-081646.png)\n\n[Firefox (Zen Browser)](https://i.postimg.cc/cLWr1vkL/Screenshot-20241108-080628.png)",
            "comments": [
                {
                    "id": "lwj03z7",
                    "author": "minimuscleR",
                    "body": "Might be an issue with Zen? I use firefox daily and it shows me the file - but it could be something else, possibly Chrome showing serverside code but I don't know about that off the top of my head.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731296678.0,
                    "parent_id": "t3_1go1qy3",
                    "link_id": "t3_1go1qy3",
                    "permalink": "/r/reactjs/comments/1go1qy3/how_to_show_names_of_console_log_source_files_in/lwj03z7/"
                }
            ]
        },
        {
            "id": "1gnw5ee",
            "title": "React + Vite + 8000 Components = 54minutes Build",
            "author": "Scared-Librarian7811",
            "score": 241,
            "upvotes": 241,
            "downvotes": 0,
            "num_comments": 178,
            "created_utc": 1731227287.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/",
            "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/",
            "selftext": "Hey everyone,\n\nI am recently hired in a banking company as a project reviewer and they have massive projects which I think they designed react logic a little bit not good.\n\n\nThey have 8000 lazy components in vite environment and the build time takes 54minutes to build.\n\nThe old react developers was react junior developers and they didn't use best practices.\n\nMany components are more than 1000 lines and so on. And they have many memory leaks problems\n\nI have tried some clean up techniques and improvements which made the build time better. But still I think there's a lot to do\n\nCan any one help me and guide me what to do and give me some hints\n\nThank you!\n\nEDIT: \nThanks everyone for your amazing help and recommendations. I am gathering a plan and proposal based on comments here and will start to do the work. \n\nI will gather all information I learned here and publish recommendations here again \n\nI may not be able answer. Thank you 🙏\n\nsuggested technologies & methodologies: stranglers fig pattern, swc, Boy scouts rule, tanStack, module federation, astro, barell files, npm compare, parcel, roll up plugin visualiser, rs build, \n\n",
            "comments": [
                {
                    "id": "lwdv4vz",
                    "author": "West-Chemist-9219",
                    "body": "It will be impossible to get stakeholder buy-in for a refactor of this scope. Evaluate, document, put your concerns into writing. If they say you can and should refactor, great, if not, you’re covered until they figure out what they want. I don’t envy your position.",
                    "score": 232,
                    "upvotes": 232,
                    "downvotes": 0,
                    "created_utc": 1731227723.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdv4vz/"
                },
                {
                    "id": "lwdvzax",
                    "author": "shadohunter3321",
                    "body": "8000 components and still they ended up with components with more than 1k LOC? I'm guessing those 8000 components have lots of overlap as well. \n\nAs another comment suggested, propose refactoring with your findings and if they agree, start with extracting the common views into components (this will definitely take a lot of time), logics into hook (if within react lifecycle) or utility functions (if the logic doesn't require react lifecycle).",
                    "score": 136,
                    "upvotes": 136,
                    "downvotes": 0,
                    "created_utc": 1731228282.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdvzax/"
                },
                {
                    "id": "lwdush5",
                    "author": "xegoba7006",
                    "body": "Find another job",
                    "score": 255,
                    "upvotes": 255,
                    "downvotes": 0,
                    "created_utc": 1731227493.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdush5/"
                },
                {
                    "id": "lwe0rqf",
                    "author": "chris-top",
                    "body": "My two cents on the matter. Before refactoring start with the definition of the design system, if there is any, if not propose to create one. A common use case for so many components is the mix of business and presentation logic. Group the components per functionality, i.e. date input, and then extract business logic in another layer of the app, easier said than done. Don’t start with the code you will probably break stuff that you are not aware of, especially if they are not tested extensively. Good luck!",
                    "score": 34,
                    "upvotes": 34,
                    "downvotes": 0,
                    "created_utc": 1731231480.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe0rqf/"
                },
                {
                    "id": "lwdz8yx",
                    "author": "arelav",
                    "body": "Let me guess. It’s no tests and refactoring will be more like walking on mine field?",
                    "score": 21,
                    "upvotes": 21,
                    "downvotes": 0,
                    "created_utc": 1731230448.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdz8yx/"
                },
                {
                    "id": "lwe262j",
                    "author": "punani_pancake",
                    "body": "I've refactored a few applications, not of this size though. Still, I would do these things:\n- like others have suggested, write down your concerns and the impact you think not fixing them would have over time, as well as the time it would take to fix them and the benefits of a fix. Try to put a € number on it. \n- run a tool like [depcheck](https://www.npmjs.com/package/depcheck) to find unused / upgradable dependencies and remove / upgrade them (where possible, be pragmatic about this)\n- check routes and disable old and unused routes. Just comment them out until you're sure they can be deleted.\n- check and if possible (but this might be a very big task, depending on versions) upgrade react version.\n- upgrade build tools to later versions if possible",
                    "score": 19,
                    "upvotes": 19,
                    "downvotes": 0,
                    "created_utc": 1731232426.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe262j/"
                },
                {
                    "id": "lwdv20n",
                    "author": "UsernameINotRegret",
                    "body": "Start praying for rolldown to be released soon",
                    "score": 39,
                    "upvotes": 39,
                    "downvotes": 0,
                    "created_utc": 1731227671.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdv20n/"
                },
                {
                    "id": "lwe4at7",
                    "author": "SpinatMixxer",
                    "body": "I would recommend looking into continuous refactoring / the strangler fig pattern / Boy Scout rule.\n\nIt basically means to refactor code over time, bit by bit and not all at once. Always when touching something, invest the time to leave it in a better state. (e.g. extracting a reusable component)\n\nMartin Fowler wrote a good article about it:\nhttps://martinfowler.com/bliki/StranglerFigApplication.html\n\nAt least, if you are not able to convince project managers to invest in a complete rewrite / refactoring.\n\nThen also it could be beneficial to extract some parts into a separate component library for generic components, that you bundle in a separate step, so you don't have to bundle it each time.\n\nYou could use a monorepo for that. If you want to do that, nx might be something you want to have a look at.\n\nGood luck with that project!",
                    "score": 17,
                    "upvotes": 17,
                    "downvotes": 0,
                    "created_utc": 1731233849.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe4at7/"
                },
                {
                    "id": "lwdwydo",
                    "author": "hokkos",
                    "body": "Try rspack instead of vite, remove barrel files, refactor big components.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731228924.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwydo/"
                },
                {
                    "id": "lwe03iy",
                    "author": "joyancefa",
                    "body": "First add logging to see which step consumes the most time. \nThen optimise those steps (I would google or use any of the relevant advice shared here).",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731231020.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe03iy/"
                },
                {
                    "id": "lwdwrff",
                    "author": "Skeith_yip",
                    "body": "8000 components? Thats no easy feat even for a junior dev\\~ 😱\n\nEither create a new project and slowly rewrite the application... but I bet this is a big application isn't it?\n\nIm now curious how performant is Typescript in such a big project..",
                    "score": 21,
                    "upvotes": 21,
                    "downvotes": 0,
                    "created_utc": 1731228797.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwrff/"
                },
                {
                    "id": "lwdw8bc",
                    "author": "No_Shame_8895",
                    "body": "Basically you need to refactor a lot , consider  layout (I used in tanstack router), component as prop, make sibling component... \n\nCheck the book advanced react, deep dive...",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731228448.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdw8bc/"
                },
                {
                    "id": "lwdy1pp",
                    "author": "Thommasc",
                    "body": "Obviously you want to boost code quality to improve the quality of the build.\n\n\nBut then with 8000 components you need to start splitting up the app into multiple parts.\n\n\nThere is a way in React to lazy load modules. Do that at a very high level either for big parts of the product or massive third party library.\n\n\nYou should first plan ahead all the improvements you could make and only once you have a clear idea of what to do and how long it will take you can show your boss your plan.\n\n\nIt's a good idea to do a little proof of concept of every single improvement with metrics to prove you're not just toying with the app but actually improving the situation.\n\n\nOnce you move the cursor from 0% to 1% it's easy to sell the remaining 99%.\n\n\nMake sure to present the moon shot even if that's going to be unrealistic in terms of resource, it's always good to aim high even if you only deliver half of the results it will be a good success.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731229648.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdy1pp/"
                },
                {
                    "id": "lwegon8",
                    "author": "ezhikov",
                    "body": "## Preparatory work\n\nThis usually can be done along the way without much of a slowdown.\n\nSet up static analysis to catch problems - modern ESLint config, TypeScript config, prettier. This will help you catch problems on the go. You don't need to format lint and fix everything right away (in fact, it would be bad idea). Don't set up autofix for eslint at this stage, as it will definitely break something. Ignore errors you can't fix right away (like hook dependencies), or fix is out of scope of current task. Use cache to speed up liniting.\n\nSet up precommit and prepush hooks. In precommit hook format files you worked with. In prepush run static analysis on files you worked with. Make regular reports (for example, you can output into HTML, and get page with \"N errors, M warnings\"). This will help you show your progress to management.\n\nSet up testing. Test at least something, you can compare screenshots via playwright, do some interaction. Write tests as you go. For example, you need to change something in SomeComponent. Write test for that \"something\".\n\nStart documenting stuff. Props via JSDoc, why you ignore certain TS and ESLing errors (eslint-pluigin-eslint-comment really helps here), how everything is running, etc. Remember reports from ESLint? Start gathering ALL the data you can - build times, amount of bugs per release (and per component), feature development speed, etc.\n\nIdea here is to leave code cleaner than before, but don't be distracted too much. This thing should be ingrained in every team member and approved by project manager. This will slowly improve codebase with efforts spread through long timeline.\n\n## Sell changes you want to implement\n\nYou can't just go to management and say \"Hey, we need to rewrite that shit, because it's shit\". You need to sale this work, to show that it will have value. Your goal is to show problems, define cost of those problems, propose solutions (preferably at least two or three), show pros and cons of those solutions, give rough estimations, explain gains and losses in short term, mid term, and long term. Explain how your solutions fit into current plans and how it can fit into future plans.\n\nIf you were able to sell at least some changes, make a plan and start implementing it. If not, well, so long, and thanks for all the fish. Go slow and impove bit by bit following preparation steps. Eventually stuff will improve and you will be able to show results (remember all the data you started gathering?) and give more detailed and more concrete plans with more concrete estimates on further improvements. For example, you eventualy fixed one screen. Relatively complex task on that screen required on average 10 hours and returned from testing on average three times, and one of those times wasn't related to task, but was just colateral damage. After it was refactored, similar task requires 5 hours, because it returns from testing about 0.5 times and no colateral. Wow, huge gains, and in summary it required about \n\n## You sold it, what next?\n\nSet goals, follow plans, establish processes. Start fixing, refactoring and rewriting. Keep gathering data to show your progress. Establish interdisciplinary communication (like, \"hey, dear UI designer, we have three almost identical screens written in three HUGE components. Let's squash them into one so we all will have to do less work?\").\n\nAlways start with low hanging fruit. Whatever is easier and faster to fix goes first. Split changes into minimal chunks, preferably those that can be completed no more than in a day by experienced dev familiar with codebase. For example, \"split giant component in two smaller ones\" then \"fix types in chunk 1\" and \"fix types in chunk 2\", then \"fix eslint errors in chunk 1\" and you got the idea. If you can, assign one person to do improvements while others do new features and bugfixes in unrelated places.\n\n## Outro\n\nOf course, those are just ideas on how to gradually implement changes and sell those changes to management. Adapt according to your specifics.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731241485.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwegon8/"
                },
                {
                    "id": "lwdvwdj",
                    "author": "Capaj",
                    "body": "That is insane number of components.\nI am usually against microfrontends, but in this case splitting this huge monster into several smaller apps would be the way to go IMHO.",
                    "score": 10,
                    "upvotes": 10,
                    "downvotes": 0,
                    "created_utc": 1731228227.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdvwdj/"
                },
                {
                    "id": "lwdxmiu",
                    "author": "ICanHazTehCookie",
                    "body": "Is the issue tech debt or specifically the build time? How long does it take to load the dev server locally? If only CI has to build the entire app, that's somewhat bearable",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731229367.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdxmiu/"
                },
                {
                    "id": "lwe5nkt",
                    "author": "james-has-redd-it",
                    "body": "If you can, first step back from the immediate task and see if you can simply cut down on the number of components. It's very unlikely that half of them are in use in on a production site the first place. \n\nThere's probably a lot of overlap and duplication. At major banks there will often be near-identical components used by different regional or national sites, so be careful. That's not something you can fix immediately, but if you can create a truly global component library then see if you can park everything _else_ into a new \"legacy\" repo. \n\nDepending on how decomposed the library is you may be able to cut down the total by >80%. CMS users will love this, it makes your job possible, and it makes building new complex features much more manageable.\n\nA big reason it'll make the future easier is to help the security approval of new features go faster and smoother. At the giant bank I worked with there were somehow a team of only 3 people who had to review every single new component. We would identify a requirement, scope the solution build it, test it and deliver it in 6 weeks, then wait 9 months for that poor team to eventually review it.\n\nThis is a major career opportunity for you if you can rely on the right product/project managers to fight for doing things the right way! Good luck!",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731234754.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe5nkt/"
                },
                {
                    "id": "lwei5pm",
                    "author": "leonardorafaelw",
                    "body": "You need to split this project, with independent deploy. You don't need to do a big refactoring at once. Just start with your first small project (add a glue for your big project) and go ahead. Good luck!",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731242251.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwei5pm/"
                },
                {
                    "id": "lwewmqr",
                    "author": "azangru",
                    "body": "This problem that you described in your title:\n\n> React + Vite + 8000 Components = 54minutes Build\n\nis an interesting one, but it should not have anything to do with how many lines of code there are in a component, or how much memory they leak in the browser.\n\nYou say you tried some clean-up techniques that improved the build time. What did you do?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731248553.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwewmqr/"
                },
                {
                    "id": "lwg2joj",
                    "author": "imaginecomplex",
                    "body": "Maybe try using ts-prune or knip to find unused exports that can be safely deleted, thus reducing the amount of code to compile?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731262091.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwg2joj/"
                },
                {
                    "id": "lwdvx7x",
                    "author": "True-Environment-237",
                    "body": "Huh that means it's time to rewrite it from scratch using good practices. I bet build time isn't the only bottleneck in maintaining this ugly dinosaur.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731228243.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdvx7x/"
                },
                {
                    "id": "lwdz80q",
                    "author": "DbrDbr",
                    "body": "Hire me to help! \n\nAnd let’s refactor that shit.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731230430.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdz80q/"
                },
                {
                    "id": "lwe0ngz",
                    "author": "yyyyaaa",
                    "body": "swc or parcel should be faster, those are written in rust",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731231401.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe0ngz/"
                },
                {
                    "id": "lwe89s7",
                    "author": "nachoelias",
                    "body": "The build time is no risk factor for the company or the people. The app’s reliability and security it is, and it seems like that’s out of your scope. Now, if you just want to make the build time faster, I’d suggest to migrate to something like esbuild, which will be faster but you lose some nice vite features. If you just want to improve the app in general, then I guess there’s a billion things u can do",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731236485.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe89s7/"
                },
                {
                    "id": "lwe8bz0",
                    "author": "HollyShitBrah",
                    "body": "That's a technical debt no one should touch, just make sure the new code doesn't add to the mess",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731236525.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe8bz0/"
                },
                {
                    "id": "lwebai1",
                    "author": "NotLyon",
                    "body": "This is fishy. I'd wager the build includes running tests. I'd also wager the CI instance is small. Run it on your laptop, with and without tests and post the result.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731238399.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwebai1/"
                },
                {
                    "id": "lwecbw4",
                    "author": "wvjgsuhp",
                    "body": "holy, junior devs + bank app sound like one leg in a jail",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731239038.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwecbw4/"
                },
                {
                    "id": "lwehoyj",
                    "author": "syahrizalfauzi",
                    "body": "module federation",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731242012.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwehoyj/"
                },
                {
                    "id": "lwerfh9",
                    "author": "TheExodu5",
                    "body": "This is too big to refactor. You don’t risk the stability of a working app with sweeping refactors. \n\nOne thing that would be feasible is developing new features as self contained libraries. Your builds would still be slow, but you could improve DX. \n\nYou could also leverage micro front ends. That would alleviate the build time issue. But you’d need to do integration testing.\n\nEdit: after reading it sounds like dev is fast but the build is slow. Yeah micro frontends is your only real viable option here.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731246467.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwerfh9/"
                },
                {
                    "id": "lwfe5do",
                    "author": "Different-Housing544",
                    "body": "Write tests first before any refactor.\n\n\nSlowly and incrementally refactor. \n\n\nI am in the same boat my friend... Junior devs designing a system with minimal understanding of best practice. It's a nightmare.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731254540.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfe5do/"
                },
                {
                    "id": "lwgl53n",
                    "author": "0day_got_me",
                    "body": "Come up with a solid structure for any new features. Use that as the expectations going forward. Create 1M backlog tickets for the refactors.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731267617.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwgl53n/"
                },
                {
                    "id": "lwglz9g",
                    "author": "Ornery_Studio1045",
                    "body": "Run fast",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731267868.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwglz9g/"
                },
                {
                    "id": "lwgszra",
                    "author": "Acrobatic_Response58",
                    "body": "you either die a hero (refactoring everything) or you live long enough to see yourself become the villain (keeping this as it is).\n\nJokes aside I went through something similar in the past with a banking company here in Brazil, the app was a credit card error monitor. 300+ pages and endless components, all copy of each other. The original developers were Java developers trying to figure out how to create front end without any experience on it. 80% of the team flew from the company and I was hired to \"fix the stuff\". I stayed for 4 months, I was giving my best but the management team was wild. Bad managers who fought with the team for not delivering on the deadlines that were set before the frontend staff were hired. In other words, the Java developers set the deadlines without their knowledge and the new team that was hired had to deal with the (impossible) deadline. Needless to say that it was impossible to work there.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731270002.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwgszra/"
                },
                {
                    "id": "lwhehtk",
                    "author": "ResponsibleChange697",
                    "body": "I always suggest deleting the dead code. Get some usage data. There will definitely be some features that your users don’t care. Start by depreciating these features. It’ll also speed up your app build and load times. Then start to refactor. Like other comments said, there is definitely a lot of overlap.\n\n\nThis is a great opportunity for you to grow. Please don’t miss it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731276409.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwhehtk/"
                },
                {
                    "id": "lwiad2v",
                    "author": "okieb00mer",
                    "body": "Use replit or aider with claude sonnet to  build a new app in a sprint",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731287319.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwiad2v/"
                },
                {
                    "id": "lwdvkf3",
                    "author": "FreshFillet",
                    "body": "1000 LOC components is beyond crazy. OP, the easiest path forward would be to quit. Otherwise, you gotta just go through each component and remake them from scratch while keeping the functionality. This will be one hell of a task though.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731228007.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdvkf3/"
                },
                {
                    "id": "lwdzqbx",
                    "author": "jonkoops",
                    "body": "If I were you I would simply refuse to work on any feature that would have to touch this code. With code quality as bad as this your best option is to build a secondary application and have it incrementally replace the old one. Trust me, doing anything else will ruin your sanity and it will be impossible to deliver well built functioning features in a code base like this.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731230772.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdzqbx/"
                },
                {
                    "id": "lwdz2tw",
                    "author": "CanIhazCooKIenOw",
                    "body": "Start by auditing the app. Remove ALL dead code and unused features - knip could be handy. Remove unused routes, remove unused modals, remove unused dependencies, remove unused utils and unused global state stores (assuming redux here)\n\nFeature is not in prod? Remove. “Oh but we might use it at some point”, give them the link to the PR that removes the code so they can bring it back if needed.\n\nWhat’s the testing coverage? There’s no way you’ll be able to safely do any refactoring without tests.\n\nAlso, there’s no way you can do it by yourself specially as you just joined. So get managers and other engineers on board first.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731230332.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdz2tw/"
                },
                {
                    "id": "lwe15q7",
                    "author": "micppp",
                    "body": "Is one of the pre-requisites as someone who is hired as a reviewer not to completely understand performance and have experience refactoring such codebases before therefore knowing what they need to do?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731231747.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe15q7/"
                },
                {
                    "id": "lwdxdcs",
                    "author": "rainWalker468",
                    "body": "Check your Lighthouse score and performance of your website. \n\nFirst move your homepage away from the repo. Make it static generated, so that it will have a good lighthouse score and performance. It should have less build time also and a good SEO score.\n\nEach link of your homepage will open your react mammoth repo. And start fragmenting your react repo journey wise.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229195.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdxdcs/"
                },
                {
                    "id": "lwdy93y",
                    "author": "mr-cory-trevor",
                    "body": "Definitely needs a cleanup, but you could use swc loader with vite to get a decent reduction in build time. I had a bunch of older projects with react scripts and webpack. I switched all of them to rsBuild which uses swc by default\n\nEdit: rebuild -> rsBuild",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229783.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdy93y/"
                },
                {
                    "id": "lwdz92u",
                    "author": "Nervous-Project7107",
                    "body": "Lmao, does it use eslint? I wonder how slow the lsp feels like.\n\nIf you use eslint try migrating to biome",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230450.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdz92u/"
                },
                {
                    "id": "lwed5yj",
                    "author": "Kurkuma-Not-Relish",
                    "body": "Are you working in Payoneer?😄",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731239537.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwed5yj/"
                },
                {
                    "id": "lwedwqh",
                    "author": "33498fff",
                    "body": "After you have laid out a refactoring plan as others have suggested, make it clear it's not going to be a one-man show. Make them hire more people.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731239967.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwedwqh/"
                },
                {
                    "id": "lwef94j",
                    "author": "Background-Top5188",
                    "body": "Kill it with fire!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731240720.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwef94j/"
                },
                {
                    "id": "lweqauz",
                    "author": "questpoo",
                    "body": "start from scratch OR (sane way) quit the job and become homeless",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731245998.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweqauz/"
                },
                {
                    "id": "lwex0p7",
                    "author": "AmirrezaDev",
                    "body": "Maybe try vite-plugin-react-swc if it's not already using that, but damn, 8000 components, and some with 1000 lines of code? Can your IDE even open the project? 😄",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731248702.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwex0p7/"
                },
                {
                    "id": "lweys79",
                    "author": "o82",
                    "body": "I recommend watching [Scaling Vite at Shopify](https://viteconf.org/24/replay/scaling_vite) from latest ViteConf.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731249369.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweys79/"
                },
                {
                    "id": "lwf2fjm",
                    "author": "SolarNachoes",
                    "body": "54min for a local build? As in 54mon for the app to start in dev mode?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731250669.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf2fjm/"
                },
                {
                    "id": "lwf6utk",
                    "author": "aaronmcbaron",
                    "body": "Okay, so without refactoring here are some options:\n - make sure you are leveraging vite’s build cache, most likely a lot of things are repeatedly imported in the 8000 components, this should help reduce the re-import of commonly used code\n - use optimizeDeps to prebundle dependencies and cache them early, which in turn should help your build time\n - technically vite uses esbuild under the hood and esbuild is parallelized, so if the build machine is a virtual computer (think AWS EC2, google cloud compute), you can increase the number of cores to allow for proper parallelization of the build process\n\nHopefully these help.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731252178.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf6utk/"
                },
                {
                    "id": "lwf9v24",
                    "author": "Labradoodles",
                    "body": "Try to profile the build and find what is taking the most time keep a top 10 hit list of worst components to refactor and always work on at least 1 a sprint more if there’s time. Verify the cache is working correctly for vote and you persist it in ci.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731253165.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf9v24/"
                },
                {
                    "id": "lwfafaq",
                    "author": "OkLettuce338",
                    "body": "RSBuild",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731253347.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfafaq/"
                },
                {
                    "id": "lwfc83e",
                    "author": "ExiledDude",
                    "body": "Maybe you can split those components to monorepo with nx or turbo? You probably don't need to recompile them all always, lest use in one app. If that's a huge monolith, then I think that could be the way. Sounds terrifying!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731253928.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfc83e/"
                },
                {
                    "id": "lwfjr0i",
                    "author": "agsarria",
                    "body": "Honestly i dont think its worth it. Just start a new application, its gonna take less time than fixing a 8000 components mess.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731256328.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfjr0i/"
                },
                {
                    "id": "lwfxsxb",
                    "author": "vikkio",
                    "body": "I would search for another job, that sounds like a lost battle.\n\njokes aside, maybe migrate bits to microfrontends focused on specific areas and rip off the megafrontend bit by bit. divide et impera is always the best approach in this sort of scenario",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731260668.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfxsxb/"
                },
                {
                    "id": "lwg17ft",
                    "author": "striedinger",
                    "body": "I work for a company that has one of the biggest apps on the internet. We have more than 8k components. Our build takes 5-10 minutes and we use webpack. Your problem is not the number of components. Look into what the build is actually doing. Is it also running tests and linting in the process?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731261685.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwg17ft/"
                },
                {
                    "id": "lwgll17",
                    "author": "MrJaver",
                    "body": "Document proposals and awaiting orders like others said.\n\nI suggest you consider micro-frontends -i.e. run multiple front end servers and build them separately",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731267750.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwgll17/"
                },
                {
                    "id": "lwhuihf",
                    "author": "SwiftOneSpeaks",
                    "body": "A few people have given good advice about being specific with your concerns to management to get approval to do the time spent in improving things.\n\nI want to emphasize a slightly different aspect:\n\nWhat is the problem you want to solve (or risk you want to reduce) most?\n\nBecause there can be a lot of problems with big low quality code.  You mention build time but also memory leaks.  Is there a big performance problem for users?  Is code continuing to be added to the system?  Is domain knowledge being lost?\n\nYou don't want to spend all your political capital, availability, and patience in tackling an issue that big in scope, but isn't the issue you most care about.  Likewise, the aspect your managers care most about (say, dev time, not just build time, it takes to add new features, or compatibility with some modern libraries) can be different, and will realize benefits from your efforts after different amounts of time.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731281731.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwhuihf/"
                },
                {
                    "id": "lwjeuzr",
                    "author": "jordanddisch",
                    "body": " 🤯 wtf 😳 can you break this app apart ? I’ve worked on a few dashboards and maybe hit 50 components once. I would evaluate the app and see if it’s possible to break them into smaller apps and then you can redactor at a smaller lvl. Or just refactor components one by one and push to prod every refactor.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731303104.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwjeuzr/"
                },
                {
                    "id": "lwjjv3h",
                    "author": "illustraykin",
                    "body": "if I want to give you some advice I recommend you to look at the design system, I think creating a design system first and dirtying your hands with designs would be the best initial step in your refactoring",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731305810.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwjjv3h/"
                },
                {
                    "id": "lwk6ejn",
                    "author": "private_witcher",
                    "body": "Ask your hr that you will need outside support. Hire me as a junior and then we will drink bourbon while cleaning the fuck of of the code.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731320438.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwk6ejn/"
                },
                {
                    "id": "lwkm5gv",
                    "author": "Guimedev",
                    "body": "That's why I love javascript ecosystem.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731329325.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwkm5gv/"
                },
                {
                    "id": "lwkt96e",
                    "author": "FactorResponsible609",
                    "body": "How many database entities does this client has to manage? Even with create, update, list, and 500 entities, a dumb system will have 1500 different components.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731332317.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwkt96e/"
                },
                {
                    "id": "lwkv4tw",
                    "author": "Sea-Blacksmith-5",
                    "body": "I would start from Figma designs and use this tool [https://www.youtube.com/watch?v=IEQdu3LJjXQ](https://www.youtube.com/watch?v=IEQdu3LJjXQ) \n\nIt will take less to rewrite it with better performance (they estimated this reduces the quantity of code by 83%).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731333052.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwkv4tw/"
                },
                {
                    "id": "lwkzpjc",
                    "author": "ResearcherMotor1171",
                    "body": "Why u so rude, If you refactor the entire codebase like this, you’ll risk overwhelming the QA team! :) Seriously, consider preparing a presentation, emphasise advantages of your suggestion, assembling a team, and then moving forward with the plan",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731334800.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwkzpjc/"
                },
                {
                    "id": "lwmho3c",
                    "author": "Dear_Efficiency_5460",
                    "body": "My advice is to never use the word, \"refactor\" with non developers. It's a dirty word. Use something like, \"Improve usability.\" or \"Enhance load times\" something like that.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731351896.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwmho3c/"
                },
                {
                    "id": "lwn4dxm",
                    "author": "BelisarioPorras",
                    "body": "I really like NX and monorepo. Treat every component as a project. Each component is a build and NX caches each command. Then you can refactor gradually.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731358829.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwn4dxm/"
                },
                {
                    "id": "lwnlwiu",
                    "author": "Effective-Pen-9963",
                    "body": "Is it running typescript?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731364262.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwnlwiu/"
                },
                {
                    "id": "lwo104z",
                    "author": "cafebistro",
                    "body": "Burn it all down and rewrite it in 500 lines with htmx",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731369419.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwo104z/"
                },
                {
                    "id": "lwqestw",
                    "author": "Few_Goat6791",
                    "body": "1. Setup a design system \n2. Reuse shared logic in shared hooks\n3. Pump versions of libraries as much as u can, like react router v6 suspenses routes that would be helpful \n4. Go through all pages and components with business there might be areas not needed anymore \n5. Apply tree shaking and noUnusedLocals in tsconfig (if u don’t use TS start an incremental migration)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731411069.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwqestw/"
                },
                {
                    "id": "lwsejwm",
                    "author": "totkeks",
                    "body": "Make a list of all the components and their purpose. Or a map / net, there are probably tools for this.\n\nThen split them into design elements, business logic and pages.\n\nFor the design elements try to throw them into a design system.\nThe business logic should stay there, but see if it makes sense or if it has tons of interdependencies between each other. Then you need to clean that up and make them small islands or self-contained or whatever it is called.\nThe pages can just be pages, but shouldn't contain any logic, just components place together.\n\nYou won't be able to do that alone. You need a team, or teams.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731436680.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwsejwm/"
                },
                {
                    "id": "lwsg13g",
                    "author": "fanna1119",
                    "body": "It's hard to wrap my head around the idea that a banking related app / project has 8000 unique components.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731437128.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwsg13g/"
                },
                {
                    "id": "lwxwf08",
                    "author": "sacredgeometry",
                    "body": ".... the fuck?\n\nI would get a job offer tell them their code is so bad that you are looking for a new job, based on their reaction you then decide whether to hand in your notice or not.\n\nI mean if you can even be bothered to fix it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731516680.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwxwf08/"
                },
                {
                    "id": "lx0ajq8",
                    "author": "Calm-Highway-3636",
                    "body": "While I'm not super familiar myself with this, I know a component library provider team that cut down their build time drastically utilizing distributed build using Bezel to achieve this. (But bezel might be a bit of a steep learning curve I heard)\n\nIf anyone is familiar with this, feel free to shed some light on this.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731543655.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lx0ajq8/"
                },
                {
                    "id": "lwh7ev2",
                    "author": "water_bottle_goggles",
                    "body": "L 🤣",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731274200.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwh7ev2/"
                },
                {
                    "id": "lwiondb",
                    "author": "AlwaysF3sh",
                    "body": "“A little bit not good” lmao",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731292443.0,
                    "parent_id": "t3_1gnw5ee",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwiondb/"
                },
                {
                    "id": "lwh2sn7",
                    "author": "Toddwseattle",
                    "body": "Above all, in most cases I strongly recommend against a complete rewrite.  These mostly fail.   Gather some basic metrics on health las you have started to do, especially test coverage.  Can you identify a prioritized set of high usage/value components to refactor? Are there components you can start to address debt on the context of the current roadmap?  This is the supplemental reading I give my students in software engineering FWIW: https://medium.com/booking-com-development/measuring-technical-debt-to-avoid-the-boiling-frog-syndrome-c44eb48b3ce1",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731272827.0,
                    "parent_id": "t1_lwdv4vz",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwh2sn7/"
                },
                {
                    "id": "lwdvpag",
                    "author": "Scared-Librarian7811",
                    "body": "I agree.",
                    "score": 19,
                    "upvotes": 19,
                    "downvotes": 0,
                    "created_utc": 1731228096.0,
                    "parent_id": "t1_lwdv4vz",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdvpag/"
                },
                {
                    "id": "lwqujon",
                    "author": "boon4376",
                    "body": "or just see if it can be upgraded to the vite swc for faster compilation.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731418370.0,
                    "parent_id": "t1_lwdv4vz",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwqujon/"
                },
                {
                    "id": "lwfbbim",
                    "author": "moldy912",
                    "body": "Probably need a design system. I can imagine they probably have like 50 types of buttons.",
                    "score": 52,
                    "upvotes": 52,
                    "downvotes": 0,
                    "created_utc": 1731253636.0,
                    "parent_id": "t1_lwdvzax",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfbbim/"
                },
                {
                    "id": "lwfclyv",
                    "author": "ExiledDude",
                    "body": "I guess refactoring that would take months or even years if there isn't a team of developers with good practices ingrained in them with a plan to methodically fix this enigma",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731254052.0,
                    "parent_id": "t1_lwdvzax",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfclyv/"
                },
                {
                    "id": "lwdwii2",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you for your response🙏",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731228632.0,
                    "parent_id": "t1_lwdvzax",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwii2/"
                },
                {
                    "id": "lwduyyn",
                    "author": "West-Chemist-9219",
                    "body": "Only good answer :)",
                    "score": 28,
                    "upvotes": 28,
                    "downvotes": 0,
                    "created_utc": 1731227615.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwduyyn/"
                },
                {
                    "id": "lwdv2ce",
                    "author": "Scared-Librarian7811",
                    "body": "LoL😂",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731227677.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdv2ce/"
                },
                {
                    "id": "lwfulgv",
                    "author": "snow_coffee",
                    "body": "If this job is paying him well, he should find a freelancing opportunity as this job looks more of laid back \n\nIf the bank has survived with such architecture, it will survive even better with an expert like OP, without having to fully revamp the app, if OP doesn't like putting so much of effort \n\nIn an era of AI and no Tech boom, if you have got a good hike and laid back wlb, it's a good combo I feel.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731259688.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfulgv/"
                },
                {
                    "id": "lweatx4",
                    "author": "Dugba",
                    "body": "This legit is funny 😂",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731238112.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweatx4/"
                },
                {
                    "id": "lwgncav",
                    "author": "0day_got_me",
                    "body": "Idk man, seems like job security.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731268281.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwgncav/"
                },
                {
                    "id": "lwhk4m4",
                    "author": "Embostan",
                    "body": "Or capitalise on the dumpster fire to make yourself invaluable",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731278205.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwhk4m4/"
                },
                {
                    "id": "lweaypu",
                    "author": "anfawave",
                    "body": "💯",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731238195.0,
                    "parent_id": "t1_lwdush5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweaypu/"
                },
                {
                    "id": "lwe323m",
                    "author": "Scared-Librarian7811",
                    "body": "Thanks you for responding \n\nI will consider this in my planning thank you",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731233017.0,
                    "parent_id": "t1_lwe0rqf",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe323m/"
                },
                {
                    "id": "lwf15f8",
                    "author": "wronglyzorro",
                    "body": "This is exactly what came to mind here. Design system, internal component library, and most important training. Let's be honest though, most companies put very little into their onboarding practices.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731250222.0,
                    "parent_id": "t1_lwe0rqf",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf15f8/"
                },
                {
                    "id": "lwemmqj",
                    "author": "prakhart111",
                    "body": "best answer for you here, this'll probably help you to convince the stakeholders. They won't understand \"refactoring\", but they may agree to create a UI design system. Best of luck, but if you find them to be unbothered about the problem, then you should parallelly start looking for a new job :)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731244392.0,
                    "parent_id": "t1_lwe0rqf",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwemmqj/"
                },
                {
                    "id": "lwe1omh",
                    "author": "Scared-Librarian7811",
                    "body": "We are writing tests at this moment",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731232099.0,
                    "parent_id": "t1_lwdz8yx",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe1omh/"
                },
                {
                    "id": "lwerura",
                    "author": "sebasgarcep",
                    "body": "Just one comment: if you are using a VCS tool like git (and you should) you can actually delete unused code. If you need it back you can just revert the PR/commit that made the change.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731246643.0,
                    "parent_id": "t1_lwe262j",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwerura/"
                },
                {
                    "id": "lwe3rmy",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you for your suggestions",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731233493.0,
                    "parent_id": "t1_lwe262j",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe3rmy/"
                },
                {
                    "id": "lwe74n0",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you for suggesting that pattern thank you",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731235738.0,
                    "parent_id": "t1_lwe4at7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe74n0/"
                },
                {
                    "id": "lwffriu",
                    "author": "gimme-the-lute",
                    "body": "This is it. It took a long time to create this mess, it’s going to take a long time to get out of it. \n\nMake the current state known to the stakeholders and give them a chance to prioritize refactoring. They won’t, and they shouldn’t, but having that conversation helps spread the ownership of the problem around. You want lots of people to know how bad it is for this reason. \n\nThen, exactly as stated above, follow papa Martin Fowler on this one. You just gotta turn the ship so that you are trending back towards being on course. You are currently way off course, so it’ll take awhile to get there.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731255056.0,
                    "parent_id": "t1_lwe4at7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwffriu/"
                },
                {
                    "id": "lwf7vi9",
                    "author": "simonwwalsh",
                    "body": "This is the best answer. You have to do it incrementally and from within. If you have the benefit of starting whole new features often, you could use that as the opportunity to set the new golden standard going forward. Every new feature needs to adhere to that new standard and old features slowly get refactored to reuse whatever you build from as a new standard. \n\nSorry it's all very theoretical since we don't have clear examples. \n\nBut please don't attempt a rewrite. They never work even on much smaller projects. And there's a great chance having to maintain and support two shitty apps instead of one 🤭",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731252517.0,
                    "parent_id": "t1_lwe4at7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf7vi9/"
                },
                {
                    "id": "lwg25xo",
                    "author": "warmbowski",
                    "body": "This! I’ve done this at two companies I’ve worked at. New codebase is a monorepo. Ticket out moving by route. Break down further if needed. Refactor but maintain consistent style. Use a themeable ui library like Mui or mantine. This allows the ability to work in refactor in between new features. Trickiest part is routing incoming traffic between the two apps and making the route transitions seamless. Particularly if the routes are auth’d.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731261976.0,
                    "parent_id": "t1_lwe4at7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwg25xo/"
                },
                {
                    "id": "lwvzknx",
                    "author": "PositiveApartment382",
                    "body": "Careful with the Boy Scout rule. From my experience, while it sounds great, often proper refactorings can run very deep. Often it is not easy to apply the rule without it ending up taking way more time than the original thing that you had to implement. I have to admit I have never seen it work properly in places where big refactorings are required to make the codebase decent again.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731486111.0,
                    "parent_id": "t1_lwe4at7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwvzknx/"
                },
                {
                    "id": "lwe2ftg",
                    "author": "punani_pancake",
                    "body": "Refactoring big components it the main thing, along with other dependencies. Switching to a rspack, unless it is a drop in replacement (all the same commands etc) might be a bad idea, since it might lead you down a rabbit hole of 'small things to change before this runs', not to mention breaking build / deploy pipelines and other scripts",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731232608.0,
                    "parent_id": "t1_lwdwydo",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe2ftg/"
                },
                {
                    "id": "lwewz05",
                    "author": "bzbub2",
                    "body": "see also, farm-fe. rspack and rsbuild are 'webpack compatible' but farm-fe markets itself as 'vite compatible'\n\n[https://github.com/farm-fe/farm](https://github.com/farm-fe/farm)\n\nthe nice thing is all this new build tooling is sort of converging on some set of shared notions, so you can often just swap them out...historically people made e.g. a lot of webpack specific hacks in their code so it made it harder to do that",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731248684.0,
                    "parent_id": "t1_lwdwydo",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwewz05/"
                },
                {
                    "id": "lwfb0d8",
                    "author": "OkLettuce338",
                    "body": "RSBuild is the straight vite replacement. I recently migrated and I could not be happier",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731253535.0,
                    "parent_id": "t1_lwdwydo",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfb0d8/"
                },
                {
                    "id": "lwfmlsc",
                    "author": "ArtDealer",
                    "body": "This.  The barrel files are going to be the biggest culprit here.  Anecdotally : a project I optimized by only removing barrel feels had unit tests running for 4 minutes before: after removing barrel files = 30 seconds.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731257216.0,
                    "parent_id": "t1_lwdwydo",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfmlsc/"
                },
                {
                    "id": "lwdx8da",
                    "author": "Scared-Librarian7811",
                    "body": "That's a great and helpful answer thank you",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229104.0,
                    "parent_id": "t1_lwdwydo",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdx8da/"
                },
                {
                    "id": "lx5recu",
                    "author": "crummy",
                    "body": "surprised this isn't higher. I'm not a web developer but first figure out what is taking the majority of 54mins. otherwise you could end up with a lot of refactoring for no benefit.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731622271.0,
                    "parent_id": "t1_lwe03iy",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lx5recu/"
                },
                {
                    "id": "lwe23qp",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you \n\nDo you suggest any tool ?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731232382.0,
                    "parent_id": "t1_lwe03iy",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe23qp/"
                },
                {
                    "id": "lwf1hm4",
                    "author": "BolunZ6",
                    "body": "Rewrite 8000 component would take years. If you not careful, you will create another mess even worst than before",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731250339.0,
                    "parent_id": "t1_lwdwrff",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf1hm4/"
                },
                {
                    "id": "lwdx646",
                    "author": "Scared-Librarian7811",
                    "body": "I am amazed by power of the react and vite that is handling this huge project",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731229063.0,
                    "parent_id": "t1_lwdwrff",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdx646/"
                },
                {
                    "id": "lwdwnby",
                    "author": "Scared-Librarian7811",
                    "body": "I didn't know about that thank you 🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731228721.0,
                    "parent_id": "t1_lwdw8bc",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwnby/"
                },
                {
                    "id": "lwdygu9",
                    "author": "Scared-Librarian7811",
                    "body": "That was great. Yes I will do that thank you",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229924.0,
                    "parent_id": "t1_lwdy1pp",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdygu9/"
                },
                {
                    "id": "lwevgrf",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you for your answer. Really changed my mind set about project \n\n\nI also configured (sonar cube) which is like a heaven and I like to thanks to it's developer alot",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731248105.0,
                    "parent_id": "t1_lwegon8",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwevgrf/"
                },
                {
                    "id": "lwdw58i",
                    "author": "Scared-Librarian7811",
                    "body": "That's a solution. Thanks for your response",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731228390.0,
                    "parent_id": "t1_lwdvwdj",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdw58i/"
                },
                {
                    "id": "lwf009p",
                    "author": "TheExodu5",
                    "body": "Yup exactly my thoughts. It’s definitely the safest way to go about this.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731249818.0,
                    "parent_id": "t1_lwdvwdj",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf009p/"
                },
                {
                    "id": "lwdy7mg",
                    "author": "Scared-Librarian7811",
                    "body": "Since vite is serving each component by request dev mode is super fast .",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731229756.0,
                    "parent_id": "t1_lwdxmiu",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdy7mg/"
                },
                {
                    "id": "lwdy5ni",
                    "author": "Scared-Librarian7811",
                    "body": "There are a lot of issue related to tech debt.\n\nDeadlines are very important that I ran into some features half developed in production.\n\nAs a reviewer I am looking for logical solutions in every aspect so I asked this question",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229720.0,
                    "parent_id": "t1_lwdxmiu",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdy5ni/"
                },
                {
                    "id": "lwe7esi",
                    "author": "Scared-Librarian7811",
                    "body": "Yes duplications are crazy here. Thanks you",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731235922.0,
                    "parent_id": "t1_lwe5nkt",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe7esi/"
                },
                {
                    "id": "lwexuh6",
                    "author": "Scared-Librarian7811",
                    "body": "https://vite.dev/guide/performance\n\nAlso I tried to transfer all pdf assets into a URL instead of importing to project. \n\nAlso got some vite config from chatGPT \n\nThey worked a little bit fortunately",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731249018.0,
                    "parent_id": "t1_lwewmqr",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwexuh6/"
                },
                {
                    "id": "lwiyrfn",
                    "author": "Scared-Librarian7811",
                    "body": "I'll check it out thank You",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731296164.0,
                    "parent_id": "t1_lwg2joj",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwiyrfn/"
                },
                {
                    "id": "lwdw6sq",
                    "author": "Scared-Librarian7811",
                    "body": "Yup 🥶",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731228420.0,
                    "parent_id": "t1_lwdvx7x",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdw6sq/"
                },
                {
                    "id": "lwe0wu5",
                    "author": "Scared-Librarian7811",
                    "body": "The fact is we actually want \nPlease send me your resume thank you",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731231577.0,
                    "parent_id": "t1_lwdz80q",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe0wu5/"
                },
                {
                    "id": "lwe2xgq",
                    "author": "Scared-Librarian7811",
                    "body": "I will look into them thank you 🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731232932.0,
                    "parent_id": "t1_lwe0ngz",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe2xgq/"
                },
                {
                    "id": "lwecg9a",
                    "author": "NotLyon",
                    "body": "You commented that you're writing tests right now. Still curious if the build time includes tests. Also, pause. Do not write tests for components right now. Start with e2e tests because it sounds like components need to be drastically refactored.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731239112.0,
                    "parent_id": "t1_lwebai1",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwecg9a/"
                },
                {
                    "id": "lwix0ta",
                    "author": "Scared-Librarian7811",
                    "body": "Thanks for sharing. My situation is very similar at this point",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731295525.0,
                    "parent_id": "t1_lwgszra",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwix0ta/"
                },
                {
                    "id": "lwivv24",
                    "author": "Scared-Librarian7811",
                    "body": "I'll do thanks 🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731295082.0,
                    "parent_id": "t1_lwhehtk",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwivv24/"
                },
                {
                    "id": "lwe44ua",
                    "author": "minimuscleR",
                    "body": "> 1000 LOC components is beyond crazy.\n\nEh its not that crazy tbh. My work at the moment is refactoring a lot of these components, and they are all class components, where a good 1/3 is just setState which takes 6 loc per state.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731233739.0,
                    "parent_id": "t1_lwdvkf3",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe44ua/"
                },
                {
                    "id": "lwdw01y",
                    "author": "Scared-Librarian7811",
                    "body": "They mostly auto generated component from BIZAGI which is a BPM. I am looking for solutions to improve this generation something like a design pattern or library to monitor or etc",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731228296.0,
                    "parent_id": "t1_lwdvkf3",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdw01y/"
                },
                {
                    "id": "lwdw0hn",
                    "author": "Capaj",
                    "body": "LOL I've been on a react native project not too long ago where 1000 LOC was the smallest component. Most were around 3-10k LOC",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731228303.0,
                    "parent_id": "t1_lwdvkf3",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdw0hn/"
                },
                {
                    "id": "lwe21lu",
                    "author": "Scared-Librarian7811",
                    "body": "I will consider that thank you",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731232342.0,
                    "parent_id": "t1_lwdzqbx",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe21lu/"
                },
                {
                    "id": "lwf2t3x",
                    "author": "weIIokay38",
                    "body": "This is an insanely bad idea, rewrites almost never work. Do not try to do this lol.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731250799.0,
                    "parent_id": "t1_lwdzqbx",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf2t3x/"
                },
                {
                    "id": "lwe0jd0",
                    "author": "Scared-Librarian7811",
                    "body": "Thanks you for your response \n\nI definitely consider that",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731231323.0,
                    "parent_id": "t1_lwdz2tw",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe0jd0/"
                },
                {
                    "id": "lwe7i2q",
                    "author": "Scared-Librarian7811",
                    "body": "8000 components. Bro I'm not batman",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731235983.0,
                    "parent_id": "t1_lwe15q7",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe7i2q/"
                },
                {
                    "id": "lwdxtyv",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you 🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229505.0,
                    "parent_id": "t1_lwdxdcs",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdxtyv/"
                },
                {
                    "id": "lwf10o2",
                    "author": "TheExodu5",
                    "body": "This comment makes no sense. What does a lighthouse score have to do with build times?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731250175.0,
                    "parent_id": "t1_lwdxdcs",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf10o2/"
                },
                {
                    "id": "lwdytp2",
                    "author": "Scared-Librarian7811",
                    "body": "That's greate I will check them out thank you",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230164.0,
                    "parent_id": "t1_lwdy93y",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdytp2/"
                },
                {
                    "id": "lwe1v0x",
                    "author": "Scared-Librarian7811",
                    "body": "It use eslint but old developers disabled many lines for ealint",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731232218.0,
                    "parent_id": "t1_lwdz92u",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe1v0x/"
                },
                {
                    "id": "lwixspn",
                    "author": "Scared-Librarian7811",
                    "body": "Thank you for responding \nCan you please explain more about separate build \nAnd share your experience \n\nDefinitely I'll search too",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731295817.0,
                    "parent_id": "t1_lwgll17",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwixspn/"
                },
                {
                    "id": "lwhk0m9",
                    "author": "Embostan",
                    "body": "ButtonWithOutline, DestructiveButtonWithOutline, PrimaryButton, IconButtonRed, ...",
                    "score": 22,
                    "upvotes": 22,
                    "downvotes": 0,
                    "created_utc": 1731278171.0,
                    "parent_id": "t1_lwfbbim",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwhk0m9/"
                },
                {
                    "id": "lwecbpe",
                    "author": "f314",
                    "body": "Building on u/chris-top's reply, you want your components to **not** contain any logic if at all possible. The vast majority of them should only render content based on props. This might require you to break down the components even more than you expect!\n\nThe actual application logic should live at the feature (or view) level. That might be a page in the application, or a section on something like a dashboard page. Even here you should extract that logic out from the presentation, either into React hooks or regular functions. You want to end up with something like this:\n\n    function MyView() {\n        const { viewData } = useViewData();\n    \n        return (\n            <section>\n                <SomeComponent someUnitOfInfo={viewData.unitOfInfo} />\n                <SomeOtherComponent />\n                {*/ ... more stuff */}\n            </section>\n        );\n    }\n\nUse React Context to share data within nested components, and cache server data in your data hooks with something like TanStack Query or UseSWR.",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731239035.0,
                    "parent_id": "t1_lwe323m",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwecbpe/"
                },
                {
                    "id": "lwfeehv",
                    "author": "Capaj",
                    "body": "I hope they are e2e test. Doing unit tests could easily end up lost when you refactor away some components entirely",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731254622.0,
                    "parent_id": "t1_lwe1omh",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfeehv/"
                },
                {
                    "id": "lwetr8b",
                    "author": "Scared-Librarian7811",
                    "body": "I am doing good refactoring with documents \n\n/**\n*@refactor eg.....\n*@example [old code]\n*/\nNew code",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731247425.0,
                    "parent_id": "t1_lwerura",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwetr8b/"
                },
                {
                    "id": "lwex1jg",
                    "author": "azangru",
                    "body": "> Refactoring big components it the main thing, \n\nI don't get it. Why would refactoring big components (by splitting them into smaller ones?) have any impact on the build time? If anything, isn't there a higher cost for a bundler to process several files as compared to a single one?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731248711.0,
                    "parent_id": "t1_lwe2ftg",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwex1jg/"
                },
                {
                    "id": "lwg0aux",
                    "author": "warmbowski",
                    "body": "Barrel file also ruin tree shaking if you used in packages. (Might be more of a monorepo problem)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731261413.0,
                    "parent_id": "t1_lwfmlsc",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwg0aux/"
                },
                {
                    "id": "lwdylco",
                    "author": "Bubbly_Winter_1950",
                    "body": "If you’re looking for faster build time, you can also try `@vitejs/plugin-react-swc`, probably it will be easier rather than switch the whole bulder in the project\nEdit: (at least before Rolldown release it should help quite a bit)",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731230009.0,
                    "parent_id": "t1_lwdx8da",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdylco/"
                },
                {
                    "id": "lx5tnon",
                    "author": "joyancefa",
                    "body": "😅 glad we agree. \n\nMeasure first then optimise: that is the only sane way to do this",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731622971.0,
                    "parent_id": "t1_lx5recu",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lx5tnon/"
                },
                {
                    "id": "lwe3pme",
                    "author": "joyancefa",
                    "body": "I  am not that familiar with vite tools but you can run vite in debug mode to see more information and also use this tool to visualise bundles https://www.npmjs.com/package/rollup-plugin-visualizer",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731233456.0,
                    "parent_id": "t1_lwe23qp",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe3pme/"
                },
                {
                    "id": "lweyluw",
                    "author": "ezhikov",
                    "body": "Yeah, SonarCube is awesome. I didn't mention it, because usually it requires much more effort to set up",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731249304.0,
                    "parent_id": "t1_lwevgrf",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweyluw/"
                },
                {
                    "id": "lwexcnf",
                    "author": "azangru",
                    "body": "So what is it that takes 54 minutes? Rollup?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731248830.0,
                    "parent_id": "t1_lwdy7mg",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwexcnf/"
                },
                {
                    "id": "lwdyeuh",
                    "author": "ICanHazTehCookie",
                    "body": "Your project has too much general tech debt to possibly address it generally. If you give us smaller, more concrete issues you're facing, they may have viable piecemeal solutions :) For instance, does the build time harm productivity/iterating quickly?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731229888.0,
                    "parent_id": "t1_lwdy5ni",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdyeuh/"
                },
                {
                    "id": "lwe8gyb",
                    "author": "DbrDbr",
                    "body": "Cool, send me a dm. I cannot dm you",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731236614.0,
                    "parent_id": "t1_lwe0wu5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe8gyb/"
                },
                {
                    "id": "lwftdtu",
                    "author": "delwynd",
                    "body": "Please DM me as well. I enjoy fixing problems like this.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731259312.0,
                    "parent_id": "t1_lwe0wu5",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwftdtu/"
                },
                {
                    "id": "lwdwbgm",
                    "author": "FreshFillet",
                    "body": "Yikes, how does someone even navigate through a 1000 LOC component. Inheriting a project with terrible maintenance is honestly one of my biggest dev nightmares.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731228504.0,
                    "parent_id": "t1_lwdw0hn",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwbgm/"
                },
                {
                    "id": "lwdzkhx",
                    "author": "No_Shame_8895",
                    "body": "1000 is the limit for me, if it gets more then 700 then it's time to extract the logic, 3k is insane",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230663.0,
                    "parent_id": "t1_lwdw0hn",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdzkhx/"
                },
                {
                    "id": "lwfc77h",
                    "author": "jonkoops",
                    "body": "The reason re-writes almost never work is that they are not done incrementally with continuous delivery. If you spend an entire year in the trenches and have nothing to show for it, that is when projects fail.\n\nThere is nothing wrong with selectively re-writing parts of an application or even building a separate application that takes over certain sections. That can be done fast and correctly.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731253920.0,
                    "parent_id": "t1_lwf2t3x",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfc77h/"
                },
                {
                    "id": "lwe8ekp",
                    "author": "micppp",
                    "body": "Oh no. I wasn’t having a go. \nI understand it’s a huge fuck up to fix but regardless of the number of components I assumed to get a gig like this you would be able to break it down and form a plan of what the steps are to fix it, drawing on previous experience.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731236572.0,
                    "parent_id": "t1_lwe7i2q",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe8ekp/"
                },
                {
                    "id": "lwdyxpi",
                    "author": "Bubbly_Winter_1950",
                    "body": "For SSG focused solution consider Astro framework as well, if you don’t really need a SPA it should give you pretty impressive results and great DX.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230238.0,
                    "parent_id": "t1_lwdxtyv",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdyxpi/"
                },
                {
                    "id": "lwpcszf",
                    "author": "rainWalker468",
                    "body": "Build Time = 1 hour approx. What is the performance score of your website? With less build time, will it improve your performance.\n\nBy decreasing your build time, what metric you are improving for the customer.  \nThat's why I ask to check your Lighthouse score and performance.\n\nWhat I wanted to convey that if your website performance is 100 and build time is around 1 hour. Then let it be. You don't have to do any improvement.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731387517.0,
                    "parent_id": "t1_lwf10o2",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwpcszf/"
                },
                {
                    "id": "lwjq1gp",
                    "author": "MrJaver",
                    "body": "I haven’t tried but it’s on my list. Essentially run multiple servers on different ports and combine them into 1, where you can import components from a url instead of file. You can redeploy 1 server and everyone importing it will instantly see new version.\n\nhttps://youtu.be/s_Fs4AXsTnA?si=s-_E0vV4QsrOKwpk",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731309459.0,
                    "parent_id": "t1_lwixspn",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwjq1gp/"
                },
                {
                    "id": "lwjqgit",
                    "author": "ultavulta",
                    "body": "Genuine question; is it best to do this, or have a variant prop in a generic-er component",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731309721.0,
                    "parent_id": "t1_lwhk0m9",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwjqgit/"
                },
                {
                    "id": "lwq5jv5",
                    "author": "vandasche",
                    "body": "this is what mu previous dev doing like wth",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731405204.0,
                    "parent_id": "t1_lwhk0m9",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwq5jv5/"
                },
                {
                    "id": "lwfk162",
                    "author": "Scared-Librarian7811",
                    "body": "It's both of them jest and hired a cypress developer",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731256417.0,
                    "parent_id": "t1_lwfeehv",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfk162/"
                },
                {
                    "id": "lwhqd99",
                    "author": "punani_pancake",
                    "body": "I'm expecting by refactoring, duplicate code will be uncovered and extracted into reusable components, that get reused in multiple places, reducing overall complexity and code size",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731280294.0,
                    "parent_id": "t1_lwex1jg",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwhqd99/"
                },
                {
                    "id": "lwdzfhi",
                    "author": "Scared-Librarian7811",
                    "body": "🙏🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230569.0,
                    "parent_id": "t1_lwdylco",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdzfhi/"
                },
                {
                    "id": "lwe6eqf",
                    "author": "Scared-Librarian7811",
                    "body": "🙏🙏",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731235258.0,
                    "parent_id": "t1_lwe3pme",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe6eqf/"
                },
                {
                    "id": "lweymhq",
                    "author": "Scared-Librarian7811",
                    "body": "I found that vite is using different strategies for bundling in dev and build \n\nDev is using esBuild\nBuild is using roll up\n\nI am thinking to switch to esBuild for build mode too. \n\nBut there many concrete issues that I have to track",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731249311.0,
                    "parent_id": "t1_lwexcnf",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lweymhq/"
                },
                {
                    "id": "lwdwon9",
                    "author": "Capaj",
                    "body": "oh I love inheriting a project with terrible maintenance. Means I can refactor the shit out of it.\nI just hate working on the project being forced to adhere to the same crazy practices.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731228746.0,
                    "parent_id": "t1_lwdwbgm",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdwon9/"
                },
                {
                    "id": "lwdzunl",
                    "author": "Scared-Librarian7811",
                    "body": "I was thinking to switch to next for ssg, which one you suggest?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731230854.0,
                    "parent_id": "t1_lwdyxpi",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdzunl/"
                },
                {
                    "id": "lwkb994",
                    "author": "Kosai106",
                    "body": "It depends.\n\nBut I'd lean towards a variant prop for sure.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731323561.0,
                    "parent_id": "t1_lwjqgit",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwkb994/"
                },
                {
                    "id": "lwlnoob",
                    "author": "jethiya007",
                    "body": "if you need advice on these things go to gpt or claude they sometimes give pretty good advice or like here check shadcn code example: shadcn button component they users variants as a prop to modify you can checkout other components for similar best practices and the good part? its open source",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731342736.0,
                    "parent_id": "t1_lwjqgit",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwlnoob/"
                },
                {
                    "id": "lwwd3pt",
                    "author": "Embostan",
                    "body": "Props. \"primary\", \"secondary\"...\n\nAnd your button is not supposed to have a variant just for when it's destructive. That's what design tokens are for.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731495216.0,
                    "parent_id": "t1_lwjqgit",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwwd3pt/"
                },
                {
                    "id": "lwftmck",
                    "author": "Sudden-Ad8895",
                    "body": "Look into playwright rather than cypress",
                    "score": 12,
                    "upvotes": 12,
                    "downvotes": 0,
                    "created_utc": 1731259385.0,
                    "parent_id": "t1_lwfk162",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwftmck/"
                },
                {
                    "id": "lwfkd64",
                    "author": "Scared-Librarian7811",
                    "body": "But at the end I want any solutions or library that help",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731256520.0,
                    "parent_id": "t1_lwfk162",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwfkd64/"
                },
                {
                    "id": "lwf2e9k",
                    "author": "weIIokay38",
                    "body": "What version of Vite are y'all on? Build mode should be using a combo of ESbuild and rollup. Vite builds can be slow bit not like 59 minutes slow. It should be at least a quarter of that speed.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731250656.0,
                    "parent_id": "t1_lweymhq",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwf2e9k/"
                },
                {
                    "id": "lwdx0z0",
                    "author": "FreshFillet",
                    "body": "Props to you (no pun intended). I'd give up before even thinking of refactoring a mess like that. I have a friend who inherited a work project with mixed fucking practices so one file had snake case variables and the other pascal case, etc.. Total nightmare fuel.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731228972.0,
                    "parent_id": "t1_lwdwon9",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwdx0z0/"
                },
                {
                    "id": "lwe3qp7",
                    "author": "BirdsongMiasma",
                    "body": "Next.js has been getting some bad rap in this (and related) fora, due to the increasingly tight dependence on Vercel.  I took a brief look at Astro a couple of months back, and I liked what I saw.  Do take some time to investigate it further.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731233475.0,
                    "parent_id": "t1_lwdzunl",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe3qp7/"
                },
                {
                    "id": "lwe60bo",
                    "author": "Bubbly_Winter_1950",
                    "body": "Well, tbh I had no experience with next in past years (if ever). But last month have been building SSG website with Astro 5 (beta), managed to get all 100 Lighthouse scores on the most of the pages even on mobile. So can’t comment really about such a huge project as you described here, but this framework definitely has great potential IMO. So I’m quite happy with the decision I’ve made choosing between Next and Astro.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731234994.0,
                    "parent_id": "t1_lwdzunl",
                    "link_id": "t3_1gnw5ee",
                    "permalink": "/r/reactjs/comments/1gnw5ee/react_vite_8000_components_54minutes_build/lwe60bo/"
                }
            ]
        },
        {
            "id": "1gnvx5o",
            "title": "Tuono - Superfast React fullstack framework",
            "author": "ValerioAgeno",
            "score": 20,
            "upvotes": 20,
            "downvotes": 0,
            "num_comments": 7,
            "created_utc": 1731226265.0,
            "url": "https://github.com/Valerioageno/tuono",
            "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwe2upn",
                    "author": "Important_Wrap_8481",
                    "body": "Nice I’ve been waiting for a new framework",
                    "score": 74,
                    "upvotes": 74,
                    "downvotes": 0,
                    "created_utc": 1731232881.0,
                    "parent_id": "t3_1gnvx5o",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwe2upn/"
                },
                {
                    "id": "lwesott",
                    "author": "EvilDavid75",
                    "body": "Like the name ⚡️",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731246989.0,
                    "parent_id": "t3_1gnvx5o",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwesott/"
                },
                {
                    "id": "lwdty2m",
                    "author": "ValerioAgeno",
                    "body": "Hey All, I’m looking for comments and suggestions!",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731226934.0,
                    "parent_id": "t3_1gnvx5o",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwdty2m/"
                },
                {
                    "id": "lwfdb1e",
                    "author": "syahrizalfauzi",
                    "body": "pretty neat actually, what about setting session for auth?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731254273.0,
                    "parent_id": "t3_1gnvx5o",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwfdb1e/"
                },
                {
                    "id": "lweiuix",
                    "author": "spider_84",
                    "body": "So you've been waiting for about a week?\n\nMust have been tough!",
                    "score": 19,
                    "upvotes": 19,
                    "downvotes": 0,
                    "created_utc": 1731242600.0,
                    "parent_id": "t1_lwe2upn",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lweiuix/"
                },
                {
                    "id": "lwfh089",
                    "author": "ValerioAgeno",
                    "body": "That’s a cool question. The project is not ready yet for such logic. I’m working right now on extending the backend capabilities to support cookies and different DB connections",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731255456.0,
                    "parent_id": "t1_lwfdb1e",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwfh089/"
                },
                {
                    "id": "lwi88se",
                    "author": "syahrizalfauzi",
                    "body": "sounds promising, definitely will star in GH",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731286548.0,
                    "parent_id": "t1_lwfh089",
                    "link_id": "t3_1gnvx5o",
                    "permalink": "/r/reactjs/comments/1gnvx5o/tuono_superfast_react_fullstack_framework/lwi88se/"
                }
            ]
        },
        {
            "id": "1gnu6ps",
            "title": "Virtual DOM vs. Fiber Tree (and some questions)",
            "author": "punctuationuse",
            "score": 16,
            "upvotes": 16,
            "downvotes": 0,
            "num_comments": 3,
            "created_utc": 1731218854.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnu6ps/virtual_dom_vs_fiber_tree_and_some_questions/",
            "permalink": "/r/reactjs/comments/1gnu6ps/virtual_dom_vs_fiber_tree_and_some_questions/",
            "selftext": "VDOM vs. Fiber Tree and other questions \n\nHey, so I’ve been diving lately into react’s implementation and I’m having trouble with the terminology. I couldn’t find any definitive answers to these questions, so your help will be greatly appreciated. \n\n1. What is the difference, and the relationship between VDOM and Fiber Tree? I can’t seem to find anything on it. Do they refer to the same thing? From the docs (Preserving and resetting state for example) I see that the virtual dom elements and fibers have similar props (type, key, etc). If not - how is the VDOM relevant for react? In case the diffing algorithms already happens between the two fiber trees. \n\n2. If React Fiber introduced the new fiber structures which hold all the data related to components - type, state queues, etc - where was this info stored before? All the articles I’ve read explain the difference between the stack reconciliation and the new implementation. And this makes sense in regard to the queues and prioritized rendering. Yet Fiber introduces a lot more than that, with new data structures and, what seems like, fundamental changes. Am I missing something? What was it like before internally? \n\n3. How is the alternate fiber tree constructed? Does react construct a new fiber tree, where its root is the triggered component?\n\nFor example, this quote explains it like so:\n\n> So, at this time, Fiber already has the current tree. For every update, it builds a workInProgress tree. It starts with the root fiber and traverses the tree until the leaf node. Unlike the initial render phase, it doesn’t create a new fiber for every React element. It just uses the preexisting fiber for that React element and merges the new data/props from the updated element in the update phase\n\nBut, what does it mean using the preexisting fiber, and how does it correlate with the fact that react still needs to construct a new fiber in order to “merge the new data/props from the updated element”? \n\n4 Generally, what is the relationship between the current node and the workInProgress? Especially during the render phase. Do they reference each other? I ask this in relation to some of the fiber props. memoizedProps, updateQueue, and pendingProps. \n\n4.1. Between one fiber node and the other matching in the alternate tree, are these props just copied? \n\n4.2. Are the changes between rendering happen on the same actual fiber tree? \n\n4.3. Does a single fiber hold info both on the current and In-progress node ? \n\n4.4. Or, if “pendingProps” refers to the props at the time of the render, what’s the case with the state queue - copied to a whole new different fiber, or recreated on each render? \n\nThank you for you input. I suppose some of these questions are trivial, but I need some kind of verification. Any advice or source will be appreciated greatly 🙏😊",
            "comments": [
                {
                    "id": "lwf3yeh",
                    "author": "acemarke",
                    "body": "The \"virtual DOM\" is the element objects you return from your components when rendered. They represent a description of what you want the UI to look like, and this is what React diffs. \n\nFibers are React's internal data structures that represent the actual component tree at this point in time, with all of the details describing its actual contents.\n\nThe rest of the questions are pretty low level, and the best answers are in the actual code.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731251195.0,
                    "parent_id": "t3_1gnu6ps",
                    "link_id": "t3_1gnu6ps",
                    "permalink": "/r/reactjs/comments/1gnu6ps/virtual_dom_vs_fiber_tree_and_some_questions/lwf3yeh/"
                },
                {
                    "id": "lwfaw8t",
                    "author": "punctuationuse",
                    "body": "I see. Thanks!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731253497.0,
                    "parent_id": "t1_lwf3yeh",
                    "link_id": "t3_1gnu6ps",
                    "permalink": "/r/reactjs/comments/1gnu6ps/virtual_dom_vs_fiber_tree_and_some_questions/lwfaw8t/"
                },
                {
                    "id": "lwfsrav",
                    "author": "acemarke",
                    "body": "The best other resource I know of about React's internals is this \"React Internals Deep Dive\":\n\n- https://jser.dev/series/react-source-code-walkthrough/\n\nas well as this \"build a mini React\" post:\n\n- [Didact: Build a Miniature React with Hooks](https://pomb.us/build-your-own-react)\n\nalso, while it's not the actual _internal_ behavior, as far as the _external_ behavior you may want to read my post on React rendering:\n\n- [A (Mostly) Complete Guide to React Rendering Behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/)\n\nand Dan's `useEffect` post:\n\n- [A Complete Guide to useEffect](https://overreacted.io/a-complete-guide-to-useeffect/)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731259118.0,
                    "parent_id": "t1_lwfaw8t",
                    "link_id": "t3_1gnu6ps",
                    "permalink": "/r/reactjs/comments/1gnu6ps/virtual_dom_vs_fiber_tree_and_some_questions/lwfsrav/"
                }
            ]
        },
        {
            "id": "1gnt3xi",
            "title": "Spliting image in react Canvas or D3js",
            "author": "Imen_nuur",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731214800.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnt3xi/spliting_image_in_react_canvas_or_d3js/",
            "permalink": "/r/reactjs/comments/1gnt3xi/spliting_image_in_react_canvas_or_d3js/",
            "selftext": "Hello everyone,\n\nI hope you are doing good.\n\ni need your help, so basically I have an image and  coordinates to split the image according to them and the user should be able to readjust the boxes, I found out that the best way to do so is by  using Canvas but it is real pain. I found D3 js however am not sure if it could do the same job ",
            "comments": []
        },
        {
            "id": "1gnt38s",
            "title": "Redux toolkit query code splitting",
            "author": "omarwael98",
            "score": 0,
            "upvotes": 0,
            "downvotes": 0,
            "num_comments": 7,
            "created_utc": 1731214730.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/",
            "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/",
            "selftext": "Is it better to create a single api using createApi functioevfor everything and split the code using injectendpoints to create api for every module separately from the other considering that they all has the same base url and pretty much everything  but one fetches for example users and the oother fetching companies \nThank you",
            "comments": [
                {
                    "id": "lwd9yfh",
                    "author": "acemarke",
                    "body": "The important thing is that there's only one `createApi` call in the app. That way there's only one RTKQ middleware added to the store, and tag invalidation works correctly across all endpoints.\n\nWhether you define all endpoints in one file, or split them across many files with `api.injectEndpoints()`, is up to you for organizational purposes.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731215399.0,
                    "parent_id": "t3_1gnt38s",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwd9yfh/"
                },
                {
                    "id": "lwdy1xc",
                    "author": "mamurny",
                    "body": "Isnt rtkq middleware used only in development for serialization tests, and completely ignored in prod builds, making this statement kinda irrelevant?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731229652.0,
                    "parent_id": "t1_lwd9yfh",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwdy1xc/"
                },
                {
                    "id": "lwdb660",
                    "author": "omarwael98",
                    "body": "Can you please explain how does it affect the app ?",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731215988.0,
                    "parent_id": "t1_lwd9yfh",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwdb660/"
                },
                {
                    "id": "lwft0dc",
                    "author": "acemarke",
                    "body": "No. You're thinking of the built-in RTK serializability check middleware that's added by `configureStore` in dev.\n\nThe RTK Query middleware is 100% required for it to work. It implements all of the functionality for cache lifecycles, cache garbage collection, tag invalidation, and anything else that requires side-effectful behavior.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731259197.0,
                    "parent_id": "t1_lwdy1xc",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwft0dc/"
                },
                {
                    "id": "lwe3bfg",
                    "author": "phryneas",
                    "body": "No. The middleware does things like cache collection of unused data. This is the RTK Query middleware, not the RTK Middleware (and that one also includes the thunk middleware, so you really want it!).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731233191.0,
                    "parent_id": "t1_lwdy1xc",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwe3bfg/"
                },
                {
                    "id": "lwdulvv",
                    "author": "power78",
                    "body": "This is explained in the docs. They have pretty comprehensive documentation.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731227373.0,
                    "parent_id": "t1_lwdb660",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwdulvv/"
                },
                {
                    "id": "lwdv8z7",
                    "author": "omarwael98",
                    "body": "If you please provide the link to that part in the docs",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731227798.0,
                    "parent_id": "t1_lwdulvv",
                    "link_id": "t3_1gnt38s",
                    "permalink": "/r/reactjs/comments/1gnt38s/redux_toolkit_query_code_splitting/lwdv8z7/"
                }
            ]
        },
        {
            "id": "1gnrl2n",
            "title": "Getting started with contributing to react",
            "author": "ForsakenExpression14",
            "score": 9,
            "upvotes": 9,
            "downvotes": 0,
            "num_comments": 11,
            "created_utc": 1731209456.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/",
            "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/",
            "selftext": "Hello!\n\nI've been using react for around 3 years. Recently I've been trying to understand react internals and it had made me want to contribute to react so that I can help many others. I found this youtube tutorial where Dan Abramov(creator of redux) gives a walkthrough the react codebase and implements some features. I've been trying to follow along but I've noticed that the changes I do to the source code are not reflected immediately in the running tests (jest --watch mode) even though that happens perfectly in Dan's machine.\n\n[https://youtu.be/aS41Y\\_eyNrU?si=BJfuNUDv5\\_ng44wO&t=825](https://www.youtube.com/watch?v=aS41Y_eyNrU&t=825s)\n\nThis tutorial is a bit old so I had to change parts of the code. Here's the command I'm using to run tests.\n\nyarn test --watch ReactSmoosh\n\n  \nI have already installed the dependencies. I even ran the build after making the changes to source code and then ran the tests using the same command. Still my changes to react package's createElement function are not shown in live tests.\n\n\n\nHere's the changed test I've written.\n\n    let React;\n    let ReactDOMClient;\n    let act;\n    \n    describe('ReactSmoosh', () => {\n      beforeEach(() => {\n            React = require('react');\n            ReactDOMClient = require('react-dom/client');\n            act = require('internal-test-utils').act;\n      });\n        \n      it('works', async ()=> {\n        function Dialog({ children }) {\n            return (\n                <div>\n                    <div>\n                        <div />\n                        <p>Hello</p>\n                    </div>\n                    <div>\n                        <div>\n                            {children}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    \n        function Button({ children }) {\n            return (\n                <button>\n                    {children}\n                </button>\n            );\n        }\n    \n        function App() {\n            return (\n                <div>\n                    <div>\n                        <Dialog>\n                            <Button>\n                                Click me\n                            </Button>\n                        </Dialog>\n                    </div>\n                </div>\n            );\n        }\n    \n        const container = document.createElement('div');\n        const root = ReactDOMClient.createRoot(container);\n    \n        await act(() => {\n          root.render(<App />);\n        });\n    \n        expect(container.innerHTML).toBe('<p>Hello</p><button>Click me</button>');\n      })\n    });",
            "comments": [
                {
                    "id": "lwd9t86",
                    "author": "acemarke",
                    "body": "FWIW, realistically \"contributing to React\" isn't a feasible goal except in very rare cases. The React team has their own roadmap and plans, and the React codebase is very complex. The React team tends to ignore any PRs that aren't directly relevant to whatever it is they're currently working on, they don't have any real public description of their roadmap, and it's a tough codebase to get familiar with in the first place.\n\nThere's nothing wrong with going through the React code and learning how it works in general, although there are better tutorials suited for learning that (such as https://pomb.us/build-your-own-react/ ).\n\nBeyond that, there's many other libraries in the ecosystem that could benefit from help.  For that matter, helping with docs is a great place to get involved with open source - it's how _I_ got my start.",
                    "score": 9,
                    "upvotes": 9,
                    "downvotes": 0,
                    "created_utc": 1731215329.0,
                    "parent_id": "t3_1gnrl2n",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwd9t86/"
                },
                {
                    "id": "lwdwafj",
                    "author": "riwom",
                    "body": "it's really commendable that you want to dive into the react codebase and contribute. i wish you strength and inspiration. if you manage to get the hang of it, your skills will be pretty unique, because many developers hesitate to delve into the inner workings of react",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731228485.0,
                    "parent_id": "t3_1gnrl2n",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwdwafj/"
                },
                {
                    "id": "lwcxsms",
                    "author": "Brahminmeat",
                    "body": "This is wild… What is going on with redefining your deps?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731210008.0,
                    "parent_id": "t3_1gnrl2n",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwcxsms/"
                },
                {
                    "id": "lwdbhhb",
                    "author": "ForsakenExpression14",
                    "body": "Thanks for your response and the tutorial link. I’ll go through it. I’d still like to locally implement some changes, even if my PRs aren’t approved. This will help me understand the codebase better. Also, thanks for the advice on contributing to docs. I’ll try that too.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731216141.0,
                    "parent_id": "t1_lwd9t86",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwdbhhb/"
                },
                {
                    "id": "lwdrr1t",
                    "author": "Nervous-Project7107",
                    "body": "Also it seems half of react team is part of vercel",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731225514.0,
                    "parent_id": "t1_lwd9t86",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwdrr1t/"
                },
                {
                    "id": "lweeexp",
                    "author": "ForsakenExpression14",
                    "body": "Thanks for the kind words.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731240253.0,
                    "parent_id": "t1_lwdwafj",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lweeexp/"
                },
                {
                    "id": "lwcydgj",
                    "author": "ForsakenExpression14",
                    "body": "Hi!\n\nIf you're asking about this, that how he's doing it in the tutorial and most of the test files I saw on react codebase does it like this.\n\n    let React;\n    let ReactDOMClient;\n    let act;        \n    \n    React = require('react');\n    ReactDOMClient = require('react-dom/client');\n    act = require('internal-test-utils').act;",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731210244.0,
                    "parent_id": "t1_lwcxsms",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwcydgj/"
                },
                {
                    "id": "lwd3thf",
                    "author": "coffee-praxis",
                    "body": "I reckon this is probably what resetModules flag does in Jest today. Maybe 5 years ago the flag wasn’t there, or he’s not taking extra time to set up Jest.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731212562.0,
                    "parent_id": "t1_lwcxsms",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwd3thf/"
                },
                {
                    "id": "lwqehm5",
                    "author": "woah_m8",
                    "body": "You can always fork the repo and do your pull requests there, then you can still keep track without having them lost in the sea of prs in the react repo",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731410891.0,
                    "parent_id": "t1_lwdbhhb",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwqehm5/"
                },
                {
                    "id": "lwcyggj",
                    "author": "ForsakenExpression14",
                    "body": "I tried importing these from the internal paths in the repo but still didn't work.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731210278.0,
                    "parent_id": "t1_lwcydgj",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwcyggj/"
                },
                {
                    "id": "lwdadv1",
                    "author": "ForsakenExpression14",
                    "body": "I added this. Still didn't work.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731215609.0,
                    "parent_id": "t1_lwd3thf",
                    "link_id": "t3_1gnrl2n",
                    "permalink": "/r/reactjs/comments/1gnrl2n/getting_started_with_contributing_to_react/lwdadv1/"
                }
            ]
        },
        {
            "id": "1gnqj8b",
            "title": "Where to handle API calls?",
            "author": "Eurim",
            "score": 25,
            "upvotes": 25,
            "downvotes": 0,
            "num_comments": 13,
            "created_utc": 1731205919.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/",
            "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/",
            "selftext": "I'm trying to learn how to better structure my projects. \n\nIs it better to have one centralized location where the API fetch requests are made in one component or should each individual component access the API? \n\nSo far the scope of my projects have been simple and small, where all the API calls are handled within the App component and then the data is passed down as needed. ",
            "comments": [
                {
                    "id": "lwcp840",
                    "author": "mlmcmillion",
                    "body": "I use react-query. If I need the same data across multiple components I wrap the react-query hook in a custom hook and lean on its built-in caching and stuff.",
                    "score": 30,
                    "upvotes": 30,
                    "downvotes": 0,
                    "created_utc": 1731206620.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwcp840/"
                },
                {
                    "id": "lwcr79z",
                    "author": "kryptogalaxy",
                    "body": "Look at bulletproof react for inspiration",
                    "score": 13,
                    "upvotes": 13,
                    "downvotes": 0,
                    "created_utc": 1731207388.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwcr79z/"
                },
                {
                    "id": "lwcy6yo",
                    "author": "CodeRadDesign",
                    "body": "it depends on the size of the project. if there's say less than 8-10 calls, i'll just have a apiFunctions.js. if there are multiple endpoints, i'll have a folder called /api, with a [endpointname].js file for each.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731210171.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwcy6yo/"
                },
                {
                    "id": "lwdy3f4",
                    "author": "ICanHazTehCookie",
                    "body": "Behind custom hooks. Components should not be concerned with the implementation details of retrieving the data, only displaying it",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731229679.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwdy3f4/"
                },
                {
                    "id": "lwd01h4",
                    "author": "luhar_21",
                    "body": "In the project I'm working on right now, I have created a folder and three files to keep api endpoints, header methods and api calls. By doing this, I could simply call the api endpoints from api_endpoints.js and header functions from GetHeaders.js to the Api_requests.js. This is useful especially when I have to change the base url or the way I call the header functions.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731210939.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwd01h4/"
                },
                {
                    "id": "lwfqn6m",
                    "author": "yksvaan",
                    "body": "Simplest case is to put your api methods/service in a file and import them where you need. No need for hooks or anything, use them directly ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731258466.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwfqn6m/"
                },
                {
                    "id": "lwjkfnb",
                    "author": "f0rk1zz",
                    "body": "I usually wrap my api calls in a custom hook, along with react-query\n\nIf needed, I might have a provider component (lookup provider pattern) and I call the custom hook there whilst easily subscribing to the data in the children component, this has been my favorite way of handling fetching data",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731306129.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwjkfnb/"
                },
                {
                    "id": "lwg3r4n",
                    "author": "saarthi_",
                    "body": "What I do is inside Components folder I make another service file for same component. So like there's a header component , it will have 2files , HeaderUI and HeaderService. Service will mostly handle api's and some complex logic if it exists.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731262455.0,
                    "parent_id": "t3_1gnqj8b",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwg3r4n/"
                },
                {
                    "id": "lwdgsmb",
                    "author": "thoflens",
                    "body": "This is the way.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731218911.0,
                    "parent_id": "t1_lwcp840",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwdgsmb/"
                },
                {
                    "id": "lwkgzfg",
                    "author": "jcksnps4",
                    "body": "I would just add that I found it useful to have service files that only contain the bare minimum of an api call function wrappers and import those into the custom hooks. It makes it easier to test since the mocks are at the “edge” of the application. You may have custom logic in a hook that you want to test for instance.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731326805.0,
                    "parent_id": "t1_lwcp840",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwkgzfg/"
                },
                {
                    "id": "lwe9m86",
                    "author": "No_Field7448",
                    "body": "I'm new to react, I didn't know I needed that. Thanks",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731237339.0,
                    "parent_id": "t1_lwcr79z",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwe9m86/"
                },
                {
                    "id": "lwcze5x",
                    "author": "CareHour2044",
                    "body": "Completely depends on how you organize the rest of your project. \n\nWe organize by feature, so it lives in an api folder under the related features. Global ones live in the root api folder.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731210668.0,
                    "parent_id": "t1_lwcy6yo",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwcze5x/"
                },
                {
                    "id": "lwfum78",
                    "author": "KidusW",
                    "body": "dis is da wae",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731259694.0,
                    "parent_id": "t1_lwdgsmb",
                    "link_id": "t3_1gnqj8b",
                    "permalink": "/r/reactjs/comments/1gnqj8b/where_to_handle_api_calls/lwfum78/"
                }
            ]
        },
        {
            "id": "1gno8sv",
            "title": "does streaming html with renderToPipeableStream and onShellReady can hurt SEO?",
            "author": "i_dunno_i_dunno",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731198623.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gno8sv/does_streaming_html_with_rendertopipeablestream/",
            "permalink": "/r/reactjs/comments/1gno8sv/does_streaming_html_with_rendertopipeablestream/",
            "selftext": "currently, we use SSR and send a response after rendering is fully completed, including all the fetched data. It's slow, but the HTML contains all the content. we are considering switching to `renderToPipeableStream` with `onShellReady`, but will this affect site indexing? could it negatively impact SEO in any way?",
            "comments": [
                {
                    "id": "lwcg6q9",
                    "author": "horrbort",
                    "body": "Yes",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731203168.0,
                    "parent_id": "t3_1gno8sv",
                    "link_id": "t3_1gno8sv",
                    "permalink": "/r/reactjs/comments/1gno8sv/does_streaming_html_with_rendertopipeablestream/lwcg6q9/"
                },
                {
                    "id": "lwcl9jt",
                    "author": "NSL0GAN",
                    "body": "yes, you can detect its a bot with isbot and swap to using onAllReady instead ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731205072.0,
                    "parent_id": "t3_1gno8sv",
                    "link_id": "t3_1gno8sv",
                    "permalink": "/r/reactjs/comments/1gno8sv/does_streaming_html_with_rendertopipeablestream/lwcl9jt/"
                }
            ]
        },
        {
            "id": "1gnlz12",
            "title": "React Query & Socket IO",
            "author": "Technical-Matter6376",
            "score": 5,
            "upvotes": 5,
            "downvotes": 0,
            "num_comments": 5,
            "created_utc": 1731191959.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnlz12/react_query_socket_io/",
            "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/",
            "selftext": "If i want to build a realtime dashboard what should i use? or should i use them both?",
            "comments": [
                {
                    "id": "lwbq4b0",
                    "author": "kriminellart",
                    "body": "React Query can only react to client-side invalidations, so realistically you'd need both. Otherwise the realtime functionality would  only affect the one user making the mutation. However, with tight revalidation it would not matter so much.\n\nThe real gains with websockets is that you can push data on demand, thus easing the load on your backend.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731193795.0,
                    "parent_id": "t3_1gnlz12",
                    "link_id": "t3_1gnlz12",
                    "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/lwbq4b0/"
                },
                {
                    "id": "lwej42w",
                    "author": "Suspicious-Watch9681",
                    "body": "You can use it and invalidate cache when you receive an event",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731242732.0,
                    "parent_id": "t3_1gnlz12",
                    "link_id": "t3_1gnlz12",
                    "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/lwej42w/"
                },
                {
                    "id": "lwctwj9",
                    "author": "FirefighterEmpty2670",
                    "body": "If you are good with some delay on the data or an eventual consistency, you can use react query to pool data using refetch interval. Just note that it will make a fetch call to your backend depending on the said interval.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731208434.0,
                    "parent_id": "t3_1gnlz12",
                    "link_id": "t3_1gnlz12",
                    "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/lwctwj9/"
                },
                {
                    "id": "lwev9bi",
                    "author": "r3d0c_",
                    "body": "you should look up what tanstack query/react query really is, you can't get realtime communication using that since it's just a caching wrapper for rest/http requests with easy to use hooks for the frontend so you're going to have use websockets",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731248025.0,
                    "parent_id": "t3_1gnlz12",
                    "link_id": "t3_1gnlz12",
                    "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/lwev9bi/"
                },
                {
                    "id": "lweylp0",
                    "author": "terrorTrain",
                    "body": "How much data is in the dashboard? How often does the data change? How many people are looking at them?\n\nIf it's user login counts or something, that's going to be constantly changing on a realtime app, I'd probably just refresh on an interval.\n\nIf it's like a ton of widgets with relatively unchanging data and expensive queries that can't be cached, I'd consider websockets I guess,  but use queries for everything and websockets just send a message when one is out dated and needs to be refreshed.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731249303.0,
                    "parent_id": "t3_1gnlz12",
                    "link_id": "t3_1gnlz12",
                    "permalink": "/r/reactjs/comments/1gnlz12/react_query_socket_io/lweylp0/"
                }
            ]
        },
        {
            "id": "1gnla89",
            "title": "Social Share Preview for Dynamic App",
            "author": "Waytoomanythings",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 0,
            "created_utc": 1731190026.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnla89/social_share_preview_for_dynamic_app/",
            "permalink": "/r/reactjs/comments/1gnla89/social_share_preview_for_dynamic_app/",
            "selftext": "Hey there,\n\nI've been trying to figure this out for days and it's driving me nuts.\n\nI created a customizer app using React, similar to the Nike shoe custom designer app. My customizer is a shopify app that is embedded in my shopify store. It's hosted on netlify. I'm using heroku with postgres to store the properties that are customized. It's working great except for one feature. \n\nI have a share button that allows you to share the page on social media and imessage. When this link or the add to cart is clicked, a camera in the react app renders a thumbnail of the mesh that is then uploaded to an AWS server. The react app quickly grabs the URL of the thumbnail which then updates the cart. It works great.\n\nThe main issue is that no matter what I do, I cannot get the social preview to show the thumbnail. I've tried everything I can think of to get og:image to update whenever the share button is pressed. It always defaults to the fallback og:image. \n\nI've tried doing it in the React code, I've tried it on the shopify side. And I've tried uploading a function on the netlify side. \n\nDoes anybody have a solution or a different method they can recommend? \n\nThe main goal is that when somebody clicks the share button and sends the link via imessage or social media, it shows a preview of the product that they've customized.",
            "comments": []
        },
        {
            "id": "1gnij81",
            "title": "Make dangerouslySetInnerHTML Safer by Disabling Inline Event Handlers",
            "author": "alexmacarthur",
            "score": 11,
            "upvotes": 11,
            "downvotes": 0,
            "num_comments": 9,
            "created_utc": 1731182418.0,
            "url": "https://macarthur.me/posts/safer-dangerouslysetinnerhtml/",
            "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwb5i8v",
                    "author": "zaitsman",
                    "body": "Heard of https://www.npmjs.com/package/sanitize-html ?",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731186820.0,
                    "parent_id": "t3_1gnij81",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwb5i8v/"
                },
                {
                    "id": "lwf0qgi",
                    "author": "Akmantainman",
                    "body": "There’s also \n\n<a href=\"javascript:alert('Hello World!');\">Execute JavaScript</a>\n\nWhich this won’t catch. There’s lots of edge cases for this kind of thing.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731250077.0,
                    "parent_id": "t3_1gnij81",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwf0qgi/"
                },
                {
                    "id": "lwbdqx0",
                    "author": "phryneas",
                    "body": "Or you could use a [Content Security Policy](https://en.wikipedia.org/wiki/Content_Security_Policy) - but generally, `dangerouslySetInnerHTML` is just a foot gun, so try to avoid it.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731189531.0,
                    "parent_id": "t3_1gnij81",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwbdqx0/"
                },
                {
                    "id": "lwasjcb",
                    "author": "alexmacarthur",
                    "body": "Found out this was a risk after a long time shouting about how \\`dangerouslySetInnerHTML\\` wasn't \\_actually\\_ that dangerous. 🤦‍♂️",
                    "score": -3,
                    "upvotes": -3,
                    "downvotes": 0,
                    "created_utc": 1731182552.0,
                    "parent_id": "t3_1gnij81",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwasjcb/"
                },
                {
                    "id": "lwb66nc",
                    "author": "alexmacarthur",
                    "body": "Yep, and DOMPurify. You’ll take a (probably minor) performance hit, though. Might not wanna throw in another dependency either.",
                    "score": -4,
                    "upvotes": -4,
                    "downvotes": 0,
                    "created_utc": 1731187046.0,
                    "parent_id": "t1_lwb5i8v",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwb66nc/"
                },
                {
                    "id": "lwh6fdi",
                    "author": "alexmacarthur",
                    "body": "I totally forgot that existed. If you have any other edge cases top of mind, I’d love to hear them",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731273906.0,
                    "parent_id": "t1_lwf0qgi",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwh6fdi/"
                },
                {
                    "id": "lwbyxy9",
                    "author": "kir_rik",
                    "body": "Good luck implementing WYSIWYG",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731196937.0,
                    "parent_id": "t1_lwbdqx0",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwbyxy9/"
                },
                {
                    "id": "lwe2k6j",
                    "author": "phryneas",
                    "body": "That won't stop you from adding a CSP?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731232688.0,
                    "parent_id": "t1_lwbyxy9",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwe2k6j/"
                },
                {
                    "id": "lwfrgia",
                    "author": "Flyen",
                    "body": "I assume they were talking about the avoiding dangerouslySetInnerHTML part not the CSP part",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731258719.0,
                    "parent_id": "t1_lwe2k6j",
                    "link_id": "t3_1gnij81",
                    "permalink": "/r/reactjs/comments/1gnij81/make_dangerouslysetinnerhtml_safer_by_disabling/lwfrgia/"
                }
            ]
        },
        {
            "id": "1gnffye",
            "title": "Defining a local store, state, provider, composable, whatever",
            "author": "incutonez",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 18,
            "created_utc": 1731174068.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/",
            "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/",
            "selftext": "I'm trying to understand how React renders things, but my Vue-centric brain is getting in the way.  Here's my [Fiddle](https://codesandbox.io/p/sandbox/react-typescript-forked-nykrvf) for following along.\n\nI want to build a local store/state provider that I can hand down to ProductsList from App, and I want the state to be reactive.  To solve this, I've chosen to use a hook, useContext, [useSuspenseQuery](https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQuery) (to defer the component from actually loading until the data is available), and[ ](https://react.dev/learn/reusing-logic-with-custom-hooks)[useImmer](https://github.com/immerjs/use-immer) (for updating nested objects in a more manageable fashion).  When I set my code up, it works as I expected.  However, I get a warning from React saying:\n\n>Cannot update a component (\\`App\\`) while rendering a different component (\\`ProductsList\\`). To locate the bad setState() call inside \\`ProductsList\\`, follow the stack trace as described in\n\nI think I understand why... it's because in products:loadRecords, I'm calling setLoading, which I believe triggers App to re-render, but because ProductsList is still rendering, it throws the error.  Once the component is rendered, I don't get this error again if I were to update any of the reactive properties.\n\nHowever, what I'm noticing is that App is creating multiple versions of my composable because when it re-renders, it calls useProductsApi every time.  I can possibly use a combination of useRef and useEffect, but that feels weird.  I know things like Zustand exist, but I don't want this to be a global store, and I can't use hooks inside a store.\n\nI think what I'm looking for is a [custom hook](https://react.dev/learn/reusing-logic-with-custom-hooks), but I don't really know how to do this when I've got state that's a bit more complex than the example on the docs.  So my question is, how would I fix this warning or should I completely re-think how I'm doing it?  Any advice would be most appreciated!\n\nCode:\n\n**App**\n\n    import { Suspense } from \"react\";\n    import \"./styles.css\";\n    import { ProductsList } from \"./views/ProductsList\";\n    import { ContextProducts, useProductsApi } from \"./hooks/products\";\n    import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n    \n    const queryClient = new QueryClient();\n    \n    export default function App() {\n      // TODO: only want to create this once\n      const productsStore = useProductsApi();\n      return (\n        <>\n          <QueryClientProvider client={queryClient}>\n            <ContextProducts.Provider value={productsStore}>\n              <Suspense fallback={<div>Loading...</div>}>\n                <ProductsList />\n              </Suspense>\n            </ContextProducts.Provider>\n          </QueryClientProvider>\n        </>\n      );\n    }\n\n**products**\n\n    import { createContext, useState } from \"react\";\n    import { useImmer } from \"use-immer\";\n    \n    export type TProductsApi = ReturnType<typeof useProductsApi>;\n    \n    export const ContextProducts = createContext({} as TProductsApi);\n    \n    async function fakeLoader(ms = 1000) {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve(\"Done!\");\n        }, ms);\n      });\n    }\n    \n    export function useProductsApi() {\n      const [loading, setLoading] = useState(false);\n      const params = useImmer({\n        limit: 10,\n        page: 1,\n      });\n    \n      async function loadRecords() {\n        setLoading(true);\n        await fakeLoader();\n        setLoading(false);\n        return [];\n      }\n    \n      return {\n        loading,\n        setLoading,\n        params,\n        loadRecords,\n      };\n    }\n\n**ProductsList**\n\n    import { useContext } from \"react\";\n    import { ContextProducts } from \"../hooks/products\";\n    import { useSuspenseQuery } from \"@tanstack/react-query\";\n    \n    export function ProductsList() {\n      const { params, loadRecords } = useContext(ContextProducts);\n      useSuspenseQuery({\n        refetchOnWindowFocus: false,\n        queryKey: [\"ViewProducts\", params],\n        queryFn: async () => {\n          return await loadRecords();\n        },\n      });\n      return <div>Loaded!</div>;\n    }",
            "comments": [
                {
                    "id": "lwaysm6",
                    "author": "svish",
                    "body": "I'd say you should rethink what you're doing.\n\nWhy are you mixing in useContext and useImmer with useSuspenseQuery? And why do you have a loader inside a hook?\n\nTanstack Query has its own store, its own cache, its own loading state its own tools for updating its state.\n\nI recommend throwing away as many dependencies as you can. Stick to more or less plain react and tanstack query. Only pull in more once you actually know that you need it.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731184621.0,
                    "parent_id": "t3_1gnffye",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwaysm6/"
                },
                {
                    "id": "lwak5qq",
                    "author": "SubjectSodik",
                    "body": "loadRecords should be inside useEffect. Read about lifecycle methods and hooks.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731179849.0,
                    "parent_id": "t3_1gnffye",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwak5qq/"
                },
                {
                    "id": "lwbhlp8",
                    "author": "csman11",
                    "body": "The problem is that useSuspenseQuery is not executing your query function after the commit phase when effects run, but instead during the render phase (because this version is kicking off your query function during render, and it will write the result into the react query cache. In the same render, it is reading from react query’s implementation of a suspense data store, which throws a promise that will resolve when the data is available and allow react to resume rendering).\n\nYour query function executes state setters from your custom hook that belong to the App component (since this is what called your custom hook). When calling a state setter in React during the render method, this must be done with a state setter for the current component that is rendering. This is because React can simply throw away the render result and re-render immediately in this case. If you were calling some parent’s state setter, this means React now needs to throw away in the entire subtree of that component, and doing this as a common pattern would lead to very poor rendering performance in general. It is therefore prohibited.\n\nSetting state like this in a use effect is allowed because the result of the previous render has been painted already, and because it is easy to keep track of all the state setting at various tree levels when they are done in effects, and batch them such that only one re-render needs to be performed at the end of all of them.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731190836.0,
                    "parent_id": "t3_1gnffye",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwbhlp8/"
                },
                {
                    "id": "lwaz9ne",
                    "author": "svish",
                    "body": "Read through this:  \nhttps://tanstack.com/query/latest/docs/framework/react/community/tkdodos-blog",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731184774.0,
                    "parent_id": "t1_lwaysm6",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwaz9ne/"
                },
                {
                    "id": "lwbpdgt",
                    "author": "incutonez",
                    "body": "I think I was just incorrectly assuming useSuspenseQuery was already wrapped in a useEffect, but I'll look at that",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731193529.0,
                    "parent_id": "t1_lwak5qq",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwbpdgt/"
                },
                {
                    "id": "lwc8u4u",
                    "author": "incutonez",
                    "body": "Thank you for this detailed response, and I think I understand what you're saying in theory, but I don't quite know how I'd fix it.  It almost sounds like I should shift to using the effect phase through useEffect or something?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731200485.0,
                    "parent_id": "t1_lwbhlp8",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwc8u4u/"
                },
                {
                    "id": "lwcar1l",
                    "author": "incutonez",
                    "body": "Thank you for this.  I think the problem is that I don't know the proper terms used in React vs what we use in Vue, so I was looking at Zustand, which had recommended using immer for deep object mutations because I hate having to spread objects to copy them.  So I went with immer because it felt more natural to me.  I agree that less deps are better, which is why I was trying to get away from Zustand because it didn't really offer much that I couldn't do myself... same way I feel about pinia in Vue.\n\nHaving said that, it has been difficult trying to figure out which packages to use because one recommends the other, this guide recommends that, etc., so what you pointed out is totally valid... an all over the place, trashy solution.  I also couldn't find something in Tanstack that was close to immer, but I'll look back over what they offer.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731201191.0,
                    "parent_id": "t1_lwaz9ne",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwcar1l/"
                },
                {
                    "id": "lwdf9ft",
                    "author": "SubjectSodik",
                    "body": "I don't see useSuspenseQuery in useProductsApi.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731218080.0,
                    "parent_id": "t1_lwbpdgt",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwdf9ft/"
                },
                {
                    "id": "lwdk9qt",
                    "author": "csman11",
                    "body": "Well there’s a mix of design and implementation concerns here that would drive what you *should* do.\n\nImplementation:\n\nChanging the implementation to move the call to the effects phase would be one “solution”. I don’t know how you can do that without switching to using the regular “useQuery” and also I don’t think that is the “right thing to do” anyway. Because in your particular case, you are trying to track information about the request lifecycle that react query already takes care of.\n\nSo read below about the design issues here.\n\nFrom the design perspective:\n\nI’m not really very convinced that this hook’s return value should be passed down as a sort of “global app state” via context, especially given that part of it is tracking the state of the loading of the products themselves. This itself isn’t global to me, because it’s related to a specific request (even though we know react query will only call the loader function when the result isn’t cached). From the perspective of the hook return value’s interface, it’s as if you’re presenting that there can only be one single request made to get products at a time, which is wrong. And then it’s odd that that we are suspending the component that tries to use the function to load products, as that component directly uses react query which interacts with Suspense, and not the entire app component tree (not that I would ever design something to actually do that, but it just doesn’t make sense to me that some “part” of the “product request lifecycle” suspends rendering of just a section of the app and some of it is global state and passed through a react context and shared throughout the app).\n\nIn fact, I would say the majority of how this hook is being designed is wrong. Really the only thing that should be shared/cached is the request lifecycle (aka de duping) and the responses (aka caching) when an “identical” request is made to the backend.\n\nWhat it seems you are trying to do is encapsulate state that can be used to set the params of a request, somehow should trigger the proper request to be made when these change, and return information about the lifecycle of the request and its response. If this is correct, keep reading.\n\nYou should design your hook so it:\n\n- Creates the params state and returns that so the consumer can update the params\n- Return some way to trigger making a request with the current params state\n- If you want the request to be made automatically, maybe a Boolean input parameter to control whether this is “off” or “on”\n- Internally calls react-query to make the request\n- Returns the result of the query\n\nAnd this hook should be used directly in the component that wants to use it and not used at the top level and its return value passed through context.\n\nReact query will make sure you aren’t making more backend requests than needed, but now many consumers can make different requests using different params based on the state they are in.\n\nI would in particular design this type of hook if I had multiple different looking UIs in my app that needed to load products and filter/sort/paginate them using some user input. The purpose of the hook is to make that request logic reusable. But there is no need to have some sort of “singleton instance” of this hook’s return value in the app.\n\nLet me know if you want some pseudocode",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731220896.0,
                    "parent_id": "t1_lwc8u4u",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwdk9qt/"
                },
                {
                    "id": "lwciefl",
                    "author": "svish",
                    "body": "I just don't understand why you'd even need immer. Tanstack Query deals with async (usually server) state. Normally you don't touch it directly yourself at all. You use useQuery (or the suspense version) where you need the data, and if you need it multiple places, just use the same fetch function and query key all places (usually good to wrap it in a custom hook to keep things in sync, like useGetFoo). To update it, you do a post via useMutation and for example invalidateQueries in the onSuccess.\n\nOnly case you might want to use spreading is if you want to do optimistic updates, but i usually find those simple enough to do. Really don't see the point of a whole separate dependency just to update some values.\n\nKeep it simple...",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731203987.0,
                    "parent_id": "t1_lwcar1l",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwciefl/"
                },
                {
                    "id": "lweu79p",
                    "author": "incutonez",
                    "body": "Yeah, what I was going for was a shared state between a few components because each component can affect the params, like a pagination component, search bar, etc.  Whenever they change, they affect the same params that fetches and updates the records.\n\n\nIt's pretty clear that I've failed horribly at doing this, haha, so I'm going to take in all the comments and try to refactor it properly.  I appreciate your response!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731247606.0,
                    "parent_id": "t1_lwdk9qt",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lweu79p/"
                },
                {
                    "id": "lwcmvwm",
                    "author": "incutonez",
                    "body": "Admittedly, I was trying to emulate how reactive/ref works in Vue, and immer felt like that... where I can basically have an object for my API params, update individual properties of the object, and it's reactive.  I don't like having to create each individual primitive value, with its associated set method that I would have to call, and if I went with an object with useState, I'd have to spread the object for the rest of the properties that I'm not updating.  It's definitely just a learning process right now, so I do appreciate your comments.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731205703.0,
                    "parent_id": "t1_lwciefl",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwcmvwm/"
                },
                {
                    "id": "lwhdzij",
                    "author": "csman11",
                    "body": "I see. You can apply what I said about creating the custom hook and still use context. What I like to do in this case is the following:\n\n- create the custom hook. This gives you the low-level reusable logic you want\n- create a custom context whose type is `ReturnType<typeof myCustomHook> | null`. The default value of the context is null\n- create a wrapper for the provider that calls the hook and passes its return value down using the context’s provider. This wrapper takes any props needed to call the hook as well as the children to render within the “real provider”\n- create a wrapper around `useContext` that checks if the context value is null and throws an error in this case. Otherwise, return the context value. This is to ensure the provider has been used in some ancestor of the component trying to access the context\n\nWith this approach, you can easily use the context around just the section of the application that is responsible for configuring the params and displaying the results of the query.\n\nEdit: If it is not many components, it might be better to explicitly pass the return value of the hook or even just the parts of the return value they need. This can make those components more reusable as well. For example, your pagination component could be used for *any* type of search, not just product search. The benefit of context is to not need to pass props through layers that don’t use them directly, but I’m imagining your use case looks like a category listing type page on an e-commerce site composed of these search related components. Since they are all related to the same functionality, it probably makes sense to not use context here as there isn’t going to really be a huge middle layer that doesn’t relate to search within this subtree.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731276247.0,
                    "parent_id": "t1_lweu79p",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwhdzij/"
                },
                {
                    "id": "lwcpt91",
                    "author": "svish",
                    "body": "Yeah... I highly recommend you try to leave vue stuff with vue, and try doing things the \"idiomatic react way\" first. Will most likely result in a lot less friction and annoyance. Maybe you'll even find that you enjoy it eventually.\n\nFor your api params object you might want to check out useReducer, or if you're using react router or similar you might want to consider managing those with useSearchParams instead. That way the state is also persisted in the URL for the user.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731206849.0,
                    "parent_id": "t1_lwcmvwm",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwcpt91/"
                },
                {
                    "id": "lwhkxkq",
                    "author": "incutonez",
                    "body": "I think I ended up doing it almost exactly as you outlined.  I ditched the whole Suspense concept because I don't think I fully understand that yet.  I switched my useProductsApi to return a useQuery, with the relevant watched params in the queryKey array.  I moved the common pagination API params to their own hook, which I called in my view and provided as a context to both the search bar and the pagination child components.\n\nI also replaced all instances of immer with a respective useState and figured out why my tanstack queries weren't caching when I would page back and forth.  I no longer get the warning, and I'm getting the number of render calls that I expected, which is 1... except StrictMode returns 2, but I guess that's some sort of safeguard in dev to let you know about any warnings/errors.\n\nI still think it's a bit more verbose than something I'd do in Vue, but I'm happy with how it's turned out.  Thank you for all the help and insight!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731278466.0,
                    "parent_id": "t1_lwhdzij",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwhkxkq/"
                },
                {
                    "id": "lwcsf7k",
                    "author": "incutonez",
                    "body": "No, I know, and you're absolutely right.  It's just hard to change that mindset and add that many more lines of code, but if I'm working in a framework, I should try to respect how it's meant to be used.\n\nI saw useReducer, and it felt like overkill, but I'm slowly understanding there's a hook for everything... it's just knowing what each hook is called and used for is the hard part.  I will eventually be getting to a router, so I may refactor it to use useSearchParams, which is a good call out.\n\nHowever, I will still be updating objects at some point, like when I'm editing an entity and such, so I'll still need some sort of reactivity, but when I get to that point, I may understand a better way of solving the problem.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731207858.0,
                    "parent_id": "t1_lwcpt91",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwcsf7k/"
                },
                {
                    "id": "lwcuyel",
                    "author": "svish",
                    "body": "For editing stuff I'd recommend just using a form. Post on submit, invalidate cache on success. No need for updating objects. If you do need more advanced handling of forms, the main library used for that tend to be react-hook-form, which is great.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731208849.0,
                    "parent_id": "t1_lwcsf7k",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwcuyel/"
                },
                {
                    "id": "lwczyxa",
                    "author": "incutonez",
                    "body": "Yeah, I'm just thinking of complex data, where you have a large object with arrays of objects, etc.  But I'll take a look at react-hook-form when I get there, so thanks for the recommendation!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731210909.0,
                    "parent_id": "t1_lwcuyel",
                    "link_id": "t3_1gnffye",
                    "permalink": "/r/reactjs/comments/1gnffye/defining_a_local_store_state_provider_composable/lwczyxa/"
                }
            ]
        },
        {
            "id": "1gnbflx",
            "title": "I've made a Flex Playground. What do you think?",
            "author": "djimenezc",
            "score": 36,
            "upvotes": 36,
            "downvotes": 0,
            "num_comments": 11,
            "created_utc": 1731162996.0,
            "url": "https://flex-playground.onrender.com/",
            "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/",
            "selftext": "",
            "comments": [
                {
                    "id": "lwa1b3o",
                    "author": "sumitsingh10",
                    "body": "Excellent but fix the responsive one",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731173832.0,
                    "parent_id": "t3_1gnbflx",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwa1b3o/"
                },
                {
                    "id": "lw96e9o",
                    "author": "pink_tshirt",
                    "body": "Really really nice and intuitive.\n\nI think that \"Text content\" node should multiply based on the amount of flex items.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731163575.0,
                    "parent_id": "t3_1gnbflx",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lw96e9o/"
                },
                {
                    "id": "lw99q91",
                    "author": "humbolight",
                    "body": "Good job with the slick bottom bar and UI intuitiveness overall.  Nailed it",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731164769.0,
                    "parent_id": "t3_1gnbflx",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lw99q91/"
                },
                {
                    "id": "lw9otg4",
                    "author": "Cremacious",
                    "body": "Very nice. I’m currently learning coding, and my CSS skills aren’t very strong. This will be a handy learning tool.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731169825.0,
                    "parent_id": "t3_1gnbflx",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lw9otg4/"
                },
                {
                    "id": "lwa3v5y",
                    "author": "bugzpodder",
                    "body": "its amazing",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731174644.0,
                    "parent_id": "t3_1gnbflx",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwa3v5y/"
                },
                {
                    "id": "lwakwdm",
                    "author": "djimenezc",
                    "body": "You are right! I looked for inspiration from other similar sites and didn't find responsive playgrounds, so I just completely ignored it.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731180087.0,
                    "parent_id": "t1_lwa1b3o",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwakwdm/"
                },
                {
                    "id": "lw9j4g2",
                    "author": "djimenezc",
                    "body": "Thank you, it means a lot!\n\nThat's not a bad idea, I'll think about it. However, if a user designs a calendar maybe 31 inputs is too much!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731167957.0,
                    "parent_id": "t1_lw96e9o",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lw9j4g2/"
                },
                {
                    "id": "lw9knkq",
                    "author": "djimenezc",
                    "body": "Thank you, I wasn't feeling very confident so that means a lot!\n\nThe bottom menu gave me some headaches! There is still one unsolved problem: when the window width is an odd number, the menu animation wiggles.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731168461.0,
                    "parent_id": "t1_lw99q91",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lw9knkq/"
                },
                {
                    "id": "lwalh0i",
                    "author": "djimenezc",
                    "body": "I'm glad it helps! Flex is trickier than it seems. Actually, one of my main motivations for building this site was to better understand flex.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731180273.0,
                    "parent_id": "t1_lw9otg4",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwalh0i/"
                },
                {
                    "id": "lwalif3",
                    "author": "djimenezc",
                    "body": "Thank you!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731180285.0,
                    "parent_id": "t1_lwa3v5y",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwalif3/"
                },
                {
                    "id": "lwcypes",
                    "author": "sumitsingh10",
                    "body": "Cool !!\nIf you did that it could be a good learning to make rrsponsive.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731210381.0,
                    "parent_id": "t1_lwakwdm",
                    "link_id": "t3_1gnbflx",
                    "permalink": "/r/reactjs/comments/1gnbflx/ive_made_a_flex_playground_what_do_you_think/lwcypes/"
                }
            ]
        },
        {
            "id": "1gn5yp9",
            "title": "Building a Modern React Library Starter – A Quick Guide! ",
            "author": "abhirup_99",
            "score": 6,
            "upvotes": 6,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731142274.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gn5yp9/building_a_modern_react_library_starter_a_quick/",
            "permalink": "/r/reactjs/comments/1gn5yp9/building_a_modern_react_library_starter_a_quick/",
            "selftext": "Hey devs! 👋\n\nJust wrote a quick guide on [my blog](https://dev.to/abhirup99/building-a-modern-react-library-starter-a-comprehensive-guide-3m5b/) for anyone looking to build a **React library starter template** from scratch. It covers setting up TypeScript, Vite, SWC, Rollup and more to get you production-ready fast!\n\nCheck it out and let me know what you think – feedback is always welcome!\n\nLink to the github repo: [https://github.com/Abhirup-99/react-library-starter-template](https://github.com/Abhirup-99/react-library-starter-template)\n\nA modern starter template for building React libraries using SWC, TypeScript, and Rollup. Created due to the lack of existing templates that combine SWC's speed with Rollup's efficient bundle optimization.\n\n⚡️ SWC for ultra-fast compilation\n\n📦 Rollup for optimal bundling\n\n🔷 TypeScript support\n\n🎯 Generates CJS and ESM builds\n\n💪 Type definitions included\n\n🔍 Source maps support\n\n📄 MIT License  \n",
            "comments": [
                {
                    "id": "lwde9fs",
                    "author": "throwAwayGoneAcc",
                    "body": "Thanks for this. I was looking for something like this. I will use this in my next project.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731217554.0,
                    "parent_id": "t3_1gn5yp9",
                    "link_id": "t3_1gn5yp9",
                    "permalink": "/r/reactjs/comments/1gn5yp9/building_a_modern_react_library_starter_a_quick/lwde9fs/"
                },
                {
                    "id": "lwdejrl",
                    "author": "abhirup_99",
                    "body": "Thanks. This project was born out of my own necessity. I do intend to maintain it, and beef up the config with time.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731217707.0,
                    "parent_id": "t1_lwde9fs",
                    "link_id": "t3_1gn5yp9",
                    "permalink": "/r/reactjs/comments/1gn5yp9/building_a_modern_react_library_starter_a_quick/lwdejrl/"
                }
            ]
        },
        {
            "id": "1gn5gmh",
            "title": "Tippy is now read-only",
            "author": "wiznaibus",
            "score": 18,
            "upvotes": 18,
            "downvotes": 0,
            "num_comments": 18,
            "created_utc": 1731140049.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/",
            "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/",
            "selftext": "https://github.com/atomiks/tippyjs\n\nAs of today.\n\nWhat are you all using for tooltips/popvers these days?",
            "comments": [
                {
                    "id": "lw7zm4w",
                    "author": "nicklee",
                    "body": "Looks like the creator is now pushing for people to use the floating ui lib instead: https://github.com/floating-ui/floating-ui",
                    "score": 23,
                    "upvotes": 23,
                    "downvotes": 0,
                    "created_utc": 1731140676.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw7zm4w/"
                },
                {
                    "id": "lw8tkwe",
                    "author": "ArgaWoW",
                    "body": "What does this mean exactly. Is Tippy no longer under development?",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731158494.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw8tkwe/"
                },
                {
                    "id": "lw8fn1n",
                    "author": "SpinatMixxer",
                    "body": "floating-ui is the GOAT!",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731151334.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw8fn1n/"
                },
                {
                    "id": "lw956sj",
                    "author": "SnapplesOfIdun",
                    "body": "My experience with floating UI has been great. Especially nice in projects where requirements are still changing due to product iteration as you can easily change the configs as needed and you just bring whatever UI you want to slot it in.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731163131.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw956sj/"
                },
                {
                    "id": "lwgqeen",
                    "author": "spartaco_music",
                    "body": "Floating-ui",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731269220.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lwgqeen/"
                },
                {
                    "id": "lw8ogsg",
                    "author": "KornelDev",
                    "body": "Always shadcn",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731156178.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw8ogsg/"
                },
                {
                    "id": "lw994a0",
                    "author": "jax024",
                    "body": "Radix",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731164552.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw994a0/"
                },
                {
                    "id": "lw83s57",
                    "author": "JohntheAnabaptist",
                    "body": "Mui tooltip",
                    "score": -2,
                    "upvotes": -2,
                    "downvotes": 0,
                    "created_utc": 1731143483.0,
                    "parent_id": "t3_1gn5gmh",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw83s57/"
                },
                {
                    "id": "lw832z8",
                    "author": "blindbeat",
                    "body": "It's a fine library, especially if you have requirements to have precise controls over the tooltip positioning with callbacks, etc. \n\nBut I had some frustrations with it as well, so I prefer Radix implementation in 99% of cases. It just works, it's declarative, and it's always enough for me in terms of control",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731143009.0,
                    "parent_id": "t1_lw7zm4w",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw832z8/"
                },
                {
                    "id": "lwaootx",
                    "author": "Dethstroke54",
                    "body": "Yea this is like the status quo and already an entire redesign on their own old lib that was the previous status quo. \n\nPretty much every library uses it idk why OP didn’t bother to spend 2min to do a google search tho.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731181300.0,
                    "parent_id": "t1_lw7zm4w",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lwaootx/"
                },
                {
                    "id": "lw9e20f",
                    "author": "yads12",
                    "body": "That's right it's been archived",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731166265.0,
                    "parent_id": "t1_lw8tkwe",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw9e20f/"
                },
                {
                    "id": "lw8emdb",
                    "author": "elementus",
                    "body": "Just wait til you find out how Radix does it! \n\nhttps://github.com/radix-ui/primitives/blob/main/packages/react/popper/package.json#L31",
                    "score": 42,
                    "upvotes": 42,
                    "downvotes": 0,
                    "created_utc": 1731150679.0,
                    "parent_id": "t1_lw832z8",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw8emdb/"
                },
                {
                    "id": "lw93zsc",
                    "author": "vellovv",
                    "body": "Lol why go straight when you can take a detour",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731162683.0,
                    "parent_id": "t1_lw832z8",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw93zsc/"
                },
                {
                    "id": "lw9qcso",
                    "author": "ArgaWoW",
                    "body": "And I have just replaced react-tooltip with tippy, So sad :(",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731170317.0,
                    "parent_id": "t1_lw9e20f",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw9qcso/"
                },
                {
                    "id": "lw97k4y",
                    "author": "blindbeat",
                    "body": "Oh, didn't know that!\nRadix gives nice controls over it though, in line with other Radix components, but if Radix aren't in use in the project, floating UI is a solid choice indeed.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731163998.0,
                    "parent_id": "t1_lw8emdb",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lw97k4y/"
                },
                {
                    "id": "lwb0hy4",
                    "author": "dfltr",
                    "body": "I ended up switching from Radix Popover to just using floating-ui directly because diagonal positioning is an absolute headache with Radix but it’s a simple middleware with floating-ui.  \n\nTurns out the abstraction tax is a thing, who knew?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731185175.0,
                    "parent_id": "t1_lw8emdb",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lwb0hy4/"
                },
                {
                    "id": "lwdilgl",
                    "author": "ArgaWoW",
                    "body": "Can I keep it in my project or should I switch",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731219921.0,
                    "parent_id": "t1_lw9qcso",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lwdilgl/"
                },
                {
                    "id": "lwb4cw1",
                    "author": "AndrewGreenh",
                    "body": "This is why I love layers :)\nYou were able to simply drop one level down and use floating-Ui without being force to redo everything from scratch.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731186436.0,
                    "parent_id": "t1_lwb0hy4",
                    "link_id": "t3_1gn5gmh",
                    "permalink": "/r/reactjs/comments/1gn5gmh/tippy_is_now_readonly/lwb4cw1/"
                }
            ]
        },
        {
            "id": "1gmsh6b",
            "title": "Sharing Chipster – A Multi-Entry Input Component for React (Feedback Appreciated!)",
            "author": "Imaginary_Handle_442",
            "score": 4,
            "upvotes": 4,
            "downvotes": 0,
            "num_comments": 11,
            "created_utc": 1731098363.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/",
            "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/",
            "selftext": "Hey r/reactjs! I wanted to share a little project I’ve been working on called **Chipster**. It’s a flexible, multi-entry input component for React that I built to simplify handling tags, multi-email inputs, and other list-based data scenarios.\n\nI got the idea for Chipster when I realized there wasn’t an easy, out-of-the-box way to add multiple values to an input box, like you’d see in Google Drive’s sharing input. So, I decided to build my own! My goal was to make it simple to integrate, style, and customize, with enough flexibility to cover different use cases like:\n\n* **Multi-email fields** for forms and invites\n* **Tagging systems** for content management\n* **Multi-select filters** and surveys\n* And custom lists like event participants or tasks\n\nHere are some features Chipster offers so far:\n\n* **Custom Styling**: Works with Tailwind or custom CSS\n* **Smart Autocomplete**: Helps users with quick tagging/selection\n* **Keyboard Navigation**: Full keyboard support for accessibility\n* **Validation Rules**: Customize things like character limits and duplicates\n* **Light/Dark Theme**: Built-in themes for better integration\n\nIf you’re interested, I’d love for you to check it out. [GitHub Repo](https://github.com/MicoBlanc/chipster) | [Documentation and Demos](http://chipster.micoblanc.me/)\n\nI’d really appreciate any thoughts you might have—does it seem intuitive? Easy to style and integrate? And if you notice anything about the frontend logic that could be smoother, please let me know. Feedback would be super helpful as I keep working on this.\n\nThanks for reading and for any feedback! 😊",
            "comments": [
                {
                    "id": "lw58tac",
                    "author": "xdozex",
                    "body": "Looks pretty cool. I didn't dig through the docs, but in your 3 examples, I noticed it only seems to work if I type a specific value that's already available in the options list. The first email example, I typed a test address, pressed ',' expecting it to turn the first address into a chip and allow me to enter another email, and it didn't happen. It just added the comma after the first email. I was just looking for a component like this to accept input tags, but because the number of possible tags is basically every word in the dictionary, it would be much better if people could just enter any value (single words and multi-word phrases) and have it convert each value into a chip when the user hits the comma. \n\nNot sure if that's intentional or if there's a bug.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731100193.0,
                    "parent_id": "t3_1gmsh6b",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw58tac/"
                },
                {
                    "id": "lw591fk",
                    "author": "bugzpodder",
                    "body": "i dont see any demos in your docs page.  hard to know what it is exactly doing",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731100262.0,
                    "parent_id": "t3_1gmsh6b",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw591fk/"
                },
                {
                    "id": "lw5edyl",
                    "author": "Imaginary_Handle_442",
                    "body": "hanks for the feedback, u/xdozex! I’ll make sure to clarify this in the documentation and demos. There are actually two modes available: you can enable free typing by setting mode=\"free\" in Chipster.\n\nHere is a quick demo: [https://codesandbox.io/p/sandbox/chipster-suggestions-forked-3rw5kv](https://codesandbox.io/p/sandbox/chipster-suggestions-forked-3rw5kv)\n\nAs for the comma behavior, I totally agree—it would be more intuitive if hitting the comma automatically converted the input into a chip. I think most users would expect that too. I really appreciate the input, and I’ll let you know once this is updated. Thanks again!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731101928.0,
                    "parent_id": "t1_lw58tac",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5edyl/"
                },
                {
                    "id": "lw5szk6",
                    "author": "Imaginary_Handle_442",
                    "body": "u/xdozex this issue should be covered now in the new v1.2.4.   \nHere is a sandbox environment to test the new joiner prop: [https://codesandbox.io/p/sandbox/29skhh](https://codesandbox.io/p/sandbox/29skhh)\n\n Hoping this can fit your use case. Thanks again for the feedback!!",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731106602.0,
                    "parent_id": "t1_lw58tac",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5szk6/"
                },
                {
                    "id": "lw5c6cg",
                    "author": "Imaginary_Handle_442",
                    "body": "Opss, added the wrong link, should be edited now:  \n[http://chipster.micoblanc.me/](http://chipster.micoblanc.me/) you can see it here by clicking on examples.  \nAlso I have a codesandbox sample here:  \n[https://codesandbox.io/p/sandbox/chipster-demo1-nqt8jl](https://codesandbox.io/p/sandbox/chipster-demo1-nqt8jl)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731101245.0,
                    "parent_id": "t1_lw591fk",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5c6cg/"
                },
                {
                    "id": "lw5rfjb",
                    "author": "xdozex",
                    "body": "No problem, thanks for building this! If I can get my damn project to build in it's current state, I'll definitely circle back to see if I can swap out my normal text input for your version.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731106084.0,
                    "parent_id": "t1_lw5edyl",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5rfjb/"
                },
                {
                    "id": "lw5ygj6",
                    "author": "timeIsAllitTakes",
                    "body": "I was messing around with something similar on my own recently, and came to the same conclusion there actually isn't that much out there. You could have a property that is either a function that returns an array of key delimiters or an array of key delimiters, that when pressed trigger the chip to be added. For instance in my case I wanted it added on , ; or 'enter' since it was for emails. Another option may be a property that's a predicate that is called when a key is pressed and if the result is true then the item is added\n\nEdit: just saw you addressed this in your comment below",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731108478.0,
                    "parent_id": "t1_lw5edyl",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5ygj6/"
                },
                {
                    "id": "lw5ytqe",
                    "author": "xdozex",
                    "body": "That was fast. Gonna check it out in a little bit. Thanks",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731108605.0,
                    "parent_id": "t1_lw5szk6",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5ytqe/"
                },
                {
                    "id": "lw5f64p",
                    "author": "bugzpodder",
                    "body": "something looks off [https://imgur.com/a/q1s4d5w](https://imgur.com/a/q1s4d5w)",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731102169.0,
                    "parent_id": "t1_lw5c6cg",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5f64p/"
                },
                {
                    "id": "lw5in3v",
                    "author": "Imaginary_Handle_442",
                    "body": "Thanks for the feedback, pushing a bug fix soon  \n[https://imgur.com/7WI3Hsy](https://imgur.com/7WI3Hsy)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731103250.0,
                    "parent_id": "t1_lw5f64p",
                    "link_id": "t3_1gmsh6b",
                    "permalink": "/r/reactjs/comments/1gmsh6b/sharing_chipster_a_multientry_input_component_for/lw5in3v/"
                }
            ]
        },
        {
            "id": "1gmpz1p",
            "title": "Sanity check: this hook does nothing, right?",
            "author": "spcbeck",
            "score": 18,
            "upvotes": 18,
            "downvotes": 0,
            "num_comments": 23,
            "created_utc": 1731091869.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/",
            "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/",
            "selftext": "  \nEverything this does is handled by useEffect, or useLayoutEffect in certain situations. I'm a vanilla JS developer working in a React project, and saw this - just want to make sure my fundamental understanding isn't way off. The person who wrote this is long gone.\n\n    export const useClientEffect = (\n      effect: EffectCallback,\n      deps?: DependencyList\n    ) => {\n      useEffect(() => {\n      if (typeof window !== 'undefined') {\n        return effect() || undefined;\n      }\n      return undefined;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, deps);\n    };",
            "comments": [
                {
                    "id": "lw4kb5c",
                    "author": "ranmerc",
                    "body": "Yes it is redundant. I believe the author had a poor understanding of `useEffect` and assumed effects run on server side as well.",
                    "score": 56,
                    "upvotes": 56,
                    "downvotes": 0,
                    "created_utc": 1731092789.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4kb5c/"
                },
                {
                    "id": "lw4vte3",
                    "author": "RTooDTo",
                    "body": "window can be undefined in server-rendered applications or static builds.",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731096237.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4vte3/"
                },
                {
                    "id": "lw4r1wb",
                    "author": "Captain_Factoid",
                    "body": "Do you do SSR? It’s possible this hook is intended to prevent hydration errors.",
                    "score": 16,
                    "upvotes": 16,
                    "downvotes": 0,
                    "created_utc": 1731094805.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4r1wb/"
                },
                {
                    "id": "lw5jg3z",
                    "author": "denisoby",
                    "body": "This hook will run differently in real env and unit tests, where window will be undefined. So maybe author didn’t want some code to run in unit tests.",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731103504.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw5jg3z/"
                },
                {
                    "id": "lw70nu4",
                    "author": "MCShoveled",
                    "body": "Umm, what makes you think this isn’t doing anything? It’s calling the effect provided if the global window is defined. This is basically the same as useEffect but only when window is defined.",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731122342.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw70nu4/"
                },
                {
                    "id": "lw6hfac",
                    "author": "Ler_GG",
                    "body": "    typeof window !== 'undefined'\n\nthis is a very common pattern i.e. when dealing with env variables coming from the server side which need to be injected into to WINDOW object.\n\nI.e nextjs page router app in a kubernetes cluster\n\n\\-> kubernetes helm config hoists variables into proccess.env within the cluster\n\n\\-> NextJs getStaticProps gets the ENVS from the kubernetes clister on http request(SSR)\n\n\\-> env values are passed to client side\n\n\\-> Client site hydrates WINDOW object once it is available with the SSR envs from the kubernetes cluster\n\nwhen would you do this? Well if you need to change ENVS during runtime.\n\nWhat is the gain? You do not need to re-build/deploy the entire app wen you change an env.\n\nWithout the **typeof window !== 'undefined'** any pipeline will crash\n\nExample: useEffect(() => { if (typeof window !== 'undefined') { getUrlParms() } }, \\[\\])\n\n**Without the check, any pipeline will crash**",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731115155.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw6hfac/"
                },
                {
                    "id": "lw9wqkw",
                    "author": "WillingnessFit4630",
                    "body": "Nah ‘window’ can be undefined in SSR or hybrid React code bases. This hook would ensure ‘effect’  only runs client-side after ‘window’, or the browser is defined.  Like others have said, often used to consume env variables. \n\nDefinitely smelly though, using this often points to mis-architected code. I’ve leaned on a variation of this in Remix codebases only to eventually update the info architecture to handle this situation differently.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731172365.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw9wqkw/"
                },
                {
                    "id": "lw7n25z",
                    "author": "Zealousideal-Party81",
                    "body": "Tbh this is one of the dumber hooks I’ve ever seen",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731132888.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw7n25z/"
                },
                {
                    "id": "lwes6ia",
                    "author": "upkeys",
                    "body": "I don’t know why he returns effect(), for me returns in useEffects are for cleaning up.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731246776.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lwes6ia/"
                },
                {
                    "id": "lw6arpm",
                    "author": "Yodiddlyyo",
                    "body": "Is this being used in a Next project by any chance?  `if (typeof window !== 'undefined')` is what you do to prevent hydration errors / window errors, don't remove it. Or do, see that you get errors, and add it back in where it's needed.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731112792.0,
                    "parent_id": "t3_1gmpz1p",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw6arpm/"
                },
                {
                    "id": "lw4m92d",
                    "author": "spcbeck",
                    "body": "thank you michael scott gif",
                    "score": 11,
                    "upvotes": 11,
                    "downvotes": 0,
                    "created_utc": 1731093363.0,
                    "parent_id": "t1_lw4kb5c",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4m92d/"
                },
                {
                    "id": "lw4qt4w",
                    "author": "DelKarasique",
                    "body": "But hooks do run on server in ssr, aren't they?\n\nDon't know about op's hook, but I have this one in my project \nhttps://usehooks-ts.com/react-hook/use-isomorphic-layout-effect",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731094731.0,
                    "parent_id": "t1_lw4kb5c",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4qt4w/"
                },
                {
                    "id": "lw6jf1t",
                    "author": "Ler_GG",
                    "body": "it's poorly named, but necessary for a lot of things ;)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731115873.0,
                    "parent_id": "t1_lw4kb5c",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw6jf1t/"
                },
                {
                    "id": "lw9vx1g",
                    "author": "spcbeck",
                    "body": "No, there's SSR, these apps are served statically via an s3 bucket. Even if these were server components (which they're not) my understanding is useEffect won't run \"on the server\" (which to me means the compiler since we're not using SSR).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731172101.0,
                    "parent_id": "t1_lw4r1wb",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw9vx1g/"
                },
                {
                    "id": "lw5ttkc",
                    "author": "spcbeck",
                    "body": "Based on node env?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731106881.0,
                    "parent_id": "t1_lw5jg3z",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw5ttkc/"
                },
                {
                    "id": "lw7q9lr",
                    "author": "Patzer26",
                    "body": "I think he wants to ask if he can just extract this to wherever it is being called since it's just a useEffect.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731134769.0,
                    "parent_id": "t1_lw70nu4",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw7q9lr/"
                },
                {
                    "id": "lw7xbkz",
                    "author": "DilatedTeachers",
                    "body": "Also could be Gatsby",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731139177.0,
                    "parent_id": "t1_lw6arpm",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw7xbkz/"
                },
                {
                    "id": "lw4tzhn",
                    "author": "ranmerc",
                    "body": "If you check the definition of that hook, all it does is run `useEffect` or `useLayoutEffect` depending upon the environment. \n\nWe need this because NextJs won't allow you to call `useLayoutEffect` on server. Neither of the two run on the server. Just that calling `useEffect` on server won't throw a warning.",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731095680.0,
                    "parent_id": "t1_lw4qt4w",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4tzhn/"
                },
                {
                    "id": "lw4ub55",
                    "author": "lelarentaka",
                    "body": "They do run on the server, in a way, but the server react runtime actually has different hook implementations that behave differently than the usual client-side hook. The server useEffect never executes its effect.\n\n\nAnd the isomorphic hook that you linked is only to suppress a silly warning message, doesn't actually affect the behavior.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731095777.0,
                    "parent_id": "t1_lw4qt4w",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw4ub55/"
                },
                {
                    "id": "lwbk1jv",
                    "author": "Captain_Factoid",
                    "body": "/shrug I say take it out and see what, in anything, breaks.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731191676.0,
                    "parent_id": "t1_lw9vx1g",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lwbk1jv/"
                },
                {
                    "id": "lwvq190",
                    "author": "denisoby",
                    "body": "Yes, usually you don’t run tests in browser and instead use models for this purpose ",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731480053.0,
                    "parent_id": "t1_lw5ttkc",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lwvq190/"
                },
                {
                    "id": "lwvq37n",
                    "author": "denisoby",
                    "body": "Btw, another option - server side code",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731480084.0,
                    "parent_id": "t1_lw5ttkc",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lwvq37n/"
                },
                {
                    "id": "lw8zcti",
                    "author": "MCShoveled",
                    "body": "Ahh yeah, okay that makes sense 😂",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731160868.0,
                    "parent_id": "t1_lw7q9lr",
                    "link_id": "t3_1gmpz1p",
                    "permalink": "/r/reactjs/comments/1gmpz1p/sanity_check_this_hook_does_nothing_right/lw8zcti/"
                }
            ]
        },
        {
            "id": "1gmm1hc",
            "title": "Advice on migrating a medium-sized Electron project to React (or something else)? ",
            "author": "euroq",
            "score": 3,
            "upvotes": 3,
            "downvotes": 0,
            "num_comments": 6,
            "created_utc": 1731082022.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/",
            "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/",
            "selftext": "I've got a personal project that I've been working on for over a year now. It's an Electron project using TypeScript. I'm an experienced coder (20+ years) but never did professional web development so it's been great to learn TypeScript. Well, it's grown larger and I'm getting frustrated with the very large HTML file I've got now. I'd really like to modularize the HTML components - it's how I would design any GUI in any system, but I didn't start with any frameworks when I started this project.\n\nI've investigated React and setup a sample project to start converting my UI. On the one hand, I've found React is great at doing exactly what I was hoping to do with breaking up components and allowing me to break out the HTML into JSX files. On the other hand, I'm finding that it may be a lot more trouble than it's worth to deal with React's state management system.\n\nMy app connects to a server and displays messages, as well as loading lots of data from two databases. There's UI for selecting, sorting, filtering, and manipulating this data. I've been doing this all in standard JS/TS, and manipulating the DOM directly. My concern is that the benefit from modularizing the components might be outweighed by all of the refactoring I'll have to do to make the React components work with its state management requirements and all of the `useEffect`s and `useState`s required everywhere to shoehorn in my old design.\n\nSo I've got a few options:\n\nOption 1: Modularize my data without using any framework. For example, here's something I've been doing in a few places. It's like an extremely simple in-code version of a template. However, I don't think this will work with TailwindCSS post-processing.\n\n    div.innerHTML = `<span class=\"tshTime\">${this.getTimeOfMessage(pm.message)}</span>` +\n          ` <span class=\"tshInstr\" style=\"background-color:${colorHex}\">${instr}</span>` +\n          ` <span class=\"tshExtra\">${tradeHint[2]}</span>` +\n          ` <span class=\"tshName\">(${name})</span>`\n\nOption 2: Use React, and essentially create global hooks to update my components. Obviously not React style, but remember I'm not starting from scratch. So here's an example of enabling the outside-of-React-world be able to call `window.handleIncomingMessage`.\n\n      useEffect(() => {\n          // Function to handle incoming messages\n          const handleIncomingMessage = (message) => {\n              setMessages((prevMessages: string[]) => [...prevMessages, message]);\n          };\n    \n          // Expose the handler to the global scope or use a context\n          (window as any).handleIncomingMessage = handleIncomingMessage;\n    \n          // Cleanup function\n          return () => {};\n      }, []);\n\nOption 3: Use Vue? I haven't researched it as much. I don't think I like their templates as much as JSX, but I've gathered that Vue may be more straightforward and less difficult to deal with state.\n\nThoughts?",
            "comments": [
                {
                    "id": "lw3scd4",
                    "author": "frogic",
                    "body": "I'd lean on chatgpt a bit less if you can or if you do try to use o1 with a lot of context for this kind of refactor. \n\nYou're going to be much better off long term with any project if you reduce global state.  Its not a react problem with their state management system as much as a solution to all the problems involved in having a heavy global state.  In your case it sounds like you're going to attach a handler to the windows object and then you're going to have it mutate state that's also global which is going to rerender your entire application anyway so a context is the same without the messyness of an effect and mutating the global object.  The fact that chatgpt even decided that was an option is a bad sign. \n\nAlso please don't do that as any on window.  [https://stackoverflow.com/questions/12709074/how-do-you-explicitly-set-a-new-property-on-window-in-typescript](https://stackoverflow.com/questions/12709074/how-do-you-explicitly-set-a-new-property-on-window-in-typescript) interface merge anything you add to the window object.  Also set it as thing | undefined so you have to check if its there before running.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731084632.0,
                    "parent_id": "t3_1gmm1hc",
                    "link_id": "t3_1gmm1hc",
                    "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/lw3scd4/"
                },
                {
                    "id": "lxeb06z",
                    "author": "euroq",
                    "body": "I stumbled across Lit and it seems the most appropriate way to abstract away the UI components without a complete rearchitecture for React.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731739180.0,
                    "parent_id": "t3_1gmm1hc",
                    "link_id": "t3_1gmm1hc",
                    "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/lxeb06z/"
                },
                {
                    "id": "lw7l4d3",
                    "author": "le_sils",
                    "body": "The problem is that react itself provides little tooling for state management, unless your app is simple enough to use context you should use something else like Redux or Zustand. Since you also have server updates, with Redux you use rtk query and with Zustand, Tanstack Query or Swr.\n\nThese tools are framework agnostic, so you can migrate your state management to one of them and gripe with react later. Pick a component, migrate state, migrate view to use state, repeat. When you go move the component to react you will already know how to subscribe to the state updates.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731131798.0,
                    "parent_id": "t3_1gmm1hc",
                    "link_id": "t3_1gmm1hc",
                    "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/lw7l4d3/"
                },
                {
                    "id": "lw5dsxd",
                    "author": "euroq",
                    "body": "Yeah, I didn't spruce that snippet up any. What I would actually do is something like this:\n\n    // in file scope\n    export let addNewMessage any;\n    \n    // in JSX.Element\n    useEffect(() => {\n          addNewMessage = (message) => {\n              setMessages((prevMessages: string[]) => [...prevMessages, message]);\n          };\n    \n          // Cleanup function\n          return () => {};\n      }, []);\n    \n    // In the \"outside world\"\n    import { addNewMessage } from './components/MessageArea'\n    addNewMessage(\"Add a message\");",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731101745.0,
                    "parent_id": "t1_lw3scd4",
                    "link_id": "t3_1gmm1hc",
                    "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/lw5dsxd/"
                },
                {
                    "id": "lw5kjoi",
                    "author": "frogic",
                    "body": "That feels like a memory leak but its really dependent on how you use it.  If you have multiple copies of that component I don't think the garbage collectors will clean up the references.  There's also no advantage over a site wide context which would just be a stable single reference that you can access by a hook.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731103854.0,
                    "parent_id": "t1_lw5dsxd",
                    "link_id": "t3_1gmm1hc",
                    "permalink": "/r/reactjs/comments/1gmm1hc/advice_on_migrating_a_mediumsized_electron/lw5kjoi/"
                }
            ]
        },
        {
            "id": "1gmkc9g",
            "title": "Decomposed libraries with Storybook",
            "author": "james-has-redd-it",
            "score": 1,
            "upvotes": 1,
            "downvotes": 0,
            "num_comments": 2,
            "created_utc": 1731077620.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gmkc9g/decomposed_libraries_with_storybook/",
            "permalink": "/r/reactjs/comments/1gmkc9g/decomposed_libraries_with_storybook/",
            "selftext": "I'm a novice and trying to create a fully decomposed library of atomic components with variants, and one which supports nested elemnts. For example a button component with variants for hero-cta and primary-cta, and a hero component which can, when appropriate, contain a hero-cta.\n\nBy default Storybook supports variants but my file structure is going to be a nightmare if I have 100 individual components within the same directory. I've worked in the industry for a long time (not as a dev) and this is often a problem, especially when onboarding new devs to a project. \n\nWhat is your recommended best practice?",
            "comments": [
                {
                    "id": "lwqfdtn",
                    "author": "woah_m8",
                    "body": "usually it is recommended to structure the component code into domains, such as in bulletproof react\n\nmaybe taking a look at the storybook showcase you can get some inspiration on what components you will need to be constructing\n\nhttps://storybook.js.org/showcase",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731411391.0,
                    "parent_id": "t3_1gmkc9g",
                    "link_id": "t3_1gmkc9g",
                    "permalink": "/r/reactjs/comments/1gmkc9g/decomposed_libraries_with_storybook/lwqfdtn/"
                },
                {
                    "id": "lws02d2",
                    "author": "james-has-redd-it",
                    "body": "Thanks. A lot of broken stuff in there, even NASA! It is interesting that it's actually not very consistent across teams, I can clearly see the same issue of trying to organise retrospectively that I've described, although just by using Storybook they're at least trying to address it. For example, having an atoms folder but at the same level of hierarchy a forms folder, which then contains its own atoms folder.\n\nThe Bulletproof React suggestion is much appreciated. The endorsement of that many devs is enough for me. I'll use that when I rebuild my learning project — best way I've found to learn is to build an app then start again and build something similar aiming to do it in 20% of the time I spent on v1.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731432263.0,
                    "parent_id": "t1_lwqfdtn",
                    "link_id": "t3_1gmkc9g",
                    "permalink": "/r/reactjs/comments/1gmkc9g/decomposed_libraries_with_storybook/lws02d2/"
                }
            ]
        },
        {
            "id": "1gmhzzq",
            "title": "The dilemma: How to manage JWT tokens?",
            "author": "Exciting-Attorney938",
            "score": 81,
            "upvotes": 81,
            "downvotes": 0,
            "num_comments": 68,
            "created_utc": 1731070961.0,
            "url": "https://www.reddit.com/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/",
            "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/",
            "selftext": "Hello, I recently started learning React.js through Maximilian course on Udemy. I got to the section about authentication and the method he uses doesn't seem to be very professional, since he stores it in localStorage.\n\nIt's been a bit overwhelming as I try to search for an ideal approach, there is a bunch of them, so I'd like to hear from you, what's the most professional way to handle JWT tokens, and also, of course, being beginner friendly? What would you recommend me to use?",
            "comments": [
                {
                    "id": "lw3413d",
                    "author": "AnUninterestingEvent",
                    "body": "Browsers should just make something called “jwtStorage” for the sake of ending this debate lol.",
                    "score": 123,
                    "upvotes": 123,
                    "downvotes": 0,
                    "created_utc": 1731077400.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3413d/"
                },
                {
                    "id": "lw2qu4a",
                    "author": "contrastivevalue",
                    "body": "Store them in HTTPOnly cookies and include the \"secure: true\" attribute.",
                    "score": 86,
                    "upvotes": 86,
                    "downvotes": 0,
                    "created_utc": 1731072903.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2qu4a/"
                },
                {
                    "id": "lw58m8z",
                    "author": "Merad",
                    "body": "Technically speaking there is no *totally safe* way to manage JWT in the browser.  The only way to win is by not playing the game - use a BFF approach where the client only stores some sort of opaque session token in a cookie, and the actual JWT never leaves the server.  I highly recommend this [NDC Conference presentation](https://www.youtube.com/watch?v=OpFN6gmct8c) to get a better understanding.\n\nIf you watch the video though, all of his attacks are predicated on malicious code running within your app.  IMO, you as an engineer can (should) sit down and apply some critical thinking about what kind of risk your app faces.  If your app loads code from third party sources - CDNs, analytics tools, ads (ads are the big one) - you are carrying a much higher risk of exposing your users to malicious code.  If your app only loads javascript that you host, the risk is much lower.  There is the risk that an npm package could be compromised (or theoretically even npm itself), but it's a very low risk especially if you stick with fairly mainstream well known open source packages.\n\nAnyway, if you think about this and decide that your app will be ok with a JWT stored in the browser, localStorage is perfectly fine.",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731100134.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw58m8z/"
                },
                {
                    "id": "lw2oppx",
                    "author": "khazaddoom311286",
                    "body": "Storing JWT on localSrorage is no unprofessional at all. It’s 1 of the many ways. On the similar lines you can save in sessionStorage too. Or for most advanced cases on memory and only inject to api calls when the call happens. Or the most secure way could be is to get the token from Server as a HTTPonly cookie which you need not store anywhere. Browser would pass such cookies to the api calls automatically. There is no way in which you can pull it using javascript.",
                    "score": 49,
                    "upvotes": 49,
                    "downvotes": 0,
                    "created_utc": 1731072132.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2oppx/"
                },
                {
                    "id": "lw7ro6i",
                    "author": "cpcjain",
                    "body": "Here's what I do:\n\nInitially, the client sends a \\`POST /login\\` request to the server. In response, the server sends back a refresh token, stored as an HttpOnly cookie, and an access token in JSON format. The access token is stored in a global state (e.g., Context API or Redux) so it remains in memory and is not saved in \\`localStorage\\` for security reasons. Later, when the client revisits the site, it sends a \\`GET /refresh\\` request to the server, accompanied by the refresh token from the cookie. The server responds with a new access token in JSON format and a new refresh token, again stored as an HttpOnly cookie. When the user logs out, the client sends a \\`POST /logout\\` request to the server, which clears the refresh token from the cookie. The client then clears the access token from the global state in memory to complete the logout process.  \nFor more security, **refresh token rotation** can be implemented",
                    "score": 6,
                    "upvotes": 6,
                    "downvotes": 0,
                    "created_utc": 1731135609.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7ro6i/"
                },
                {
                    "id": "lw2qpm0",
                    "author": "daniele_s92",
                    "body": ">the method he uses doesn't seem to be very professional, since he stores it in localStorage\n\nDon't be fooled by those who say that JWTs should absolutely be put in HTTP only cookies. It can make it slightly more difficult to steal the token, but it doesn't make it any more difficult to *use* it. If your app is vulnerable to XSS in the first place, you are doomed anyway. I mean, nobody cares what your token is. A threat actor just want to make requests on your behalf. So, why bother stealing the token in the first place if they can make a request on the spot?\n\nPutting it in a HTTP only cookie prevents even some totally valid usage of JWT (eg. Using a token issued from an IdP with a third party server)\n\nTake a read here if you are interested in learning more [https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens](https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens)",
                    "score": 29,
                    "upvotes": 29,
                    "downvotes": 0,
                    "created_utc": 1731072858.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2qpm0/"
                },
                {
                    "id": "lw428d3",
                    "author": "SwiftOneSpeaks",
                    "body": "The \"traditional\" answer is to have the JWT in an HTTP only (meaning not available to JS, not meaning http vs https).  But that leaves the token unavailable to your JS.  That's the point, but if you need to send the JWT not as a cookie (as an \"auth\" header, for an example) the Oauth spec recommends setting up a web worker that acts as a proxy on service calls, where the web worker has access to the token but your direct frontend js doesn't.\n\nI haven't done it yet, (last time I worked with Oauth was before that was in the spec) but that's the official advice.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731087502.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw428d3/"
                },
                {
                    "id": "lw71tcy",
                    "author": "vv1z",
                    "body": "Just keep it in memory",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731122809.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw71tcy/"
                },
                {
                    "id": "lw2prtn",
                    "author": "UsernameINotRegret",
                    "body": "You are right that storing tokens in local storage is not recommended due to being vulnerable to XSS.\n\nThe OAuth best practices spec covers more secure and recommended architectures, such as the ideal option of a backend for frontend that stores the token in a httponly cookie.\n\nThey all have complexity/security tradeoffs so I recommend giving the spec a read and determine what approach you prefer.\n\nhttps://datatracker.ietf.org/doc/html/draft-ietf-oauth-browser-based-apps#name-application-architecture-pa\n\nPersonally I like to just use Remix as a backend for frontend which means I can store the jwt in a secure session cookie. e.g. https://github.com/epicweb-dev/epic-stack/blob/main/app/utils/session.server.ts",
                    "score": 8,
                    "upvotes": 8,
                    "downvotes": 0,
                    "created_utc": 1731072519.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2prtn/"
                },
                {
                    "id": "lw2sbtb",
                    "author": "yksvaan",
                    "body": "Depends on origin and destination of the token. But if possible, default to using httponly cookies. One for access token and one for possible refresh token ( with refresh endpoint as path so it's only sent for that endpoint) \n\n\nKeep it simple, that's the best advice in everything. ",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731073435.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2sbtb/"
                },
                {
                    "id": "lw3ejqp",
                    "author": "ArtThick9279",
                    "body": "It is difficult to use the token in local storage when it is needed and used on the server side component (nextJs) . It was difficult for me, who has less experience",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731080618.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3ejqp/"
                },
                {
                    "id": "lw3qoel",
                    "author": "Altruistic_Steak5869",
                    "body": "Server sessions are much easier and are stateful (Storing some kind of secret string in httponly cookie for the user), but JWT are easier to manage and are stateless. that's what i understood after researching",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731084155.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3qoel/"
                },
                {
                    "id": "lw3qrnf",
                    "author": "Maleficent-Gap-3978",
                    "body": "Store an access token (with a short lifespan) and a CSRF token in session storage or local storage. Your refresh token should be kept in an HTTPonly cookie with \"secure: true\" attribute. You should include a CSRF token when using your refresh token and replace both during refresh. There are other ways to do it, but this what I do for simple apps. FYI OIDC is probably the \"gold-plated\" solution.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731084181.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3qrnf/"
                },
                {
                    "id": "lw48emy",
                    "author": "RedLibra",
                    "body": "That's fine. You either store it in local storage or on cookies. The local storage method is easier to do that's why you see it a lot but both are fine. A lot of tutorials store user's hashed password on database and doing DIY on login/register. In today's standard, that's a lot more \"unprofessional\" than storing jwt tokens on local storage.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731089290.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw48emy/"
                },
                {
                    "id": "lw4f2lz",
                    "author": "start_select",
                    "body": "I see a lot of people saying “cookies” which is fine as a fallback.  But if you want your APIs to support everything (desktop apps, mobile apps, embedded systems) then your tokens should live in headers FIRST.  It’s really annoying as a native developer when APIs rely on browser features instead of general http/tcp features.\n\nA random api client running in a native mobile app does not support cookies.  A random api client running on an arduino does not support cookies.  Don’t use cookies as your final solution if you want truly usable APIs.\n\nIt’s fine to support them.  But use Authorization headers and sessionStorage first.  When you eventually work with a mobile team they will go “oh finally someone competent”.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731091245.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw4f2lz/"
                },
                {
                    "id": "lw55rdj",
                    "author": "Arashi-Tempesta",
                    "body": "ask yourself these questions\n\nare my clients all web pages/react?  \ndo I have mobile clients?  \nwill other services hit my backend?\n\nif the answer to the last question is yes, you will need to have JWT\n\nNow, you can have different auth flows, ideally normally its recommended that you save session creds and such like JWT in a http only cookie, the browser will handle storing it and sending it for you. The issue is that it will only be usable in your domain (mysite dot com), mobile cant use it, services cant use it.  \n  \nBut you can also expose an endpoint that works for those usecases and sends the jwt directly instead of from a cookie.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731099270.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw55rdj/"
                },
                {
                    "id": "lw62551",
                    "author": "Puzzleheaded_Stop770",
                    "body": "store them in the HttpOnly cookie. Generate cookies on the server side just like the following\n\n    res.cookie('__access_token', accessToken, {\n      httpOnly: true,\n      secure: false, // set to true when using https\n      sameSite: 'lax', // set to strinct to prevent xss and csrf attacks\n    });\n\nyou also need to setup CORS for your server. In NodeJs install the cors npm package. Configure it as the following\n\n    const corsAllowedOrigins = [\n      'https://example1.com', // change this to client domain\n      'https://example2.com', // change this to admin domain\n      'http://localhost:3000', // local dev origin\n    ];\n\n    type TCorsOptions = {\n      origin: (\n        origin: string | undefined,\n        callback: (err: Error | null, allow?: boolean) => void\n      ) => void;\n    \n      credentials: boolean;\n    };\n\n    const corsOptions: TCorsOptions = {\n      origin: (origin: string | undefined, callback) => {\n        // Check if the incoming origin is in the allowed list or is undefined (e.g., same origin)\n        if (corsAllowedOrigins.includes(origin!) || !origin) {\n          callback(null, true); // Allow the request\n        } else {\n          callback(new Error('Not allowed by CORS')); // Block the request\n        }\n      },\n      credentials: true, // Enable credentials (cookies, authorization headers)\n    };\n    \n    app.use(cors(corsOptions));\n\n  \nyour server is ready. Now jump to the client\n\nInstall the Axios npm package and setup an Axios instance\n\n    const\n     axiosInstance = axios.create({\n      baseURL: BACKEND_BASE_URL,\n      timeout: 5000,\n    });\n    \n    axiosInstance.defaults.withCredentials = true; // IMPORTANT\n    \n    export { axiosInstance };\n\n  \nyou can create a signIn function just like that\n\n    export \n    async\n     function signInAPI(email: string, passwordHash: string) {\n      \n    const\n     { data } = \n    await\n     axiosInstance.post('/auth/v1/signin', {\n        email,\n        passwordHash,\n      });\n    \n      \n    return\n     data;\n    }\n\n  \nHope it will help.\n\nps: use cookie-parser package on server side the gather your cookies",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731109769.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw62551/"
                },
                {
                    "id": "lw6kt2v",
                    "author": "Bajko44",
                    "body": "Local store is usually fine but the least recommended due to persistent storage and the fact jwts can be snagged with Xss. If you dont sanitize inputs properly you could be vulnerable to people injecting javascript.\n\nIts usually not easy to do this is modern apps because sanitization etc is standard but you never know how mistakes or libraries you use can be compromised.\n\nHttponly cookies are good because they cant steal ur jwt but vulnerable to CSRF since tokens are sent automatically. This can be mitigated by implementing CSRF mitigation techiques, CSRF tokens, samesite cookies, etc. \n\nStore JWT in react context memory and refresh token in httponly cookie.  This is considered safest. More vulnerable to XSS again because JWT are accessible by JS.  That said they are hard to access because ur JWT does not persist and even if it is stolen it will probably expire before its ever able to be used. Also you dont really have to worry about CSRF since jwts arent sent automatically on every request. If you santize properly, and do this ule be very safe and if javadcript somehow gets injected the odds anyone is able to use a jwt is minimal since they are not persistent and expire.\n\nThis requires implementing more logic and access tokens must be fetched literally every page refresh. Also adds a lot of requests.\n\nSession storage for access tokens and refresh in cookies... same benefits but slightly more vulnerable to XSS since more persistent than memory but still good. Does not require requests for access token every page refresh. \n\nTheres other Session storage stuff and advanced shit like background refreshes thats way too deep for my needs to limit requests and be secure... but were getting pretty specific use case at this point.\n\n\nUsually you can just store refresh and access in cookies and implement proper csrf mitigation, or localstorage is usually fine with proper input sanitization. But yeah people can potentially nab and use jwts if you let them inject javascript, also these jwts are dangerous if they dont expire and you dont use refresh tokens. Only you know ur risk tolerance for a project and what level of precautions makes sense.\n\nLocal storage with proper csrf mitigation is usually good for most applications.\n\nAlso im probably 100% wrong, someone will destroy this and this debate will never end.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731116374.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw6kt2v/"
                },
                {
                    "id": "lw7b53b",
                    "author": "horazone",
                    "body": "Split the jwt into two parts: header + payload and signature. Make the signature an HTTP-only cookie to prevent XSS attacks.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731126852.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7b53b/"
                },
                {
                    "id": "lw8d5f6",
                    "author": "tymzap",
                    "body": "Just a fun fact: Firebase Auth stores tokens in IndexedDB",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731149727.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw8d5f6/"
                },
                {
                    "id": "lw8vneb",
                    "author": "Critical-Shop2501",
                    "body": "Max is a great tutor and content creator, and likely uses the best means and methods available. You come along barely knowing react and pass judgement. That’s audacious. Good luck in your journey of righteousness!",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731159362.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw8vneb/"
                },
                {
                    "id": "lwdfb9e",
                    "author": "D4rk_wlngs03",
                    "body": "httponly cookies",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731218106.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwdfb9e/"
                },
                {
                    "id": "lwia7rz",
                    "author": "Healthy-Freedom3750",
                    "body": "Jwt on Httponly cookie, on https connection is a reasonable choice. Limit the life of the cookie and don’t store any personal information on it (no email, username…)",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731287264.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwia7rz/"
                },
                {
                    "id": "lwiy8sq",
                    "author": "armi786",
                    "body": "Jwt should always store in cookies with  secure https configurations and try to make it more strict.\n\nJwt allows to manage the user state stateless \nYou signed the user  data with your private key  so if any one try to temper the user data then the auth check in ur backend get failed .\nHere one disadvaned  is olif your private key get compramise then nothing or can able to create any user data and sign with pk.\n\nThis is at high level ,how jwt works but you can definitely explore more .",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731295977.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwiy8sq/"
                },
                {
                    "id": "lwoyvrl",
                    "author": "LoveThemMegaSeeds",
                    "body": "Save it in an encrypted cookie",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731381566.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwoyvrl/"
                },
                {
                    "id": "lwozgm2",
                    "author": "ImChronoKross",
                    "body": "Yeah. It's best practice to store it in a http only cookie. It just makes it where javascript can't access the JWT. You would eventually want to add refresh tokens, and stuff, but one step at a time :).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731381789.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwozgm2/"
                },
                {
                    "id": "lw2o7wl",
                    "author": "rangeljl",
                    "body": "Security is a complex topic, the client side token can be stored on local storage in the browser without problems, remember that is why is called the client side token ",
                    "score": -4,
                    "upvotes": -4,
                    "downvotes": 0,
                    "created_utc": 1731071949.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2o7wl/"
                },
                {
                    "id": "lw2ut75",
                    "author": "mario_olofo",
                    "body": "I usually use the 2 \"tokens\" approuch, one short lived for access and another encrypted in httpOnly cookie used by the backend to refresh the access tokens.  \nThe access token is keept just in memory during its use.  \nThe way to make this work well is to let the access token be in a Redis storage with an expiration time equal to the token, this way it's fast to check if someone have a valid token.  \nThe encrypted token is used to check in the database if the user is still allowed to access the system, and generate a new access token for them.  \nWhen we need to update the access rules for someone, we just delete the access token from Redis and let the user refresh the token in the next access with the new permissions or be blocked and redirected to the login page with an error message.",
                    "score": -1,
                    "upvotes": -1,
                    "downvotes": 0,
                    "created_utc": 1731074311.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2ut75/"
                },
                {
                    "id": "lw2utbh",
                    "author": "nmolanog",
                    "body": "if you have a backend in node then I would suggest using express-session, passport and memorystore. I am a noob like you, I recently ended my first full stack app and my first approach to authentication and authorization was also JWT, and ended using those libraries I mentioned before,",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731074312.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2utbh/"
                },
                {
                    "id": "lw4k7gq",
                    "author": "Significant-Jicama52",
                    "body": "In my previous job, I used crypto-js to hash the jwt tokens and then store them in localstorage.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731092758.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw4k7gq/"
                },
                {
                    "id": "lw2u50i",
                    "author": "RunningLowOnFucks",
                    "body": "From React? You don’t get to “manage” that. You get them from an httpOnly cookie, then pass it along with every request until the backend asks you to get a new one to get a resource.  \n\n What you’re asking for is like “how do I make Oracle queries from this MIDI file”. You don’t get to, and if you’re asked to you just pass the bucket along until some code with actual access to the thing does it. \n\nOr, I guess, not; at least according to frontend devs here. Do please make sure you share your project’s URLs, my country is going through tough times and vulnerable hosts are valuable. ",
                    "score": -7,
                    "upvotes": -7,
                    "downvotes": 0,
                    "created_utc": 1731074075.0,
                    "parent_id": "t3_1gmhzzq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2u50i/"
                },
                {
                    "id": "lw4gf71",
                    "author": "start_select",
                    "body": "Edit: I kinda talked myself into a corner here.  Jwt doesn’t necessarily live only in headers.  I have used jwt in raw Bluetooth, udp, and tcp comms.  It’s a message format.  This kind of question is about the transport.  Jwt supports many transport layers.  But in http, it lives in the headers.\n\n—-\n\nThat only works if people agree that jwt lives in headers.  Most people store jwt in cookies which assume a session state environment like a browser.\n\nBut jwt is used across servers, in native mobile, native desktop, and native embedded where there isn’t necessarily a concept of session.  They use Authorization headers.  That’s where it should really live.  But these kinds of questions show that most people are oblivious to that minor detail.\n\nIt’s actually important.  Cookies are very browser-centric.  If that’s where jwtToken goes then half the development community is in trouble or really annoyed.",
                    "score": 18,
                    "upvotes": 18,
                    "downvotes": 0,
                    "created_utc": 1731091638.0,
                    "parent_id": "t1_lw3413d",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw4gf71/"
                },
                {
                    "id": "lw6tuy2",
                    "author": "PranosaurSA",
                    "body": "seems like the best way would be something similar to Content Security Policy that comes loaded in the HTML or in the initial fetch headers -  and a different Fetch API that uses the pages metadata that corresponds to a key in jwtStorage to attach to headers - and the policy defines what Domains can use it - so you can configure your app with the necessary 3rd party resource servers.\n\nAny client can set it - only fetch calls to the specified subdomains can read it. Maybe overkill, but when people are continuously confused and this question has been asked thousands of times with many disagreements would be worth it",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731119730.0,
                    "parent_id": "t1_lw3413d",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw6tuy2/"
                },
                {
                    "id": "lw3yhp2",
                    "author": "Ecksters",
                    "body": "The argument for this is that it prevents JS from being able to access the JWT, which prevents potential exploits where XSS could exfiltrate a user's JWT to a malicious actor.\n\nAlso use `SameSite` to prevent CSRF attacks.\n\nWith modern REST APIs and UI libraries like React, these attacks are less likely than they once were since they're blocked by default, but it's still typically considered best practice and simply another layer of security. For that reason though, storing a JWT in LocalStorage isn't inherently unprofessional, it's just considered slightly less secure.",
                    "score": 24,
                    "upvotes": 24,
                    "downvotes": 0,
                    "created_utc": 1731086414.0,
                    "parent_id": "t1_lw2qu4a",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3yhp2/"
                },
                {
                    "id": "lw6wqcy",
                    "author": "NoInkling",
                    "body": "It's funny, we already did signed JSON payloads in HTTPOnly cookies for years, without JWT. In many web frameworks that is/was the default.\n\nThen JWT (sent via separate header) gained popularity because \"you can do stateless auth and avoid server-side session store/database lookups!\" (never mind that that was already possible), \"you can read its data on the client!\", \"you don't need to worry about CSRF!\", \"you can use it in mobile clients that don't have cookie support!\".\n\nAnd now we're back to signed JSON payloads in HTTPOnly cookies (as the default recommendation), except this time it has a name and spec.",
                    "score": 5,
                    "upvotes": 5,
                    "downvotes": 0,
                    "created_utc": 1731120824.0,
                    "parent_id": "t1_lw2qu4a",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw6wqcy/"
                },
                {
                    "id": "lw2ubco",
                    "author": "my_girl_is_A10",
                    "body": "And same site lax or strict",
                    "score": 7,
                    "upvotes": 7,
                    "downvotes": 0,
                    "created_utc": 1731074137.0,
                    "parent_id": "t1_lw2qu4a",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2ubco/"
                },
                {
                    "id": "lwq2dql",
                    "author": "None",
                    "body": "[deleted]",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731403011.0,
                    "parent_id": "t1_lw2qu4a",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwq2dql/"
                },
                {
                    "id": "lw3mywy",
                    "author": "BlacWhiteguy",
                    "body": "Is there any git hub repo which you are using this in so I can have a better understanding?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731083083.0,
                    "parent_id": "t1_lw2oppx",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3mywy/"
                },
                {
                    "id": "lweb811",
                    "author": "flightmasterv2",
                    "body": "what does this \"access token in JSON format\" consist of? would you think of this as like a GET \"/profile\" call?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731238356.0,
                    "parent_id": "t1_lw7ro6i",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lweb811/"
                },
                {
                    "id": "lw7q4ko",
                    "author": "NoInkling",
                    "body": "> If your app is vulnerable to XSS in the first place, you are doomed anyway. I mean, nobody cares what your token is. A threat actor just want to make requests on your behalf. So, why bother stealing the token in the first place if they can make a request on the spot?\n\nAt the very least it's a bit of defense in depth. I find it silly to throw up your hands and say \"oh well, since we can't prevent an XSS attack if we have a vulnerability, might as well not even try to mitigate it\". Presumably you care to some degree about exfiltration if you give your JWTs short expiration times, as is always recommended.\n\nIf you put your tokens in local storage, exfiltration is super easy via generic code, and if the vector is a compromised dependency, they can be obtained in an opportunist, \"wide net\" attack. An exfiltrated token can be used by an attacker directly in a more flexible/ad-hoc/exploratory way, whereas crafting the desired request(s) from the get-go generally requires forethought and knowledge of the specific site. Maybe the initial attack doesn't have the desired effect, so the attacker wants to follow up, but the vector is a pain to use/update/trigger (e.g. need to wait for a specific user to visit a specific page) - that's friction that can limit damage. Additionally an exfiltrated token might provide easy access to private data, if there's any in the payload (there shouldn't be, ideally).\n\nIt's not like there isn't a viable, safer alternative if you want/need access to the token on the client: keeping it closed over in memory. The only disadvantage compared to using local storage is that it's not persisted across full page loads/shared between tabs - to be fair this can complicate implementing a smooth UX for your users, but it's still very doable.",
                    "score": 4,
                    "upvotes": 4,
                    "downvotes": 0,
                    "created_utc": 1731134686.0,
                    "parent_id": "t1_lw2qpm0",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7q4ko/"
                },
                {
                    "id": "lw3afl2",
                    "author": "bitdamaged",
                    "body": "If being used there’s also a difference between session tokens and refresh tokens.    JWT session tokens are designed and meant to be shared with third party services and hosts (or even internal “third party” services)\n\nThose have different security concerns than refresh tokens that should be single host to the auth server.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731079387.0,
                    "parent_id": "t1_lw2qpm0",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3afl2/"
                },
                {
                    "id": "lw2x0q2",
                    "author": "CodeAndBiscuits",
                    "body": "Read what this person said. So many people just regurgitate things they read on blog posts without understanding what's happening at all, and assume HTTP cookies are some cure-all for XSS. It's not.\n\nThat being said if you do have no idea what you're doing it's not a bad start.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731075076.0,
                    "parent_id": "t1_lw2qpm0",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw2x0q2/"
                },
                {
                    "id": "lw493s1",
                    "author": "BrownCarter",
                    "body": "Would httpOnly token work for mobile apps?",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731089496.0,
                    "parent_id": "t1_lw2sbtb",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw493s1/"
                },
                {
                    "id": "lw7td21",
                    "author": "NoInkling",
                    "body": "Cookies are also just HTTP headers at the end of the day, at worst they can always be manually managed for non-browser clients, and often there are \"cookie store\" APIs or libraries available.\n\nBut I agree, if your API is actually an API and not just a \"backend for (web) frontend\", it should support auth header tokens.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731136657.0,
                    "parent_id": "t1_lw4f2lz",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7td21/"
                },
                {
                    "id": "lw3783w",
                    "author": "brustolon1763",
                    "body": "Why not just validate the access token instead of writing it to Redis for lookup on each request? I can see the arguments for writing refresh tokens to Redis (or better, writing revoked refresh tokens to  Redis and doing a revocation check), but writing and checking short-lived access token on each usage seems expensive. Is there a rationale I’m not seeing?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731078403.0,
                    "parent_id": "t1_lw2ut75",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3783w/"
                },
                {
                    "id": "lw59ie7",
                    "author": "daniele_s92",
                    "body": "No offence but this defeats the entire purpose of jwt. Unless you are talking about JWE, but that would be encryption, not hashing.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731100406.0,
                    "parent_id": "t1_lw4k7gq",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw59ie7/"
                },
                {
                    "id": "lw4lc1f",
                    "author": "BlacWhiteguy",
                    "body": "Thanks a lot this was bugging me before when I was doing a project and yeah i definitely won't forget about cors",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731093091.0,
                    "parent_id": "t1_lw4gf71",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw4lc1f/"
                },
                {
                    "id": "lw7ao51",
                    "author": "Psionatix",
                    "body": "If your app is browser based then storing the JWT in a `secure` and `httpOnly` cookie is the best option. You no longer have to worry about rotating the token, you may have to consider CSRF protection, but that’s much easier to deal with.\n\nThe non-browser scenarios you describe don’t necessarily have the same vulnerability concerns or attack surfaces that a browser has.\n\nIf a service authenticating by JWT needs to serve in a browser context, then that context should use a cookie if possible. If the same service is also being consumed by non-browser based clients、then they should have access to a more appropriate means of authenticating. It’s not unheard of to use multiple authentications (I.e. both cookie and JWT), even simultaneously.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731126638.0,
                    "parent_id": "t1_lw4gf71",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7ao51/"
                },
                {
                    "id": "lw7e5l0",
                    "author": "thegainsfairy",
                    "body": "JWT is just a secure way of verifying the integrity of data separately from authentication.\n\nIts prescribed use, its method of transfer, the means to store it, are agnostic. Do I wish there were exacting recommendations of use? yes, but there is a lot of fun flexibility & usefulness.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731128256.0,
                    "parent_id": "t1_lw4gf71",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7e5l0/"
                },
                {
                    "id": "lw7bb79",
                    "author": "Psionatix",
                    "body": "Same-Site and cors are only a partial CSRF protection method.\n\nhttps://portswigger.net/web-security/csrf/bypassing-samesite-restrictions#:~:text=SameSite%20cookie%20restrictions%20provide%20partial,set%20its%20own%20restriction%20level.\n\nI recently discovered portswigger and it has a lot of free and accurate security trainings.\n\nDepending on your usecase, and if you’re relying on traditional form submits, a CSRF token is the best prevention method.",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731126930.0,
                    "parent_id": "t1_lw3yhp2",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7bb79/"
                },
                {
                    "id": "lw656f9",
                    "author": "WrinkledOldMan",
                    "body": "I still feel a bit shaky on my understanding of lax vs strict.  So with lax ... the client will send the cookie when navigating both within, and following any external link that points to the site.  And with strict, the cookie will only be sent on navigation within the site.  Is that correct?  So what security is provided by stict over lax.  Or why would you want to prevent someone from sending it when navigating toward the site?",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731110834.0,
                    "parent_id": "t1_lw2ubco",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw656f9/"
                },
                {
                    "id": "lwqmjbi",
                    "author": "contrastivevalue",
                    "body": "In our fetch request on FE, we include *credentials: \"include\"* option. This ensures that cookies are sent along with the request.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731414972.0,
                    "parent_id": "t1_lwq2dql",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwqmjbi/"
                },
                {
                    "id": "lw4dk17",
                    "author": "havocundersiege",
                    "body": "https://github.com/bravo1goingdark/brevity/blob/master/backend%2Fsrc%2Frouter%2FuserRouter.ts\n\nSee line number 127 aka the login endpoint there I have implemented this\n\nand also see this on how to request sent cookie from the client side \n\nhttps://github.com/bravo1goingdark/brevity/blob/master/backend%2Fsrc%2Fvalidation%2Fmiddleware%2FauthenticateToken.ts\n\n\nand always remember to set credentials: true in cors setting \n\nCheckout the server.ts file in aforementioned repo",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731090802.0,
                    "parent_id": "t1_lw3mywy",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw4dk17/"
                },
                {
                    "id": "lwr1r26",
                    "author": "cpcjain",
                    "body": "just the accessToken and in the cookie there is a refreshToken (/refresh router)  \n\\`\\`\\`  \n{  \n   accessToken: string  \n}  \n\\`\\`\\`  \nand the accessToken itself has the payload of user's database id and email\n\ni don't think of it as a /profile because that is a protected route",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731421118.0,
                    "parent_id": "t1_lweb811",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwr1r26/"
                },
                {
                    "id": "lw7x12x",
                    "author": "daniele_s92",
                    "body": "I somewhat agree that the perfect cookie implementation is slightly more secure than the local storage one. \n\nBut the problem is that cookies greatly increase the surface of things that can be implemented badly, and the minimal implementation is way more complex than the one with local storage (as the server may not be involved at all in the authentication process). If you are able to get everything right, cool. Otherwise better stick with local storage/memory imho.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731138990.0,
                    "parent_id": "t1_lw7q4ko",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw7x12x/"
                },
                {
                    "id": "lwsxlbc",
                    "author": "start_select",
                    "body": "Cookies are vulnerable to CSRF attacks if left in the default config.\n\nIt’s not really “the same”.  They are both vulnerable to XSS.  But cookies require you to use SameSite which is easily forgotten.\n\nJWT is about a secure connection, it shouldn’t be put somewhere that others can easily read it due to incorrectly configured cookies (in the default and incorrect configuration).",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731442505.0,
                    "parent_id": "t1_lw7td21",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwsxlbc/"
                },
                {
                    "id": "lw3n148",
                    "author": "mario_olofo",
                    "body": "Checking the token in a local Redis has some benefits: if it exists, it is enough to know that it is valid and authorized by the system and use the user ID. This way, we can also keep only one access token per user, automatically invalidating all previous ones.  \nI need a benchmark to know how significant the time difference is between checking in Redis and validating the token (parse the json, check the hash, check the \"valid after\" and \"expires in\" attributes, read the user data and check if it is still active).  \nThe refresh tokens we keep it encrypted in the database, and check if it's still valid too when we need a new access token.",
                    "score": 0,
                    "upvotes": 0,
                    "downvotes": 0,
                    "created_utc": 1731083102.0,
                    "parent_id": "t1_lw3783w",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3n148/"
                },
                {
                    "id": "lw5b8f0",
                    "author": "Significant-Jicama52",
                    "body": "Yeah youre right. Wrong wording.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731100930.0,
                    "parent_id": "t1_lw59ie7",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw5b8f0/"
                },
                {
                    "id": "lw6ik01",
                    "author": "my_girl_is_A10",
                    "body": "[https://stackoverflow.com/questions/59990864/what-is-the-difference-between-samesite-lax-and-samesite-strict#:\\~:text=Let's%20say%20a%20user%20is,%2C%20a%20cross%2Dsite%20request.](https://stackoverflow.com/questions/59990864/what-is-the-difference-between-samesite-lax-and-samesite-strict#:~:text=Let's%20say%20a%20user%20is,%2C%20a%20cross%2Dsite%20request)\n\nYou've pretty much got it right. It's a way to, if you don't have a burning need for external links to send cookies, to potentially increase security.\n\nFor example, I have a site that really doesn't have a need for people to navigate to specific pages or links to authenticated pages, so I could use strict.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731115563.0,
                    "parent_id": "t1_lw656f9",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw6ik01/"
                },
                {
                    "id": "lwqq6j7",
                    "author": "None",
                    "body": "[deleted]",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731416574.0,
                    "parent_id": "t1_lwqmjbi",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwqq6j7/"
                },
                {
                    "id": "lw8bjpf",
                    "author": "ibaiway",
                    "body": "I was looking at your code. Really like how it looks. Just one doubt. Are you not using refresh tokens? So I guess after the 6hours the user needs to reauthenticate? \n\nThanks for sharing the code",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731148689.0,
                    "parent_id": "t1_lw4dk17",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw8bjpf/"
                },
                {
                    "id": "lwh7sbf",
                    "author": "sonny-7",
                    "body": "There's no documentation, could I run your app locally in order to see it?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731274314.0,
                    "parent_id": "t1_lw4dk17",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwh7sbf/"
                },
                {
                    "id": "lw3q1dz",
                    "author": "brustolon1763",
                    "body": "You don’t really need to be using JWTs at all in this design. \n\nIf you are signing JWTs, I’d certainly consider verifying them server side before bothering with the Redis lookup - if only to prevent a fake token stuffing attack on the data store.\n\nIt’s cheap to do and if you’re bothering to generate JWTs at all, much better to confirm their validity before use, I think.",
                    "score": 3,
                    "upvotes": 3,
                    "downvotes": 0,
                    "created_utc": 1731083971.0,
                    "parent_id": "t1_lw3n148",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3q1dz/"
                },
                {
                    "id": "lw3nzqz",
                    "author": "mario_olofo",
                    "body": "Note: when I said \"is valid and we can use the user ID\", I meant that the Redis key is the access token and the value is the serialized user already",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731083379.0,
                    "parent_id": "t1_lw3n148",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3nzqz/"
                },
                {
                    "id": "lwqvkvb",
                    "author": "contrastivevalue",
                    "body": "When you login with jwt.sign on BE, you set a cookie  \n\n      res\n          .cookie(\"token\", token, {\n            httpOnly: true,\n            secure: true,\n          })\n\nNow when you include credentials, you no longer have to handle authentication or check it yourself on FE.  For example:\n\n    const response = await fetch(\"http://yourwebsite/checkout\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body:JSON.stringify({}),\n          });\n          const data = await response.json();\n\n  \nOn BE you should have a middleware function that checks if the token in req.cookies (your FE credential, that is) is there and matches your jwt secret key. \n\n    const jwt = require(\"jsonwebtoken\");\n    \n    const verifyToken = async (req, res, next) => {\n      const token = req.cookies.token;\n      if (!token) return res.status(401).json({ message: \"Not authenticated\" });\n    \n      jwt.verify(token, process.env.JWT_SECRET_KEY, async (err, payload) => {\n        if (err) return res.status(403).json({ message: \"Token is not valid\" });\n        req.userId = payload.id;\n        next();\n      });\n    };",
                    "score": 2,
                    "upvotes": 2,
                    "downvotes": 0,
                    "created_utc": 1731418775.0,
                    "parent_id": "t1_lwqq6j7",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwqvkvb/"
                },
                {
                    "id": "lw8bqm9",
                    "author": "havocundersiege",
                    "body": "Yes, I'm not using refresh token so users need to re- authenticate every 6 hours",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731148814.0,
                    "parent_id": "t1_lw8bjpf",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw8bqm9/"
                },
                {
                    "id": "lwjl8bu",
                    "author": "havocundersiege",
                    "body": "Since this was a small side project, I didn't write any documentation. You can run the frontend locally, but the backend requires cloud-hosted Postgres and Redis, so it can't be run locally.",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731306583.0,
                    "parent_id": "t1_lwh7sbf",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwjl8bu/"
                },
                {
                    "id": "lw3rf8v",
                    "author": "mario_olofo",
                    "body": "Yeah, JWT provides a simple way to share tokens with thirdy party services and it's easy debug and detect who's who when we need to check some suspicious activity.\n\n>You don’t really need to be using JWTs at all in this design.\n\n>If you are signing JWTs, I’d certainly consider verifying them server side before bothering with the Redis lookup - if only to prevent a fake token stuffing attack on the data store.\n\nHow someone could try to attack the verification with fake tokens without using brute force? I don't get it. May you provide some example about this kind of attack?",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731084369.0,
                    "parent_id": "t1_lw3q1dz",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lw3rf8v/"
                },
                {
                    "id": "lwqzh79",
                    "author": "None",
                    "body": "[deleted]",
                    "score": 1,
                    "upvotes": 1,
                    "downvotes": 0,
                    "created_utc": 1731420272.0,
                    "parent_id": "t1_lwqvkvb",
                    "link_id": "t3_1gmhzzq",
                    "permalink": "/r/reactjs/comments/1gmhzzq/the_dilemma_how_to_manage_jwt_tokens/lwqzh79/"
                }
            ]
        }
    ]
}